import { AfterViewInit, ElementRef, Renderer2 } from '@angular/core';
import { ClrDropdown } from './dropdown';
import { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';
import { RootDropdownService } from './providers/dropdown.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrDropdownItem implements AfterViewInit {
    private dropdown;
    private el;
    private _dropdownService;
    private renderer;
    private focusableItem;
    constructor(dropdown: ClrDropdown, el: ElementRef<HTMLElement>, _dropdownService: RootDropdownService, renderer: Renderer2, focusableItem: FocusableItem);
    private unlisten;
    setByDeprecatedDisabled: boolean;
    set disabled(value: boolean | string);
    get disabled(): boolean | string;
    set disabledDeprecated(value: boolean | string);
    get disabledDeprecated(): boolean | string;
    /**
     * Let you overwrite the focusable auto increment id.
     */
    set dropdownItemId(value: string);
    get dropdownItemId(): string;
    ngAfterViewInit(): void;
    onDropdownItemClick(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrDropdownItem>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClrDropdownItem, "[clrDropdownItem]", never, {
    "disabled": "clrDisabled";
    "disabledDeprecated": "disabled";
    "dropdownItemId": "id";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbS5kLnRzIiwic291cmNlcyI6WyJkcm9wZG93bi1pdGVtLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2xyRHJvcGRvd24gfSBmcm9tICcuL2Ryb3Bkb3duJztcbmltcG9ydCB7IEZvY3VzYWJsZUl0ZW0gfSBmcm9tICcuLi8uLi91dGlscy9mb2N1cy9mb2N1c2FibGUtaXRlbS9mb2N1c2FibGUtaXRlbSc7XG5pbXBvcnQgeyBSb290RHJvcGRvd25TZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvZHJvcGRvd24uc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDbHJEcm9wZG93bkl0ZW0gaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICBwcml2YXRlIGRyb3Bkb3duO1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSBfZHJvcGRvd25TZXJ2aWNlO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBmb2N1c2FibGVJdGVtO1xuICAgIGNvbnN0cnVjdG9yKGRyb3Bkb3duOiBDbHJEcm9wZG93biwgZWw6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LCBfZHJvcGRvd25TZXJ2aWNlOiBSb290RHJvcGRvd25TZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCBmb2N1c2FibGVJdGVtOiBGb2N1c2FibGVJdGVtKTtcbiAgICBwcml2YXRlIHVubGlzdGVuO1xuICAgIHNldEJ5RGVwcmVjYXRlZERpc2FibGVkOiBib29sZWFuO1xuICAgIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbiB8IHN0cmluZyk7XG4gICAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW4gfCBzdHJpbmc7XG4gICAgc2V0IGRpc2FibGVkRGVwcmVjYXRlZCh2YWx1ZTogYm9vbGVhbiB8IHN0cmluZyk7XG4gICAgZ2V0IGRpc2FibGVkRGVwcmVjYXRlZCgpOiBib29sZWFuIHwgc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIExldCB5b3Ugb3ZlcndyaXRlIHRoZSBmb2N1c2FibGUgYXV0byBpbmNyZW1lbnQgaWQuXG4gICAgICovXG4gICAgc2V0IGRyb3Bkb3duSXRlbUlkKHZhbHVlOiBzdHJpbmcpO1xuICAgIGdldCBkcm9wZG93bkl0ZW1JZCgpOiBzdHJpbmc7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgb25Ecm9wZG93bkl0ZW1DbGljaygpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=