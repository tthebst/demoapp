import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { ClrAlert } from './alert';
import { MultiAlertService } from './providers/multi-alert.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrAlertsPager implements OnInit, OnDestroy {
    multiAlertService: MultiAlertService;
    commonStrings: ClrCommonStringsService;
    private multiAlertServiceChanges;
    /**
     * Input/Output to support two way binding on current alert instance
     */
    set currentAlert(alert: ClrAlert);
    get currentAlert(): ClrAlert;
    currentAlertChange: EventEmitter<ClrAlert>;
    /**
     * Input/Output to support two way binding on current alert index
     */
    set currentAlertIndex(index: number);
    get currentAlertIndex(): number;
    currentAlertIndexChange: EventEmitter<number>;
    constructor(multiAlertService: MultiAlertService, commonStrings: ClrCommonStringsService);
    ngOnInit(): void;
    pageUp(): void;
    pageDown(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrAlertsPager>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrAlertsPager, "clr-alerts-pager", never, {
    "currentAlert": "clrCurrentAlert";
    "currentAlertIndex": "clrCurrentAlertIndex";
}, {
    "currentAlertChange": "clrCurrentAlertChange";
    "currentAlertIndexChange": "clrCurrentAlertIndexChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnRzLXBhZ2VyLmQudHMiLCJzb3VyY2VzIjpbImFsZXJ0cy1wYWdlci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsckFsZXJ0IH0gZnJvbSAnLi9hbGVydCc7XG5pbXBvcnQgeyBNdWx0aUFsZXJ0U2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL211bHRpLWFsZXJ0LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9pMThuL2NvbW1vbi1zdHJpbmdzLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyQWxlcnRzUGFnZXIgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgbXVsdGlBbGVydFNlcnZpY2U6IE11bHRpQWxlcnRTZXJ2aWNlO1xuICAgIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlO1xuICAgIHByaXZhdGUgbXVsdGlBbGVydFNlcnZpY2VDaGFuZ2VzO1xuICAgIC8qKlxuICAgICAqIElucHV0L091dHB1dCB0byBzdXBwb3J0IHR3byB3YXkgYmluZGluZyBvbiBjdXJyZW50IGFsZXJ0IGluc3RhbmNlXG4gICAgICovXG4gICAgc2V0IGN1cnJlbnRBbGVydChhbGVydDogQ2xyQWxlcnQpO1xuICAgIGdldCBjdXJyZW50QWxlcnQoKTogQ2xyQWxlcnQ7XG4gICAgY3VycmVudEFsZXJ0Q2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2xyQWxlcnQ+O1xuICAgIC8qKlxuICAgICAqIElucHV0L091dHB1dCB0byBzdXBwb3J0IHR3byB3YXkgYmluZGluZyBvbiBjdXJyZW50IGFsZXJ0IGluZGV4XG4gICAgICovXG4gICAgc2V0IGN1cnJlbnRBbGVydEluZGV4KGluZGV4OiBudW1iZXIpO1xuICAgIGdldCBjdXJyZW50QWxlcnRJbmRleCgpOiBudW1iZXI7XG4gICAgY3VycmVudEFsZXJ0SW5kZXhDaGFuZ2U6IEV2ZW50RW1pdHRlcjxudW1iZXI+O1xuICAgIGNvbnN0cnVjdG9yKG11bHRpQWxlcnRTZXJ2aWNlOiBNdWx0aUFsZXJ0U2VydmljZSwgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcGFnZVVwKCk6IHZvaWQ7XG4gICAgcGFnZURvd24oKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19