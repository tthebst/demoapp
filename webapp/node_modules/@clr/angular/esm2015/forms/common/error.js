/**
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __param } from "tslib";
import { Component, Optional, ElementRef, AfterViewInit } from '@angular/core';
import { ControlIdService } from './providers/control-id.service';
import { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';
let ClrControlError = class ClrControlError {
    constructor(controlIdService, ariaLiveService, el) {
        this.controlIdService = controlIdService;
        this.ariaLiveService = ariaLiveService;
        this.el = el;
    }
    ngAfterViewInit() {
        /** @deprecated since 3.0, remove in 4.0 */
        this.ariaLiveService.announce(this.el.nativeElement);
    }
};
ClrControlError.ctorParameters = () => [
    { type: ControlIdService, decorators: [{ type: Optional }] },
    { type: ClrAriaLiveService },
    { type: ElementRef }
];
ClrControlError = __decorate([
    Component({
        providers: [ClrAriaLiveService],
        selector: 'clr-control-error',
        template: `
    <ng-content></ng-content>
    `,
        host: {
            '[class.clr-subtext]': 'true',
            '[id]': 'controlIdService?.id + "-error"',
        }
    }),
    __param(0, Optional())
], ClrControlError);
export { ClrControlError };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2xyL2FuZ3VsYXIvIiwic291cmNlcyI6WyJmb3Jtcy9jb21tb24vZXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRzs7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBYXhFLElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7SUFDMUIsWUFDcUIsZ0JBQWtDLEVBQzdDLGVBQW1DLEVBQ25DLEVBQWM7UUFGSCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQzdDLG9CQUFlLEdBQWYsZUFBZSxDQUFvQjtRQUNuQyxPQUFFLEdBQUYsRUFBRSxDQUFZO0lBQ3JCLENBQUM7SUFFSixlQUFlO1FBQ2IsMkNBQTJDO1FBQzNDLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGLENBQUE7O1lBVHdDLGdCQUFnQix1QkFBcEQsUUFBUTtZQUNnQixrQkFBa0I7WUFDL0IsVUFBVTs7QUFKYixlQUFlO0lBWDNCLFNBQVMsQ0FBQztRQUNULFNBQVMsRUFBRSxDQUFDLGtCQUFrQixDQUFDO1FBQy9CLFFBQVEsRUFBRSxtQkFBbUI7UUFDN0IsUUFBUSxFQUFFOztLQUVQO1FBQ0gsSUFBSSxFQUFFO1lBQ0oscUJBQXFCLEVBQUUsTUFBTTtZQUM3QixNQUFNLEVBQUUsaUNBQWlDO1NBQzFDO0tBQ0YsQ0FBQztJQUdHLFdBQUEsUUFBUSxFQUFFLENBQUE7R0FGRixlQUFlLENBVzNCO1NBWFksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgT3B0aW9uYWwsIEVsZW1lbnRSZWYsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xJZFNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9jb250cm9sLWlkLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyQXJpYUxpdmVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvYTExeS9hcmlhLWxpdmUuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBwcm92aWRlcnM6IFtDbHJBcmlhTGl2ZVNlcnZpY2VdLFxuICBzZWxlY3RvcjogJ2Nsci1jb250cm9sLWVycm9yJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgYCxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuY2xyLXN1YnRleHRdJzogJ3RydWUnLFxuICAgICdbaWRdJzogJ2NvbnRyb2xJZFNlcnZpY2U/LmlkICsgXCItZXJyb3JcIicsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIENsckNvbnRyb2xFcnJvciBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBAT3B0aW9uYWwoKSBwdWJsaWMgY29udHJvbElkU2VydmljZTogQ29udHJvbElkU2VydmljZSxcbiAgICBwcml2YXRlIGFyaWFMaXZlU2VydmljZTogQ2xyQXJpYUxpdmVTZXJ2aWNlLFxuICAgIHByaXZhdGUgZWw6IEVsZW1lbnRSZWZcbiAgKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAvKiogQGRlcHJlY2F0ZWQgc2luY2UgMy4wLCByZW1vdmUgaW4gNC4wICovXG4gICAgdGhpcy5hcmlhTGl2ZVNlcnZpY2UuYW5ub3VuY2UodGhpcy5lbC5uYXRpdmVFbGVtZW50KTtcbiAgfVxufVxuIl19