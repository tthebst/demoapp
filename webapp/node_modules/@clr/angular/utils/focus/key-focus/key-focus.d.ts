import { ClrFocusDirection } from './enums/focus-direction.enum';
import { FocusableItem } from './interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class ClrKeyFocus {
    direction: ClrFocusDirection;
    focusOnLoad: boolean;
    private focusChange;
    private clrKeyFocusItems;
    private _focusableItems;
    set focusableItems(elements: Array<FocusableItem>);
    get focusableItems(): Array<FocusableItem>;
    private _current;
    get current(): number;
    private subscriptions;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    handleKeyboardEvent(event: KeyboardEvent): void;
    setClickedItemCurrent(event: any): void;
    resetTabFocus(): void;
    moveTo(position: number): void;
    private positionInRange;
    private get currentItem();
    private currentFocusIsNotFirstItem;
    private currentFocusIsNotLastItem;
    private initializeFocus;
    private listenForItemUpdates;
    private keyAction;
    private nextKeyPressed;
    private prevKeyPressed;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrKeyFocus>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrKeyFocus, "[clrKeyFocus]", never, {
    "direction": "clrDirection";
    "focusOnLoad": "clrFocusOnLoad";
    "focusableItems": "clrKeyFocus";
}, {
    "focusChange": "clrFocusChange";
}, ["clrKeyFocusItems"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5LWZvY3VzLmQudHMiLCJzb3VyY2VzIjpbImtleS1mb2N1cy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsckZvY3VzRGlyZWN0aW9uIH0gZnJvbSAnLi9lbnVtcy9mb2N1cy1kaXJlY3Rpb24uZW51bSc7XG5pbXBvcnQgeyBGb2N1c2FibGVJdGVtIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENscktleUZvY3VzIHtcbiAgICBkaXJlY3Rpb246IENsckZvY3VzRGlyZWN0aW9uO1xuICAgIGZvY3VzT25Mb2FkOiBib29sZWFuO1xuICAgIHByaXZhdGUgZm9jdXNDaGFuZ2U7XG4gICAgcHJpdmF0ZSBjbHJLZXlGb2N1c0l0ZW1zO1xuICAgIHByaXZhdGUgX2ZvY3VzYWJsZUl0ZW1zO1xuICAgIHNldCBmb2N1c2FibGVJdGVtcyhlbGVtZW50czogQXJyYXk8Rm9jdXNhYmxlSXRlbT4pO1xuICAgIGdldCBmb2N1c2FibGVJdGVtcygpOiBBcnJheTxGb2N1c2FibGVJdGVtPjtcbiAgICBwcml2YXRlIF9jdXJyZW50O1xuICAgIGdldCBjdXJyZW50KCk6IG51bWJlcjtcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbnM7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBoYW5kbGVLZXlib2FyZEV2ZW50KGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBzZXRDbGlja2VkSXRlbUN1cnJlbnQoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgcmVzZXRUYWJGb2N1cygpOiB2b2lkO1xuICAgIG1vdmVUbyhwb3NpdGlvbjogbnVtYmVyKTogdm9pZDtcbiAgICBwcml2YXRlIHBvc2l0aW9uSW5SYW5nZTtcbiAgICBwcml2YXRlIGdldCBjdXJyZW50SXRlbSgpO1xuICAgIHByaXZhdGUgY3VycmVudEZvY3VzSXNOb3RGaXJzdEl0ZW07XG4gICAgcHJpdmF0ZSBjdXJyZW50Rm9jdXNJc05vdExhc3RJdGVtO1xuICAgIHByaXZhdGUgaW5pdGlhbGl6ZUZvY3VzO1xuICAgIHByaXZhdGUgbGlzdGVuRm9ySXRlbVVwZGF0ZXM7XG4gICAgcHJpdmF0ZSBrZXlBY3Rpb247XG4gICAgcHJpdmF0ZSBuZXh0S2V5UHJlc3NlZDtcbiAgICBwcml2YXRlIHByZXZLZXlQcmVzc2VkO1xufVxuIl19