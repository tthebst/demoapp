import { EventEmitter, OnDestroy, NgZone } from '@angular/core';
import { RowActionService } from './providers/row-action-service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';
import { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrDatagridActionOverflow implements OnDestroy {
    private rowActionService;
    commonStrings: ClrCommonStringsService;
    private platformId;
    private zone;
    private smartToggleService;
    popoverId: string;
    private subscriptions;
    smartPosition: ClrPopoverPosition;
    constructor(rowActionService: RowActionService, commonStrings: ClrCommonStringsService, platformId: Object, zone: NgZone, smartToggleService: ClrPopoverToggleService, popoverId: string);
    ngOnDestroy(): void;
    closeOverflowContent(event: any): void;
    private _open;
    get open(): boolean;
    private focusFirstButton;
    set open(open: boolean);
    openChange: EventEmitter<boolean>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrDatagridActionOverflow>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrDatagridActionOverflow, "clr-dg-action-overflow", never, {
    "open": "clrDgActionOverflowOpen";
}, {
    "openChange": "clrDgActionOverflowOpenChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtYWN0aW9uLW92ZXJmbG93LmQudHMiLCJzb3VyY2VzIjpbImRhdGFncmlkLWFjdGlvbi1vdmVyZmxvdy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3dBY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvcm93LWFjdGlvbi1zZXJ2aWNlJztcbmltcG9ydCB7IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvaTE4bi9jb21tb24tc3RyaW5ncy5zZXJ2aWNlJztcbmltcG9ydCB7IENsclBvcG92ZXJQb3NpdGlvbiB9IGZyb20gJy4uLy4uL3V0aWxzL3BvcG92ZXIvaW50ZXJmYWNlcy9wb3BvdmVyLXBvc2l0aW9uLmludGVyZmFjZSc7XG5pbXBvcnQgeyBDbHJQb3BvdmVyVG9nZ2xlU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL3BvcG92ZXIvcHJvdmlkZXJzL3BvcG92ZXItdG9nZ2xlLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyRGF0YWdyaWRBY3Rpb25PdmVyZmxvdyBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSByb3dBY3Rpb25TZXJ2aWNlO1xuICAgIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlO1xuICAgIHByaXZhdGUgcGxhdGZvcm1JZDtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSBzbWFydFRvZ2dsZVNlcnZpY2U7XG4gICAgcG9wb3ZlcklkOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb25zO1xuICAgIHNtYXJ0UG9zaXRpb246IENsclBvcG92ZXJQb3NpdGlvbjtcbiAgICBjb25zdHJ1Y3Rvcihyb3dBY3Rpb25TZXJ2aWNlOiBSb3dBY3Rpb25TZXJ2aWNlLCBjb21tb25TdHJpbmdzOiBDbHJDb21tb25TdHJpbmdzU2VydmljZSwgcGxhdGZvcm1JZDogT2JqZWN0LCB6b25lOiBOZ1pvbmUsIHNtYXJ0VG9nZ2xlU2VydmljZTogQ2xyUG9wb3ZlclRvZ2dsZVNlcnZpY2UsIHBvcG92ZXJJZDogc3RyaW5nKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIGNsb3NlT3ZlcmZsb3dDb250ZW50KGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgX29wZW47XG4gICAgZ2V0IG9wZW4oKTogYm9vbGVhbjtcbiAgICBwcml2YXRlIGZvY3VzRmlyc3RCdXR0b247XG4gICAgc2V0IG9wZW4ob3BlbjogYm9vbGVhbik7XG4gICAgb3BlbkNoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xufVxuIl19