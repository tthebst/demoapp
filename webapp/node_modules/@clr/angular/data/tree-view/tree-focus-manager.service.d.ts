import { Observable } from 'rxjs';
import { TreeNodeModel } from './models/tree-node.model';
import * as ɵngcc0 from '@angular/core';
export declare class TreeFocusManagerService<T> {
    rootNodeModels: TreeNodeModel<T>[];
    private focusedNodeId;
    private _focusRequest;
    private _focusChange;
    get focusRequest(): Observable<string>;
    get focusChange(): Observable<string>;
    private findSiblings;
    private findLastVisibleInNode;
    private findNextFocusable;
    private findLastVisibleInTree;
    private findNodeAbove;
    private findNodeBelow;
    focusNode(model: TreeNodeModel<T>): void;
    broadcastFocusedNode(nodeId: string): void;
    focusParent(model: TreeNodeModel<T>): void;
    focusFirstVisibleNode(): void;
    focusLastVisibleNode(): void;
    focusNodeAbove(model: TreeNodeModel<T>): void;
    focusNodeBelow(model: TreeNodeModel<T>): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TreeFocusManagerService<any>>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<TreeFocusManagerService<any>>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1mb2N1cy1tYW5hZ2VyLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsidHJlZS1mb2N1cy1tYW5hZ2VyLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBUcmVlTm9kZU1vZGVsIH0gZnJvbSAnLi9tb2RlbHMvdHJlZS1ub2RlLm1vZGVsJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRyZWVGb2N1c01hbmFnZXJTZXJ2aWNlPFQ+IHtcbiAgICByb290Tm9kZU1vZGVsczogVHJlZU5vZGVNb2RlbDxUPltdO1xuICAgIHByaXZhdGUgZm9jdXNlZE5vZGVJZDtcbiAgICBwcml2YXRlIF9mb2N1c1JlcXVlc3Q7XG4gICAgcHJpdmF0ZSBfZm9jdXNDaGFuZ2U7XG4gICAgZ2V0IGZvY3VzUmVxdWVzdCgpOiBPYnNlcnZhYmxlPHN0cmluZz47XG4gICAgZ2V0IGZvY3VzQ2hhbmdlKCk6IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgICBwcml2YXRlIGZpbmRTaWJsaW5ncztcbiAgICBwcml2YXRlIGZpbmRMYXN0VmlzaWJsZUluTm9kZTtcbiAgICBwcml2YXRlIGZpbmROZXh0Rm9jdXNhYmxlO1xuICAgIHByaXZhdGUgZmluZExhc3RWaXNpYmxlSW5UcmVlO1xuICAgIHByaXZhdGUgZmluZE5vZGVBYm92ZTtcbiAgICBwcml2YXRlIGZpbmROb2RlQmVsb3c7XG4gICAgZm9jdXNOb2RlKG1vZGVsOiBUcmVlTm9kZU1vZGVsPFQ+KTogdm9pZDtcbiAgICBicm9hZGNhc3RGb2N1c2VkTm9kZShub2RlSWQ6IHN0cmluZyk6IHZvaWQ7XG4gICAgZm9jdXNQYXJlbnQobW9kZWw6IFRyZWVOb2RlTW9kZWw8VD4pOiB2b2lkO1xuICAgIGZvY3VzRmlyc3RWaXNpYmxlTm9kZSgpOiB2b2lkO1xuICAgIGZvY3VzTGFzdFZpc2libGVOb2RlKCk6IHZvaWQ7XG4gICAgZm9jdXNOb2RlQWJvdmUobW9kZWw6IFRyZWVOb2RlTW9kZWw8VD4pOiB2b2lkO1xuICAgIGZvY3VzTm9kZUJlbG93KG1vZGVsOiBUcmVlTm9kZU1vZGVsPFQ+KTogdm9pZDtcbn1cbiJdfQ==