{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@clr/angular/utils/popover/enums/viewport-violation.enum.ts","ng://@clr/angular/utils/popover/enums/alignment.enum.ts","ng://@clr/angular/icon/icon.ts","ng://@clr/angular/icon/icon.module.ts","ng://@clr/angular/utils/popover/providers/popover-toggle.service.ts","ng://@clr/angular/utils/popover/providers/popover-events.service.ts","ng://@clr/angular/utils/popover/position-operators.ts","ng://@clr/angular/utils/popover/enums/axis.enum.ts","ng://@clr/angular/utils/loading/loading.ts","ng://@clr/angular/utils/popover/providers/popover-position.service.ts","ng://@clr/angular/utils/popover/popover-content.ts","ng://@clr/angular/utils/popover/popover-open-close-button.ts","ng://@clr/angular/utils/popover/popover-close-button.ts","ng://@clr/angular/utils/popover/popover-anchor.ts","ng://@clr/angular/utils/popover/popover.module.ts","ng://@clr/angular/utils/loading/loading-listener.ts","ng://@clr/angular/button/providers/button-in-group.service.ts","ng://@clr/angular/button/button-group/button.ts","ng://@clr/angular/utils/i18n/common-strings.service.ts","ng://@clr/angular/utils/id-generator/id-generator.service.ts","ng://@clr/angular/utils/popover/enums/side.enum.ts","ng://@clr/angular/utils/popover/enums/positions.enum.ts","ng://@clr/angular/utils/a11y/aria-live.service.ts","ng://@clr/angular/button/button-group/button-group.ts","ng://@clr/angular/button/button-group/button-group.module.ts","ng://@clr/angular/button/button-loading/loading-button.ts","ng://@clr/angular/button/button-loading/loading-button.module.ts","ng://@clr/angular/button/button.module.ts","ng://@clr/angular/utils/host-wrapping/empty-anchor.ts","ng://@clr/angular/utils/host-wrapping/host-wrapping.module.ts","ng://@clr/angular/forms/common/providers/control-id.service.ts","ng://@clr/angular/forms/common/providers/layout.service.ts","ng://@clr/angular/forms/common/error.ts","ng://@clr/angular/forms/common/helper.ts","ng://@clr/angular/forms/common/providers/ng-control.service.ts","ng://@clr/angular/forms/common/if-error/if-error.service.ts","ng://@clr/angular/forms/common/if-error/if-error.ts","ng://@clr/angular/forms/common/label.ts","ng://@clr/angular/forms/common/providers/mark-control.service.ts","ng://@clr/angular/forms/common/form.ts","ng://@clr/angular/forms/common/layout.ts","ng://@clr/angular/forms/common/providers/control-class.service.ts","ng://@clr/angular/forms/common/abstract-container.ts","ng://@clr/angular/forms/common/control-container.ts","ng://@clr/angular/utils/host-wrapping/host-wrapper.ts","ng://@clr/angular/forms/common/wrapped-control.ts","ng://@clr/angular/forms/common/control.ts","ng://@clr/angular/forms/common/common.module.ts","ng://@clr/angular/forms/checkbox/checkbox-wrapper.ts","ng://@clr/angular/forms/checkbox/checkbox.ts","ng://@clr/angular/forms/checkbox/checkbox-container.ts","ng://@clr/angular/forms/checkbox/checkbox.module.ts","ng://@clr/angular/utils/conditional/if-active.service.ts","ng://@clr/angular/utils/conditional/if-active.directive.ts","ng://@clr/angular/utils/conditional/if-open.directive.ts","ng://@clr/angular/utils/conditional/if-expanded.service.ts","ng://@clr/angular/utils/conditional/if-expanded.directive.ts","ng://@clr/angular/utils/conditional/conditional.module.ts","ng://@clr/angular/utils/focus-trap/focus-trap-tracker.service.ts","ng://@clr/angular/utils/focus-trap/focus-trap.directive.ts","ng://@clr/angular/utils/focus-trap/focus-trap.module.ts","ng://@clr/angular/forms/datepicker/utils/constants.ts","ng://@clr/angular/forms/datepicker/utils/date-utils.ts","ng://@clr/angular/forms/datepicker/model/day-view.model.ts","ng://@clr/angular/forms/datepicker/model/day.model.ts","ng://@clr/angular/forms/datepicker/model/calendar-view.model.ts","ng://@clr/angular/forms/datepicker/model/calendar.model.ts","ng://@clr/angular/forms/datepicker/providers/date-navigation.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-focus.service.ts","ng://@clr/angular/forms/datepicker/providers/locale-helper.service.ts","ng://@clr/angular/forms/datepicker/providers/date-io.service.ts","ng://@clr/angular/forms/datepicker/calendar.ts","ng://@clr/angular/utils/key-codes/key-codes.ts","ng://@clr/angular/forms/common/providers/focus.service.ts","ng://@clr/angular/forms/datepicker/providers/date-form-control.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-enabled.service.ts","ng://@clr/angular/utils/breakpoints/breakpoints.ts","ng://@clr/angular/forms/datepicker/providers/view-manager.service.ts","ng://@clr/angular/forms/datepicker/date-container.ts","ng://@clr/angular/utils/component/is-boolean-attribute-set.ts","ng://@clr/angular/forms/datepicker/date-input.ts","ng://@clr/angular/forms/datepicker/datepicker-view-manager.ts","ng://@clr/angular/forms/datepicker/day.ts","ng://@clr/angular/forms/datepicker/daypicker.ts","ng://@clr/angular/forms/datepicker/monthpicker.ts","ng://@clr/angular/forms/datepicker/model/year-range.model.ts","ng://@clr/angular/forms/datepicker/yearpicker.ts","ng://@clr/angular/forms/datepicker/datepicker.module.ts","ng://@clr/angular/forms/input/input-container.ts","ng://@clr/angular/forms/input/input.ts","ng://@clr/angular/forms/input/input.module.ts","ng://@clr/angular/forms/password/password-container.ts","ng://@clr/angular/utils/drag-and-drop/interfaces/drag-event.interface.ts","ng://@clr/angular/forms/password/password.ts","ng://@clr/angular/forms/password/password.module.ts","ng://@clr/angular/forms/radio/radio-wrapper.ts","ng://@clr/angular/forms/radio/radio.ts","ng://@clr/angular/forms/radio/radio-container.ts","ng://@clr/angular/forms/radio/radio.module.ts","ng://@clr/angular/forms/select/select-container.ts","ng://@clr/angular/forms/select/select.ts","ng://@clr/angular/forms/select/select.module.ts","ng://@clr/angular/forms/textarea/textarea-container.ts","ng://@clr/angular/forms/textarea/textarea.ts","ng://@clr/angular/forms/textarea/textarea.module.ts","ng://@clr/angular/forms/range/range-container.ts","ng://@clr/angular/forms/range/range.ts","ng://@clr/angular/forms/range/range.module.ts","ng://@clr/angular/forms/datalist/providers/datalist-id.service.ts","ng://@clr/angular/forms/datalist/datalist-container.ts","ng://@clr/angular/forms/datalist/datalist-input.ts","ng://@clr/angular/forms/datalist/datalist.ts","ng://@clr/angular/forms/datalist/datalist.module.ts","ng://@clr/angular/forms/forms.module.ts","ng://@clr/angular/utils/loading/loading.module.ts","ng://@clr/angular/utils/outside-click/outside-click.ts","ng://@clr/angular/utils/outside-click/index.ts","ng://@clr/angular/utils/outside-click/outside-click.module.ts","ng://@clr/angular/utils/dom-adapter/dom-adapter.ts","ng://@clr/angular/utils/drag-and-drop/drag-event.ts","ng://@clr/angular/data/datagrid/enums/sort-order.enum.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-and-drop-event-bus.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-event-listener.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/draggable-snapshot.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable-ghost.ts","ng://@clr/angular/utils/drag-and-drop/if-dragged.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-handle-registrar.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/global-drag-mode.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable/draggable.ts","ng://@clr/angular/utils/drag-and-drop/droppable/droppable.ts","ng://@clr/angular/utils/drag-and-drop/drag-handle.ts","ng://@clr/angular/utils/drag-and-drop/drag-and-drop.module.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.ts","ng://@clr/angular/utils/animations/expandable-animation/index.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.module.ts","ng://@clr/angular/progress/spinner/spinner.ts","ng://@clr/angular/progress/spinner/spinner.module.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.provider.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.module.ts","ng://@clr/angular/data/datagrid/providers/custom-filter.ts","ng://@clr/angular/data/datagrid/providers/state-debouncer.provider.ts","ng://@clr/angular/data/datagrid/providers/page.ts","ng://@clr/angular/data/datagrid/providers/filters.ts","ng://@clr/angular/data/datagrid/utils/datagrid-filter-registrar.ts","ng://@clr/angular/data/datagrid/datagrid-filter.ts","ng://@clr/angular/data/datagrid/built-in/nested-property.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-numeric-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter.ts","ng://@clr/angular/utils/chocolate/oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/row-action-service.ts","ng://@clr/angular/utils/chocolate/willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/datagrid-willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/actionable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/detail.service.ts","ng://@clr/angular/data/datagrid/providers/global-expandable-rows.ts","ng://@clr/angular/data/datagrid/chocolate/expandable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/built-in/comparators/datagrid-property-comparator.ts","ng://@clr/angular/data/datagrid/enums/display-mode.enum.ts","ng://@clr/angular/data/datagrid/enums/render-step.enum.ts","ng://@clr/angular/data/datagrid/providers/sort.ts","ng://@clr/angular/data/datagrid/wrapped-column.ts","ng://@clr/angular/data/datagrid/datagrid-column.ts","ng://@clr/angular/data/datagrid/providers/items.ts","ng://@clr/angular/data/datagrid/datagrid-items.ts","ng://@clr/angular/data/datagrid/datagrid-placeholder.ts","ng://@clr/angular/popover/common/popover-host-anchor.token.ts","ng://@clr/angular/popover/signpost/providers/signpost-focus-manager.service.ts","ng://@clr/angular/popover/signpost/providers/signpost-id.service.ts","ng://@clr/angular/popover/signpost/signpost-trigger.ts","ng://@clr/angular/popover/signpost/signpost.ts","ng://@clr/angular/data/datagrid/wrapped-cell.ts","ng://@clr/angular/data/datagrid/datagrid-cell.ts","ng://@clr/angular/data/datagrid/enums/selection-type.ts","ng://@clr/angular/data/datagrid/render/render-organizer.ts","ng://@clr/angular/data/datagrid/providers/display-mode.service.ts","ng://@clr/angular/data/datagrid/providers/selection.ts","ng://@clr/angular/data/datagrid/enums/column-changes.enum.ts","ng://@clr/angular/data/datagrid/wrapped-row.ts","ng://@clr/angular/data/datagrid/datagrid-if-expanded.service.ts","ng://@clr/angular/data/datagrid/datagrid-row.ts","ng://@clr/angular/data/datagrid/providers/state.provider.ts","ng://@clr/angular/data/datagrid/providers/table-size.service.ts","ng://@clr/angular/data/datagrid/providers/columns.service.ts","ng://@clr/angular/data/datagrid/datagrid.ts","ng://@clr/angular/data/datagrid/datagrid-action-bar.ts","ng://@clr/angular/data/datagrid/datagrid-action-overflow.ts","ng://@clr/angular/data/datagrid/providers/column-resizer.service.ts","ng://@clr/angular/data/datagrid/datagrid-column-separator.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-title.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-button.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle.ts","ng://@clr/angular/data/datagrid/datagrid-detail-registerer.ts","ng://@clr/angular/data/datagrid/datagrid-detail-header.ts","ng://@clr/angular/data/datagrid/datagrid-detail.ts","ng://@clr/angular/data/datagrid/datagrid-if-detail.ts","ng://@clr/angular/data/datagrid/datagrid-detail-body.ts","ng://@clr/angular/data/datagrid/datagrid-footer.ts","ng://@clr/angular/data/datagrid/providers/column-state.provider.ts","ng://@clr/angular/data/tree-view/models/selected-state.enum.ts","ng://@clr/angular/data/datagrid/datagrid-hideable-column.ts","ng://@clr/angular/data/datagrid/datagrid-items-trackby.ts","ng://@clr/angular/data/datagrid/datagrid-page-size.ts","ng://@clr/angular/data/datagrid/datagrid-pagination.ts","ng://@clr/angular/data/datagrid/datagrid-row-detail.ts","ng://@clr/angular/data/datagrid/render/cell-renderer.ts","ng://@clr/angular/data/datagrid/render/constants.ts","ng://@clr/angular/data/datagrid/render/header-renderer.ts","ng://@clr/angular/data/datagrid/render/noop-dom-adapter.ts","ng://@clr/angular/data/datagrid/render/row-renderer.ts","ng://@clr/angular/data/datagrid/render/main-renderer.ts","ng://@clr/angular/data/datagrid/datagrid.module.ts","ng://@clr/angular/data/stack-view/stack-block.ts","ng://@clr/angular/data/stack-view/stack-view.ts","ng://@clr/angular/data/stack-view/stack-header.ts","ng://@clr/angular/data/stack-view/stack-control.ts","ng://@clr/angular/data/stack-view/stack-input.ts","ng://@clr/angular/data/stack-view/stack-select.ts","ng://@clr/angular/data/stack-view/stack-view-custom-tags.ts","ng://@clr/angular/data/stack-view/stack-content-input.ts","ng://@clr/angular/data/stack-view/stack-view.module.ts","ng://@clr/angular/utils/focus/key-focus/util.ts","ng://@clr/angular/data/tree-view/models/tree-node.model.ts","ng://@clr/angular/data/tree-view/models/declarative-tree-node.model.ts","ng://@clr/angular/data/tree-view/tree-features.service.ts","ng://@clr/angular/data/tree-view/tree-focus-manager.service.ts","ng://@clr/angular/data/tree-view/tree-node-link.ts","ng://@clr/angular/data/tree-view/tree-node.ts","ng://@clr/angular/data/tree-view/tree.ts","ng://@clr/angular/data/tree-view/models/recursive-tree-node.model.ts","ng://@clr/angular/utils/focus/arrow-key-direction.enum.ts","ng://@clr/angular/data/tree-view/models/async-array.ts","ng://@clr/angular/data/tree-view/recursive-for-of.ts","ng://@clr/angular/data/tree-view/recursive-children.ts","ng://@clr/angular/data/tree-view/tree-view.module.ts","ng://@clr/angular/data/data.module.ts","ng://@clr/angular/utils/focus/focusable-item/focusable-item.ts","ng://@clr/angular/utils/focus/focusable-item/custom-focusable-item-provider.ts","ng://@clr/angular/utils/focus/focus.service.ts","ng://@clr/angular/utils/focus/focusable-item/linkers.ts","ng://@clr/angular/utils/focus/wrap-observable.ts","ng://@clr/angular/popover/dropdown/providers/dropdown-focus-handler.service.ts","ng://@clr/angular/popover/dropdown/providers/dropdown.service.ts","ng://@clr/angular/popover/common/popover.ts","ng://@clr/angular/popover/dropdown/dropdown.ts","ng://@clr/angular/utils/focus/focusable-item/basic-focusable-item.service.ts","ng://@clr/angular/popover/dropdown/dropdown-item.ts","ng://@clr/angular/layout/tabs/enums/tabs-layout.enum.ts","ng://@clr/angular/popover/common/abstract-popover.ts","ng://@clr/angular/popover/dropdown/dropdown-menu.ts","ng://@clr/angular/popover/dropdown/dropdown-trigger.ts","ng://@clr/angular/popover/dropdown/dropdown.module.ts","ng://@clr/angular/emphasis/alert/utils/alert-types.ts","ng://@clr/angular/emphasis/alert/providers/icon-and-types.service.ts","ng://@clr/angular/emphasis/alert/providers/multi-alert.service.ts","ng://@clr/angular/emphasis/alert/alert-text.ts","ng://@clr/angular/emphasis/alert/alert.ts","ng://@clr/angular/emphasis/alert/alert-item.ts","ng://@clr/angular/emphasis/alert/alerts.ts","ng://@clr/angular/emphasis/alert/alerts-pager.ts","ng://@clr/angular/emphasis/alert/alert.module.ts","ng://@clr/angular/emphasis/emphasis.module.ts","ng://@clr/angular/layout/nav/responsive-nav-codes.ts","ng://@clr/angular/layout/nav/responsive-nav-control-message.ts","ng://@clr/angular/layout/nav/providers/responsive-navigation.service.ts","ng://@clr/angular/layout/main-container/main-container.ts","ng://@clr/angular/layout/main-container/main-container.module.ts","ng://@clr/angular/layout/nav/chocolate/main-container-willy-wonka.ts","ng://@clr/angular/layout/nav/chocolate/nav-detection-oompa-loompa.ts","ng://@clr/angular/layout/nav/header.ts","ng://@clr/angular/layout/nav/nav-level.ts","ng://@clr/angular/layout/nav/navigation.module.ts","ng://@clr/angular/utils/template-ref/template-ref-container.ts","ng://@clr/angular/utils/template-ref/index.ts","ng://@clr/angular/utils/template-ref/template-ref.module.ts","ng://@clr/angular/layout/tabs/chocolate/tabs-willy-wonka.ts","ng://@clr/angular/layout/tabs/chocolate/active-oompa-loompa.ts","ng://@clr/angular/layout/tabs/providers/aria.service.ts","ng://@clr/angular/layout/tabs/providers/tabs.service.ts","ng://@clr/angular/layout/tabs/tab-content.ts","ng://@clr/angular/layout/tabs/tabs-id.provider.ts","ng://@clr/angular/utils/focus/key-focus/enums/focus-direction.enum.ts","ng://@clr/angular/layout/tabs/tab-link.directive.ts","ng://@clr/angular/layout/tabs/tab.ts","ng://@clr/angular/layout/tabs/tab-overflow-content.ts","ng://@clr/angular/utils/focus/key-focus/key-focus-item.ts","ng://@clr/angular/accordion/enums/accordion-strategy.enum.ts","ng://@clr/angular/accordion/enums/accordion-status.enum.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.ts","ng://@clr/angular/layout/tabs/tabs.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.module.ts","ng://@clr/angular/layout/tabs/tabs.module.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group-registration.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-icon.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group-children.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-icon.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-link.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.module.ts","ng://@clr/angular/layout/layout.module.ts","ng://@clr/angular/utils/scrolling/scrolling-service.ts","ng://@clr/angular/modal/modal.ts","ng://@clr/angular/modal/modal-body.ts","ng://@clr/angular/modal/modal.module.ts","ng://@clr/angular/popover/signpost/signpost-positions.ts","ng://@clr/angular/popover/signpost/signpost-content.ts","ng://@clr/angular/popover/signpost/signpost.module.ts","ng://@clr/angular/popover/tooltip/providers/tooltip-id.service.ts","ng://@clr/angular/popover/tooltip/tooltip.ts","ng://@clr/angular/popover/tooltip/tooltip-content.ts","ng://@clr/angular/popover/tooltip/tooltip-trigger.ts","ng://@clr/angular/popover/tooltip/tooltip.module.ts","ng://@clr/angular/popover/popover.module.ts","ng://@clr/angular/wizard/providers/button-hub.service.ts","ng://@clr/angular/wizard/providers/page-collection.service.ts","ng://@clr/angular/wizard/providers/wizard-navigation.service.ts","ng://@clr/angular/wizard/providers/header-actions.service.ts","ng://@clr/angular/wizard/wizard-header-action.ts","ng://@clr/angular/wizard/wizard-page-buttons.ts","ng://@clr/angular/wizard/wizard-page-header-actions.ts","ng://@clr/angular/wizard/wizard-page-navtitle.ts","ng://@clr/angular/wizard/wizard-page-title.ts","ng://@clr/angular/wizard/wizard-page.ts","ng://@clr/angular/wizard/wizard.ts","ng://@clr/angular/wizard/wizard-button.ts","ng://@clr/angular/wizard/wizard-custom-tags.ts","ng://@clr/angular/wizard/wizard-stepnav.ts","ng://@clr/angular/wizard/wizard-stepnav-item.ts","ng://@clr/angular/wizard/wizard.module.ts","ng://@clr/angular/accordion/models/accordion.model.ts","ng://@clr/angular/accordion/providers/accordion.service.ts","ng://@clr/angular/accordion/utils/animation.ts","ng://@clr/angular/utils/animations/constants.ts","ng://@clr/angular/accordion/accordion-description.ts","ng://@clr/angular/accordion/accordion-panel.ts","ng://@clr/angular/accordion/accordion-title.ts","ng://@clr/angular/accordion/accordion.ts","ng://@clr/angular/accordion/accordion-content.ts","ng://@clr/angular/accordion/chocolate/accordion-willy-wonka.ts","ng://@clr/angular/accordion/chocolate/accordion-oompa-loompa.ts","ng://@clr/angular/accordion/accordion.module.ts","ng://@clr/angular/accordion/stepper/models/stepper.model.ts","ng://@clr/angular/accordion/stepper/providers/stepper.service.ts","ng://@clr/angular/accordion/stepper/step-button.ts","ng://@clr/angular/accordion/stepper/stepper-panel.ts","ng://@clr/angular/utils/forms/validation.ts","ng://@clr/angular/accordion/stepper/stepper.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-willy-wonka.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-oompa-loompa.ts","ng://@clr/angular/accordion/stepper/stepper.module.ts","ng://@clr/angular/progress/progress-bars/progress-bar.ts","ng://@clr/angular/progress/progress-bars/progress-bar.module.ts","ng://@clr/angular/clr-angular.module.ts","ng://@clr/angular/popover/dropdown/menu-positions.ts","ng://@clr/angular/utils/animations/collapse/collapse.ts","ng://@clr/angular/utils/animations/fade/fade.ts","ng://@clr/angular/utils/animations/fade-slide/fade-slide.ts","ng://@clr/angular/utils/animations/slide/slide.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ClrViewportViolation","ClrAlignment","ClrIconCustomTag","Directive","selector","CLR_ICON_DIRECTIVES","ClrIconModule","NgModule","imports","CommonModule","declarations","exports","ClrPopoverToggleService","_open","_openChange","Subject","_openEventChange","asObservable","_openEvent","event","getEventChange","toggleWithEvent","openEvent","open","Injectable","ClrPopoverEventsService","renderer","smartOpenService","document","_this","outsideClickClose","scrollToClose","subscriptions","openChange","subscribe","addEscapeListener","addClickListener","addScrollListener","removeAllEventListeners","ignoredEvent","documentScroller","fromEvent","capture","scrollSubscription","pipe","filter","testForSmartPopoverContentContainer","setAnchorFocus","removeScrollListener","unsubscribe","classList","parentElement","localName","contains","documentClickListener","listen","focus","removeClickListener","escapeListener","removeEscapeListener","_anchorButtonRef","ref","_closeButtonRef","setCloseFocus","nativeElement","anchorButtonRef","_contentRef","host","ngOnDestroy","forEach","sub","Renderer2","HTMLDocument","type","Inject","args","DOCUMENT","ClrAxis","flipSides","position","side","nudgeContent","forward","nextAlignment","content","flipSidesAndNudgeContent","flip","nudge","nudgeBack","align","anchor","xDiff","left","yDiff","top","axis","alignHorizontal","height","width","alignVertical","xOffset","yOffset","horizontalOffset","START","CENTER","END","verticalOffset","ClrLoadingState","ClrPopoverPositionService","eventService","platformId","_shouldRealign","shouldRealign","realign","_position","alignContent","isPlatformBrowser","currentAnchorCoords","getBoundingClientRect","currentContentCoords","contentOffsets","visibilityViolations","offset","violations","mockCoords","TOP","LEFT","window","innerHeight","documentElement","clientHeight","BOTTOM","innerWidth","clientWidth","RIGHT","testVisibility","errorSum","reduce","count","current","VERTICAL","handleVerticalAxisOneViolation","HORIZONTAL","handleHorizontalAxisOneViolation","handleVerticalAxisTwoViolations","handleHorizontalAxisTwoViolations","flipAndNudgeLeft","flipAndNudgeRight","flipAndNudgeDown","flipAndNudgeUp","PLATFORM_ID","ClrPopoverContent","container","template","smartPositionService","smartEventsService","checkCollector","EventEmitter","clickToClose","ngAfterViewInit","change","addContent","removeContent","setStyle","view","rootNodes","debounceTime","node","removeChild","body","clear","createEmbeddedView","contentRef","addClass","appendChild","ngAfterContentChecked","emit","positionCoords","ViewContainerRef","TemplateRef","Input","ClrPopoverOpenCloseButton","openCloseChange","handleClick","Output","HostListener","[class.clr-smart-open-close]","ClrPopoverCloseButton","elementRef","closeChange","closeButtonRef","ElementRef","[class.clr-smart-close-button]","ClrPopoverAnchor","smartEventService","element","[class.clr-anchor]","ClrPopoverModuleNext","LoadingListener","ClrLoading","listener","_loadingState","DEFAULT","LOADING","loadingStateChange","loadingState","Optional","ButtonInGroupService","_changes","updateButtonGroup","button","ClrButton","buttonInGroupService","toggleService","_enableService","_inMenu","_classNames","_name","_type","_id","_disabled","_click","classNames","split","indexOf","join","state","loading","emitClick","$event","inMenu","SkipSelf","ViewChild","static","ClrButton_1","Component","providers","provide","useExisting","ClrCommonStringsService","_super","providedIn","CommonStringsServiceInternal","NB_INSTANCES","UNIQUE_ID","InjectionToken","uniqueIdFactory","ClrSide","UNIQUE_ID_PROVIDER","useFactory","ClrAriaLivePoliteness","ClrPopoverPositions","BEFORE","AFTER","ClrButtonGroup","buttonGroupNewService","popoverId","commonStrings","popoverPosition","inlineButtons","menuButtons","ngAfterContentInit","initializeButtons","changes","rearrangeButton","buttons","fromView","toView","index","splice","moveIndex","getMoveIndex","buttonToMove","tempInlineButtons","tempInMenuButtons","_menuPosition","pos","ContentChildren","[class.btn-group]","CLR_BUTTON_GROUP_DIRECTIVES","ClrButtonGroupModule","ClrLoadingButton","el","buttonState","clrLoadingChange","removeStyle","disabled","removeAttribute","setExplicitButtonWidth","setAttribute","SUCCESS","ERROR","boundingClientRect","ClrLoadingButton_1","animations","trigger","transition","style","opacity","animate","keyframes","transform","[attr.disabled]","CLR_LOADING_BUTTON_DIRECTIVES","ClrLoadingButtonModule","ClrButtonModule","EmptyAnchor","ClrHostWrappingModule","entryComponents","counter","ControlIdService","_idChange","BehaviorSubject","Layouts","ClrAriaLiveService","ngZone","_document","announce","message","politeness","polite","off","ariaLiveElement","createContainer","textContent","runOutsideAngular","clearTimeout","previousTimeout","setTimeout","createElement","id","add","NgZone","ClrControlError","controlIdService","ariaLiveService","[class.clr-subtext]","[id]","ClrControlHelper","NgControlService","_controlChanges","setControl","control","IfErrorService","ngControlService","_statusChanges","controlChanges","listenForChanges","statusChanges","sendValidity","touched","invalid","triggerStatusChange","ClrIfError","ifErrorService","displayed","Error","displayError","hasError","LayoutService","minLabelSize","maxLabelSize","layout","layoutValues","keys","map","_labelSize","size","labelSizeIsValid","isVertical","isHorizontal","isCompact","COMPACT","isValid","labelSize","Number","isInteger","ClrLabel","layoutService","enableGrid","ngOnInit","className","forAttr","idChange","disableGrid","HostBinding","MarkControlService","_touched","markAsTouched","ClrForm","markControlService","invalidControls","markAsDirty","updateAriaLiveText","from","querySelectorAll","updateAriaLive","onFormSubmit","errorList","labels","label","find","parse","formErrorSummary","ERROR_NUMBER","toString","descendants","[class.clr-form]","[class.clr-form-horizontal]","[class.clr-form-compact]","ClrLayout","ControlClassService","controlClass","grid","additional","controlClasses","trim","initControlClass","klass","startsWith","removeClass","ClrAbstractContainer","controlClassService","_dynamic","addGrid","ContentChild","ClrControlContainer","[class.clr-form-control]","[class.clr-form-control-disabled]","[class.clr-row]","HostWrapper","containerType","vcr","injector","get","cfr","ComponentFactoryResolver","createComponent","resolveComponentFactory","factory","containerRef","undefined","remove","instance","token","notFoundValue","WrappedFormControl","wrapperType","ngControl","touchedChange","updateValueAndValidity","triggerValidation","getProviderFromContainer","_containerInjector","listenForErrorStateChanges","startWith","distinctUntilChanged","setAriaDescribedBy","getAriaDescribedById","Type","Injector","NgControl","ClrControl","Self","[class.clr-input]","ClrCommonFormsModule","IS_TOGGLE","isToggleFactory","IS_TOGGLE_PROVIDER","ClrCheckboxWrapper","toggle","[class.clr-checkbox-wrapper]","[class.clr-toggle-wrapper]","ClrCheckbox","Attribute","ClrCheckboxContainer","inline","ClrCheckboxModule","activeCounter","IF_ACTIVE_ID","tokenFactory","IF_ACTIVE_ID_PROVIDER","IfActiveService","_currentChange","_current","ClrIfActive","ifActiveService","wasActive","activeChange","checkAndUpdateView","subscription","currentChange","newCurrentId","currentId","isNowActive","updateView","ClrIfOpen","IfExpandService","expandable","_loading","_expanded","_expandChange","expanded","ClrIfExpanded","expand","expandedChange","_subscriptions","expandChange","CONDITIONAL_DIRECTIVES","ClrConditionalModule","FocusTrapTracker","_previousFocusTraps","activatePreviousTrapper","pop","FocusTrapDirective","focusTrapsTracker","localFocusEscaped","_config","strict","config","onFocusIn","bottomReboundEl","previousTrappedActiveElement","topReboundEl","createFocusableOffScreenEl","offScreenSpan","addReboundEls","hostElement","insertBefore","nextSibling","parentNode","removeReboundEls","setPreviousFocus","previousActiveElement","activeElement","FOCUS_TRAP_DIRECTIVES","ClrFocusTrapModule","LITTLE_ENDIAN_REGEX","MIDDLE_ENDIAN_REGEX","DELIMITER_REGEX","USER_INPUT_REGEX","MOBILE_USERAGENT_REGEX","RTL_REGEX","LITTLE_ENDIAN","name","format","MIDDLE_ENDIAN","BIG_ENDIAN","getNumberOfDaysInTheMonth","year","month","Date","getDate","DayViewModel","dayModel","isTodaysDate","isExcluded","isDisabled","isSelected","isFocusable","DayModel","date","isEqual","day","toDate","incrementBy","getFullYear","getMonth","clone","toComparisonString","pad","num","toDateString","toLocaleDateString","CalendarViewModel","calendar","selectedDay","focusableDay","today","firstDayOfWeek","excludedDates","currMonthDayViews","initializeCalendarView","_calendarView","prevMonthCalendar","previousMonth","nextMonthCalendar","nextMonth","daysFromPrevMonthInCalView","numDaysFromPrevMonthInCalView","daysFromNextMonthInCalView","NO_OF_DAYS_IN_A_WEEK","days","prevMonthDayViews","nextMonthDayViews","generateDayViewModels","slice","generateCalendarView","initializeSelectedDay","initializeFocusableDay","isDateExcluded","_a","minDate","maxDate","to","isCurrentCalendar","dayViews","isDayInCalendar","currentYear","currentMonth","firstDayOfCurrMonth","getDay","isDayInCalendarView","prev","curr","combinationArr","calendarView","setFocusableFlag","flag","updateFocusableDay","CalendarModel","initializeDaysInCalendar","noOfDaysInCalendar","fill","DateNavigationService","_todaysFullDate","_selectedDayChange","_displayedCalendarChange","_focusOnCalendarChange","_focusedDayChange","_displayedCalendar","setDisplayedCalendar","initializeTodaysDate","_today","notifySelectedDayChanged","initializeCalendar","focusedDay","changeMonth","changeYear","moveToNextMonth","moveToPreviousMonth","moveToCurrentMonth","displayedCalendar","incrementFocusDay","DatepickerFocusService","_ngZone","focusCell","elRef","ngZoneIsStableInBrowser","focusEl","querySelector","focusInput","elementIsFocused","onStable","first","LocaleHelperService","locale","_firstDayOfWeek","initializeLocaleData","_localeDays","narrow","_localeMonthsAbbreviated","_localeMonthsWide","_localeDateFormat","initializeFirstDayOfWeek","initializeLocaleDateFormat","initializeLocaleMonthsAbbreviated","initializeLocaleMonthsWide","initializeLocaleDays","tempArr","tempWideArr","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Wide","tempNarrowArr","Narrow","prevDays","getLocaleMonthNames","Abbreviated","getLocaleFirstDayOfWeek","getLocaleDateFormat","FormatWidth","Short","LOCALE_ID","DateIOService","_localeHelperService","disabledDates","cldrLocaleDateFormat","localeDisplayFormat","delimiters","localeDateFormat","initializeLocaleDisplayFormat","setMinDate","parseInt","setMaxDate","toLocaleLowerCase","test","extractDelimiters","replace","console","toLocaleDisplayFormatString","isNaN","getTime","dateNo","monthNo","dateStr","monthStr","isValidMonth","isValidDate","validateAndGetDate","y","result","currYear","Math","floor","parseToFourDigitYear","getDateValueFromDateString","dateParts","match","firstPart","secondPart","thirdPart","ClrCalendar","_dateNavigationService","_datepickerFocusService","_dateIOService","_elRef","_subs","initializeSubscriptions","localeDays","displayedCalendarChange","focusedDayChange","calendarViewModel","focusOnCalendarChange","onKeyDown","keyCode","preventDefault","FocusService","_focused","DateFormControlService","_touchedChange","_dirtyChange","setDisabled","DatepickerEnabledService","_isUserAgentMobile","defaultView","navigator","userAgent","_innerWidth","ViewManagerService","_currentView","changeToMonthView","changeToYearView","changeToDayView","ClrDateContainer","dateNavigationService","datepickerEnabledService","dateFormControlService","focusService","viewManagerService","focusChange","toggleButton","isEnabled","isBooleanAttributeSet","ClrDateInput","viewContainerRef","dateIOService","datepickerFocusService","dateChange","previousDateChange","updateDate","getValidDateValueFromDate","initialClrDateInputValue","dateString","populateServicesFromContainerComponent","listenForUserSelectedDayChanges","listenForControlValueChanges","listenForTouchChanges","listenForDirtyChanges","listenForInputRefocus","processInitialInputs","setFocusStates","setFocus","placeholder","placeholderText","usingNativeDatepicker","onValueChange","validDateValue","usingClarityDatepicker","emitDateOutput","focused","datepickerHasFormControl","setByUserInteraction","updateInput","setMinutes","getMinutes","getTimezoneOffset","setProperty","setValue","date1","date2","of","hasControl","switchMap","valueChanges","selectedDayChange","dirtyChange","v","ClrDatepickerViewManager","isMonthView","isYearView","isDayView","[class.datepicker]","[attr.aria-modal]","ClrDay","_toggleService","_dayView","dayString","onDayViewFocus","dayView","selectDay","[class.day]","ClrDaypicker","_viewManagerService","ariaLiveMonth","updateAriaLiveYear","datepickerSelectMonthText","CALENDAR_MONTH","calendarMonth","datepickerSelectYearText","CALENDAR_YEAR","calendarYear","daypickerSRCurrentMonthPhrase","CURRENT_MONTH","daypickerSRCurrentYearPhrase","CURRENT_YEAR","localeMonthsAbbreviated","[class.daypicker]","ClrMonthpicker","_focusedMonthIndex","calendarMonthIndex","localeMonthsWide","monthIndex","getTabIndex","[class.monthpicker]","YearRangeModel","yearRange","generateYearRange","remainder","ceil","generateRange","k","nextDecade","previousDecade","currentDecade","inRange","ClrYearpicker","yearRangeModel","_focusedYear","updateRange","daypickerSRCurrentDecadePhrase","DECADE_RANGE","decadeRange","incrementFocusYearBy","middleYear","yrm","ariaLiveDecadeText","[class.yearpicker]","CLR_DATEPICKER_DIRECTIVES","ClrDatepickerModule","ClrInputContainer","ClrInput","ClrInputModule","FormsModule","TOGGLE_SERVICE","ToggleServiceFactory","DragEventType","TOGGLE_SERVICE_PROVIDER","ClrPasswordContainer","show","_toggle","ClrPassword","triggerFocus","ClrPasswordModule","ClrRadioWrapper","[class.clr-radio-wrapper]","ClrRadio","ClrRadioContainer","ClrRadioModule","ClrSelectContainer","multi","valueAccessor","SelectMultipleControlValueAccessor","wrapperClass","ClrSelect","[class.clr-select]","ClrSelectModule","ClrTextareaContainer","ClrTextarea","[class.clr-textarea]","ClrTextareaModule","ClrRangeContainer","idService","_hasProgress","val","valBool","getRangeProgressFillWidth","input","selectRootElement","inputWidth","offsetWidth","inputMinValue","min","inputMaxValue","max","inputMiddle","ClrRange","[class.clr-range]","ClrRangeModule","DatalistIdService","ClrDatalistContainer","ClrDatalistInput","datalistIdService","listValue","[attr.list]","ClrDatalist","datalistId","idValue","ClrDatalistModule","ClrFormsModule","CLR_LOADING_DIRECTIVES","ClrLoadingModule","OutsideClick","outsideClick","documentClick","OUSTIDE_CLICK_DIRECTIVES","ClrOutsideClickModule","DomAdapter","userDefinedWidth","clientRect","scrollBarWidth","scrollWidth","computedHeight","getComputedStyle","getPropertyValue","elementClientRect","bottom","right","minWidth","ClrDragEvent","dragEvent","dragPosition","group","dragDataTransfer","dropPointPosition","ClrDatagridSortOrder","DragAndDropEventBusService","dragStart","dragMove","dragEnd","drop","broadcast","DRAG_START","DRAG_MOVE","DRAG_END","DROP","DragEventListenerService","eventBus","hasDragStarted","attachDragListeners","draggableEl","listeners","customDragEvent","detachDragListeners","nestedListeners","getNativeEventObject","changedTouches","startOnEvent","moveOnEvent","endOnEvent","startEvent","initialPosition","pageX","pageY","selectEvent","stopImmediatePropagation","moveEvent","endEvent","eventType","generateDragEvent","ghostElement","nativeEvent","moveX","moveY","DraggableSnapshotService","domAdapter","draggableElClientRect","snapshotDragEvent","discard","ClrDraggableGhost","dragEventListener","draggableSnapshot","leaveAnimConfig","params","draggableGhostEl","setDefaultGhostSize","hasDraggableState","isAnimationConfigured","dragMoved","animateToOnLeave","topLeftPosition","findTopLeftPosition","setPositionStyle","findDropPointPosition","setSizeStyle","run","ClrIfDragged","dragStarted","dragEnded","DragHandleRegistrarService","_defaultHandleEl","_customHandleEl","makeElementHandle","registerCustomHandle","unregisterCustomHandle","GlobalDragModeService","enter","exit","ClrDraggable","dragHandleRegistrar","globalDragMode","dragOn","dragStartEmitter","dragMoveEmitter","dragEndEmitter","componentFactory","createDefaultGhost","cloneNode","destroyDefaultGhost","defaultHandleEl","customGhost","[class.draggable]","[class.being-dragged]","ClrDroppable","isDraggableMatch","_isDraggableOver","_dropTolerance","dragLeaveEmitter","dragEnterEmitter","dropEmitter","droppableEl","_group","dropToleranceGenerator","toleranceValues","tolerance","unsubscribeFrom","checkGroupMatch","draggableGroup","some","groupKey","isInDropArea","point","onDragStart","dragStartEvent","dragMoveSubscription","dragMoveEvent","onDragMove","dragEndSubscription","dragEndEvent","onDragEnd","isDraggableOver","dragEnterEvent","DRAG_ENTER","dragLeaveEvent","DRAG_LEAVE","dropEvent","dragStartSubscription","[class.droppable]","[class.draggable-match]","ClrDragHandle","[class.drag-handle]","CLR_DRAG_AND_DROP_DIRECTIVES","ClrDragAndDropModule","ClrExpandableAnimation","startHeight","clrExpandTrigger","animationDone","updateStartHeight","overflow","EXPANDABLE_ANIMATION_DIRECTIVES","ClrExpandableAnimationModule","ClrSpinner","ariaLive","_inline","_inverse","_small","_medium","assertive","[attr.aria-busy]","CLR_SPINNER_DIRECTIVES","ClrSpinnerModule","FOCUS_ON_VIEW_INIT","FOCUS_ON_VIEW_INIT_PROVIDER","useValue","ClrFocusOnViewInit","focusOnViewInit","directFocus","_isEnabled","onFocusout","FOCUS_ON_VIEW_INIT_DIRECTIVES","ClrFocusOnViewInitModule","CustomFilter","StateDebouncer","_change","nbChanges","changeStart","changeDone","Page","stateDebouncer","preventEmit","activated","_size","_sizeChange","oldSize","_totalItems","total","last","_last","totalItems","page","previous","lastInPage","resetPageSize","FiltersProvider","_page","_all","hasActiveFilters","_b","_c","isActive","getActiveFilters","ret","resetPageAndEmitFilterChange","hasUnregistered","registered","RegisteredFilter","matchIndex","findIndex","item","accepts","filters","unregister","DatagridFilterRegistrar","setFilter","deleteFilter","ClrDatagridFilter","_filters","smartToggleService","subs","ariaExpanded","smartPosition","read","ClrDatagridFilter_1","NestedProperty","prop","splitProp","getPropValue","nestedProp","DatagridPropertyStringFilter","exact","search","propValue","toLowerCase","DatagridStringFilterImpl","filterFn","_rawValue","_lowerCaseValue","lowerCaseValue","property","equals","other","DatagridStringFilter","filterValueChange","initFilterValue","DatagridStringFilter_1","DatagridPropertyNumericFilter","low","high","DatagridNumericFilterImpl","_low","_high","vals","DatagridNumericFilter","popoverToggleService","initFilterValues","values","isFinite","DatagridNumericFilter_1","OompaLoompa","cdr","willyWonka","chocolate","latestFlavor","flavor","disableChocolateCheck","detectChanges","RowActionService","actionableCount","register","WillyWonka","_chocolate","ngAfterViewChecked","DatagridWillyWonka","ActionableOompaLoompa","rowActions","hasActionableRow","ChangeDetectorRef","DetailService","toggleState","_state","_enabled","close","cache","isRowOpen","ExpandableRowsCount","detailService","expandableCount","enabled","ExpandableOompaLoompa","hasExpandableRow","DatagridPropertyComparator","compare","a","propA","propB","DatagridDisplayMode","DatagridRenderStep","Sort","_reverse","_comparator","emitChange","sortBy","forceReverse","comparator","reverse","WrappedColumn","columnView","templateRef","destroy","ClrDatagridColumn","_sort","changeDetectorRef","showSeparator","_colType","_sorted","sortedChange","_sortOrder","UNSORTED","sortOrderChange","customFilter","listenForSortingChanges","listenForDetailPaneChanges","stateChange","markForCheck","sort","sortOrder","_sortBy","sortIcon","sorted","_field","field","setupDefaultFilter","colType","updateFilterValue","ASC","DESC","sortable","custom","newValue","wrappedInjector","[class.datagrid-column]","[attr.aria-sort]","role","changeDetection","ChangeDetectionStrategy","OnPush","Items","trackBy","_smart","_displayed","_allChanges","_filtersSub","_sortSub","_pageSub","smartenUp","_filterItems","_sortItems","_changePage","items","emitAllChanges","smart","refresh","uninitialized","_filtered","firstItem","lastItem","ClrDatagridItems","differs","differ","iterableProxy","NgForOf","newItems","ngForOf","ngDoCheck","_rawItems","ngForTrackBy","diff","all","IterableDiffers","ClrDatagridPlaceholder","[class.datagrid-placeholder-container]","POPOVER_HOST_ANCHOR","SignpostFocusManager","_triggerEl","focusTrigger","SignpostIdService","setId","ClrSignpostTrigger","signpostIdService","signpostFocusManager","triggerEl","isOpen","prevIsOpen","focusOnClose","ariaControl","onSignpostTriggerClick","class","[attr.aria-label]","[attr.aria-expanded]","[attr.aria-controls]","[class.active]","ClrSignpost","useCustomTrigger","[class.signpost]","WrappedCell","cellView","ClrDatagridCell","[class.datagrid-cell]","[class.datagrid-signpost-trigger]","SelectionType","DatagridRenderOrganizer","_renderStep","alreadySized","filterRenderSteps","step","renderStep","testStep","resize","CALCULATE_MODE_ON","CLEAR_WIDTHS","COMPUTE_COLUMN_WIDTHS","ALIGN_COLUMNS","CALCULATE_MODE_OFF","DisplayModeService","renderOrganizer","_view","DISPLAY","CALCULATE","DatagridColumnChanges","nbSelection","Selection","_items","preserveSelection","prevSelectionRefs","lockedRefs","_selectionType","None","rowSelectionMode","debounce","_selectable","clearSelection","allChanges","updatedItems","updateLockedRef","selectionType","Single","newSingle_1","trackBy_1","selectionUpdated_1","currentSingle","prevSingleSelectionRef","lookup","maybe","Multi","leftOver_1","trackBy_2","selectionUpdated_2","selectedIndex","selected","_currentSingle","updateCurrent","selectItem","deselectItem","indexOfItem","removedItems_1","locked","setSelected","isAllSelected","displayedItems","isLocked","canItBeLocked","lockItem","lock","ref_1","lockedItem","toggleAll","currentIndex","WrappedRow","rowView","DatagridIfExpandService","_replace","_animate","setReplace","replaceValue","nbRow","ClrDatagridRow","selection","rowActionService","globalExpandable","displayMode","SELECTION_TYPE","expandAnimationTrigger","_selected","selectedChanged","_detailOpenLabel","_detailCloseLabel","displayCells","radioId","checkboxId","combineLatest","expandReplaceValue","expandChangeValue","replaced","toggleExpand","expandAnimation","dgCells","cell","_scrollableCells","insert","viewChange","detach","_calculatedCells","[class.datagrid-row]","[class.datagrid-selected]","[attr.aria-owns]","StateProvider","debouncer","by","activeFilters","activeFilters_1","activeFilters_1_1","TableSizeService","_tableRef","table","tableRef","getColumnDragHeight","ALL_COLUMN_CHANGES","ColumnsService","columns","_cache","subject","hasCache","resetToLastCache","column","columnStates","hideable","emitStateChangeAt","columnIndex","emitStateChange","ClrDatagrid","organizer","expandableRows","stateProvider","datagridId","singleSelectedChanged","clrDgSingleSelectionAriaLabel","singleSelectionAriaLabel","clrDgSingleActionableAriaLabel","singleActionableAriaLabel","clrDetailExpandableAriaLabel","detailExpandableAriaLabel","dataChanged","rows","row","_displayedRows","datagridTable","_projectedDisplayColumns","_projectedCalculationColumns","_calculationRows","[class.datagrid-host]","[class.datagrid-detail-open]","ClrDatagridActionBar","[class.datagrid-action-bar]","clrDgActionId","ClrDatagridActionOverflow","zone","openState","focusFirstButton","closeOverflowContent","firstButton","ColumnResizerService","_resizedBy","widthBeforeResize","minColumnWidth","startResize","isWithinMaxResizeRange","endResize","calculateResize","maxResizeRange","ClrDatagridColumnSeparator","columnResizerService","tableSizeService","columnSeparatorId","showTracker","resizeTrackerEl","tableHeight","moveTracker","resizedBy","redFlagTracker","hideTracker","[class.datagrid-column-separator]","ClrDatagridColumnToggleTitle","ClrDatagridColumnToggleButton","columnsService","allSelected","hideableColumns","hidden","selectAll","hideableColumn","HIDDEN","ClrDatagridColumnToggle","columnSwitchId","_allColumnsVisible","hideableColumnStates","columnState","toggleColumnState","columnToToggle","toggleSwitchPanel","menuDescriptionElement","allColumnsSelected","allSelectedElement","trackByFn","[class.column-switch-wrapper]","DatagridDetailRegisterer","expandableRowsCount","ClrDatagridDetailHeader","[class.datagrid-detail-header]","ClrDatagridDetail","closeCheck","[class.datagrid-detail-pane]","ClrIfDetail","viewContainer","skip","model","togglePanel","showPanel","stateChangeParams","$implicit","ClrDatagridDetailBody","[class.datagrid-detail-body]","ClrDatagridFooter","hasHideableColumns","[class.datagrid-footer]","COLUMN_STATE","columnStateFactory","ClrSelectedState","COLUMN_STATE_PROVIDER","ClrDatagridHideableColumn","titleTemplateRef","hiddenChange","clrDgHidden","_hidden","ClrDatagridItemsTrackBy","ClrDatagridPageSize","pageSizeOptions","ClrDatagridPagination","currentChanged","_pageSubscription","middlePages","updateCurrentPage","parsed","currentPageInputRef","[class.pagination]","ClrDatagridRowDetail","replacedRow","replaceChange","[class.datagrid-row-flex]","[class.datagrid-row-detail]","[class.datagrid-container]","DatagridCellRenderer","clearWidth","stateSubscription","runAllChanges","stateChanges","WIDTH","setWidth","setHidden","strictWidth","DatagridHeaderRenderer","resizeEmitter","widthSet","autoSet","detectStrictWidth","widthAfterResize","computeWidth","getColumnWidthState","setColumnState","NoopDomAdapter","DatagridRowRenderer","cells","domAdapterFactory","DatagridMainRenderer","_heightSet","columnsSizesStable","shouldStabilizeColumns","computeHeadersWidth","sizeChange","resetDatagridHeight","toggleDetailPane","setupColumns","headers","stabilizeColumns","shouldComputeHeight","computeDatagridHeight","header","nbColumns","allStrict","deps","CLR_DATAGRID_DIRECTIVES","ClrDatagridModule","ClrStackBlock","parent","uniqueId","_changedChildren","_fullyInitialized","_changed","addChild","collapse","getStackChildrenId","[class.stack-block]","ClrStackView","editable","save","_editMode","editingChange","ClrStackHeader","stackView","StackControl","modelChange","editing","ClrStackInput","inputs","outputs","ClrStackSelect","ClrStackViewCustomTags","ClrStackContentInput","[attr.aria-labelledby]","CLR_STACK_VIEW_DIRECTIVES","ClrStackViewModule","keyValidator","KeyCodes","ArrowUp","IEKeyCodes","ArrowDown","ArrowRight","ArrowLeft","Space","Escape","preventArrowKeyScroll","validKey","getKeyCodes","code","TreeNodeModel","UNSELECTED","complete","propagateUp","propagateDown","INDETERMINATE","children","child","_updateSelectionFromChildren","toggleSelection","propagate","newState","SELECTED","computeSelectionStateFromChildren","oneSelected","oneUnselected","DeclarativeTreeNodeModel","_addChild","_removeChild","TreeFeaturesService","selectable","eager","childrenFetched","treeFeaturesFactory","existing","TREE_FEATURES_PROVIDER","TreeFocusManagerService","_focusRequest","_focusChange","findSiblings","rootNodeModels","findLastVisibleInNode","lastChild","findNextFocusable","siblings","selfIndex","findLastVisibleInTree","lastRootNode","findNodeAbove","findNodeBelow","focusNode","nodeId","broadcastFocusedNode","focusedNodeId","focusParent","focusFirstVisibleNode","focusModel","focusLastVisibleNode","focusNodeAbove","focusNodeBelow","ClrTreeNodeLink","activate","click","ClrTreeNode","featuresService","expandService","focusManager","STATES","skipEmitChange","selectedChange","contentContainerTabindex","recursion","_model","context","clrModel","_lView","isExpandable","focusRequest","focusTreeNode","checkTabIndex","treeNodeLinkList","setTabIndex","contentContainer","broadcastFocusOnContainer","expandOrFocusFirstChild","collapseOrFocusParent","Home","End","Enter","triggerDefaultAction","treeNodeLink","overflow-y","[attr.role]","[class.clr-tree-node]","ClrTree","focusManagerService","tabindex","setRootNodes","[attr.tabindex]","[attr.aria-multiselectable]","ArrowKeyDirection","RecursiveTreeNodeModel","getChildren","_children","clearChildren","fetchChildren","asyncChildren","then","raw","wrapChildren","isObservable","rawModels","ClrRecursiveForOf","ngOnChanges","wrapped","isArray","nodes","childrenFetchSubscription","root","RecursiveChildren","shouldRender","getContext","CLR_TREE_VIEW_DIRECTIVES","ClrTreeViewModule","ClrDataModule","FocusableItem","customFocusableItemProvider","implementation","_unlistenFuncs","reset","listenToArrowKeys","move","UP","DOWN","registerContainer","activateCurrent","moveTo","blur","direction","moved","detachListeners","unlisten","clrFocusServiceFactory","FOCUS_SERVICE_PROVIDER","Linkers","linkParent","linkVertical","loop","up","down","wrapObservable","observable","onSubscribe","onUnsubscribe","Observable","observer","DropdownFocusHandler","focusBackOnTrigger","resetChildren","moveToFirstItemWhenOpen","handleRootFocus","originalEvent","_trigger","_container","stopPropagation","take","relatedTarget","openAndGetChildren","closeAndGetThis","ReplaySubject","addChildren","DROPDOWN_FOCUS_HANDLER_PROVIDER","RootDropdownService","closeMenus","clrRootDropdownFactory","Point","ROOT_DROPDOWN_PROVIDER","ClrDropdown","dropdownService","isMenuClosable","[class.dropdown]","[class.open]","BasicFocusableItem","BASIC_FOCUSABLE_ITEM_PROVIDER","useClass","ClrDropdownItem","dropdown","_dropdownService","focusableItem","setByDeprecatedDisabled","onDropdownItemClick","[class.disabled]","[class.dropdown-item]","[attr.aria-disabled]","[attr.id]","TabsLayout","Popover","scrollableElements","boundOnScrollListener","emitScrollEvent","bind","anchorAlign","popoverAlign","offsetX","_d","offsetY","_e","useAnchorParent","addScrollEventListeners","anchorRect","popoverRect","leftDiff","topDiff","LEFT_TOP","TOP_LEFT","TOP_CENTER","TOP_RIGHT","RIGHT_TOP","LEFT_BOTTOM","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","RIGHT_BOTTOM","LEFT_CENTER","RIGHT_CENTER","popoverComputedStyle","marginLeft","marginRight","marginTop","marginBottom","round","_scroll","release","removeScrollEventListeners","isPositioned","scrolls","addEventListener","removeEventListener","computedStyles","overflowX","overflowY","AbstractPopover","parentHost","updateAnchor","popoverOptions","closeOnOutsideClick","anchorElem","popoverInstance","attachESCListener","detachESCListener","ignore","detachOutsideClickListener","anchorPoint","popoverPoint","attachOutsideClickListener","ignoreGlobalESCListener","documentESCListener","hostClickListener","ignoredElement","ignoredElementClickListener","ClrDropdownMenu","nested","focusHandler","allowMultipleOpen","toArray","notifyOnChanges","[class.dropdown-menu]","ClrDropdownTrigger","isRootLevelToggle","onDropdownTriggerClick","[class.dropdown-toggle]","[class.expandable]","[attr.aria-haspopup]","CLR_DROPDOWN_DIRECTIVES","ClrDropdownModule","ALERT_TYPES","AlertIconAndTypesService","defaultIconShape","_alertIconShape","_alertType","iconInfoFromType","shape","title","returnObj","cssClass","warning","danger","success","info","MultiAlertService","allAlerts","alert","_closed","activeAlerts","manage","alerts","ClrAlertText","ClrAlert","iconService","multiAlertService","isSmall","closable","isAppLevel","clrCloseButtonAriaLabel","alertCloseButtonAriaLabel","_closedChanged","currentAlert","announceAriaLiveMessage","alertType","alertIconShape","alertTexts","alertText","ClrAlertItem","ClrAlerts","currentAlertIndexChange","currentAlertChange","[class.alerts]","[class.alert-danger]","[class.alert-info]","[class.alert-success]","[class.alert-warning]","ClrAlertsPager","multiAlertServiceChanges","pageUp","pageDown","[class.alerts-pager]","CLR_ALERT_DIRECTIVES","ClrAlertModule","ClrEmphasisModule","ResponsiveNavCodes","NAV_LEVEL_1","NAV_LEVEL_2","NAV_CLOSE_ALL","NAV_OPEN","NAV_CLOSE","NAV_TOGGLE","NAV_CLASS_HAMBURGER_MENU","NAV_CLASS_OVERFLOW_MENU","NAV_CLASS_TRIGGER_1","NAV_CLASS_TRIGGER_2","NAV_CLASS_LEVEL_1","NAV_CLASS_LEVEL_2","ResponsiveNavControlMessage","_controlCode","_navLevel","ResponsiveNavigationService","responsiveNavList","registerNavSubject","controlNavSubject","closeAllNavs","registerNav","navLevel","isNavRegistered","unregisterNav","sendControlMessage","controlCode","ClrMainContainer","responsiveNavService","_classList","_subscription","navControl","processMessage","navClass","controlNav","[class.main-container]","CLR_LAYOUT_DIRECTIVES","ClrMainContainerModule","MainContainerWillyWonka","NavDetectionOompaLoompa","sum","ClrHeader","isNavLevel1OnPage","isNavLevel2OnPage","openNavLevel","responsiveNavCodes","registeredNavs","navLevelList","initializeNavTriggers","resetNavTriggers","navList","closeOpenNav","toggleNav","[class.header]","ClrNavLevel","level","addNavClass","navHostClassList","_level","onMouseClick","navHost","CLR_NAVIGATION_DIRECTIVES","ClrNavigationModule","TemplateRefContainer","TEMPLATE_REF_DIRECTIVES","ClrTemplateRefModule","TabsWillyWonka","ActiveOompaLoompa","ifActive","AriaService","TabsService","tab","active","tabLink","inOverflow","nbTabContentComponents","ClrTabContent","ariaService","tabsService","tabContentId","viewRef","tabContentViewContainer","ariaLabelledBy","ariaControls","nbTabsComponent","TABS_ID","ClrFocusDirection","TABS_ID_PROVIDER","nbTabLinkComponents","ClrTabLink","tabsId","tabLinkId","templateRefContainer","_inOverflow","[attr.aria-hidden]","[class.btn]","ClrTab","ClrTabOverflowContent","ClrKeyFocusItem","tabIndex","AccordionStrategy","AccordionStatus","ClrKeyFocus","focusOnLoad","_focusableItems","clrKeyFocusItems","elements","initializeFocus","listenForItemUpdates","handleKeyboardEvent","prevKeyPressed","currentFocusIsNotFirstItem","keyAction","nextKeyPressed","currentFocusIsNotLastItem","focusableItems","setClickedItemCurrent","resetTabFocus","currentItem","positionInRange","action","keyCodes","BOTH","ClrTabs","_tabLinkDirectives","tabLinkElements","skipFocusCheck","link","overflowTabs","activeTab","listenForTabLinkChanges","listenForOverflowMenuFocusChanges","tabLinkDirectives","toggleOverflow","checkFocusVisible","keyFocus","overflowPosition","tabs","focusToFirstItemInOverflow","nextFocusedItemIsNotInOverflow","KEY_FOCUS_DIRECTIVES","ClrKeyFocusModule","CLR_TABS_DIRECTIVES","ClrTabsModule","VerticalNavGroupRegistrationService","navGroupCount","registerNavGroup","unregisterNavGroup","VerticalNavIconService","_icons","registerIcon","unregisterIcon","VerticalNavService","_animateOnCollapsed","_collapsedChanged","_collapsed","_collapsible","collapsible","updateCollapseBehavior","collapsed","ClrVerticalNav","_navService","_navIconService","_navGroupRegistrationService","_sub","collapsedChanged","hasIcons","toggleByButton","[class.is-collapsed]","[class.has-nav-groups]","[class.has-icons]","VerticalNavGroupService","ClrVerticalNavGroup","_itemExpand","_navGroupService","wasExpanded","_expandAnimationState","expandAnimationState","animateOnCollapsed","goingToCollapse","expandGroup","collapseGroup","expandAnimationDone","toState","visibility","EXPANDED_STATE","ClrVerticalNavGroupChildren","ClrVerticalNavIcon","_verticalNavIconService","ClrVerticalNavLink","expandParentNavGroup","CLR_VERTICAL_NAV_DIRECTIVES","ClrVerticalNavModule","ClrLayoutModule","ScrollingService","stopScrolling","resumeScrolling","ClrModal","_scrollingService","modalId","_openChanged","staticBackdrop","skipAnimation","bypassScrollService","stopClose","altClose","currentValue","focusTrap","fadeDone","viewProviders","ClrModalBody","mouseDown","mouseUp","CLR_MODAL_DIRECTIVES","ClrModalModule","SIGNPOST_POSITIONS","top-left","top-middle","top-right","right-top","right-middle","right-bottom","bottom-right","bottom-middle","bottom-left","left-bottom","left-middle","left-top","default","POSITIONS","ClrSignpostContent","signpostContentId","setPosition","[class.signpost-content]","CLR_SIGNPOST_DIRECTIVES","ClrSignpostModule","TooltipIdService","updateId","ClrTooltip","[class.tooltip]","SIZES","ClrTooltipContent","tooltipIdService","[class.tooltip-content]","[style.opacity]","ClrTooltipTrigger","tooltipId","ariaDescribedBy","showTooltip","hideTooltip","[class.tooltip-trigger]","[attr.aria-describedby]","CLR_TOOLTIP_DIRECTIVES","ClrTooltipModule","ClrPopoverModule","ButtonHubService","buttonsReady","_previousBtnClicked","_nextBtnClicked","_dangerBtnClicked","_cancelBtnClicked","_finishBtnClicked","_customBtnClicked","buttonClicked","buttonType","PageCollectionService","_pagesReset","pages","pageCount","pagesCount","pagesAsArray","getPageById","foundPages","checkResults","getPageByIndex","pagesLastIndex","getPageIndex","results","requestedPageId","foundPagesCount","pageRange","start","end","getPageRangeFromPages","otherPage","startIndex","endIndex","pageIndex","otherPageIndex","getPreviousPage","previousPageIndex","previousPageIsCompleted","previousPage","completed","getNextPage","nextPageIndex","getStepItemIdForPage","pageIdParts","commitPage","pageHasOverrides","stopNext","onCommit","updateCompletedStates","firstIncompleteIndex","findFirstIncompletePageIndex","returnIndex","findFirstIncompletePage","myIncompleteIndex","WizardNavigationService","pageCollection","buttonService","_currentChanged","navServiceLoaded","forceForwardNavigation","_movedToNextPage","_wizardFinished","_movedToPreviousPage","_cancelWizard","wizardHasAltCancel","wizardHasAltNext","wizardStopNavigation","wizardDisableStepnav","previousButtonSubscription","previousBtnClicked","currentPage","currentPageIsFirst","previousStepDisabled","previousButtonClicked","nextButtonSubscription","nextBtnClicked","checkAndCommitCurrentPage","dangerButtonSubscription","dangerBtnClicked","finishButtonSubscription","finishBtnClicked","customButtonSubscription","customBtnClicked","customButtonClicked","cancelButtonSubscription","cancelBtnClicked","pageOnCancel","cancel","pagesResetSubscription","pagesReset","setFirstPageCurrent","firstPage","lastPage","_currentPage","onLoad","currentPageIsLast","forceNext","nextPage","iAmTheLastPage","isNext","isDanger","isDangerNext","isFinish","readyToComplete","primaryButtonClicked","finishButtonClicked","dangerButtonClicked","nextButtonClicked","finish","goTo","pageToGoToOrId","lazyComplete","pageToGoTo","myPages","pagesToCheck","goingForward","currentPageIndex","canGoTo","previousPagePasses","okayToMove","setLastEnabledPageCurrent","allPages","lastCompletedPageIndex","updateNavigation","toSetCurrent","HeaderActionService","navService","wizardHdrActions","wizardHeaderActions","hasHeaderActions","currentPageHasHeaderActions","wizardHasHeaderActions","wizardHeaderActionIndex","ClrWizardHeaderAction","headerActionClicked","ClrWizardPageButtons","pageButtonsTemplateRef","ClrWizardPageHeaderActions","pageHeaderActionsTemplateRef","ClrWizardPageNavTitle","pageNavTitleTemplateRef","ClrWizardPageTitle","pageTitleTemplateRef","wizardPageIndex","ClrWizardPage","_nextStepDisabled","nextStepDisabledChange","_previousStepDisabled","previousStepDisabledChange","_hasError","_stopCancel","stopCancelChange","_stopNext","_complete","nextStepDisabled","previousCompleted","pageTitle","pageNavTitle","_headerActions","_buttons","makeCurrent","[class.clr-wizard-page]","ClrWizard","headerActionService","_forceForward","_stopNavigation","_disableStepnav","_stopModalAnimations","onCancel","wizardFinished","onReset","currentPageChanged","onMoveNext","onMovePrevious","listenForNextPageChanges","listenForPreviousPageChanges","listenForCancelChanges","listenForFinishedChanges","listenForPageChanges","headerActions","updateNavOnPageChanges","skipChecksAndEmits","forceFinish","stopNavigation","modalCancel","checkAndCancel","currentPageHasOverrides","stopCancel","pageId","movedToNextPage","wizardTitle","movedToPreviousPage","notifyWizardCancel","emitWizardFinished","forEachAddedItem","forEachRemovedItem","[class.clr-wizard]","[class.wizard-md]","[class.wizard-lg]","[class.wizard-xl]","[class.lastPage]","DEFAULT_BUTTON_TYPES","CUSTOM_BUTTON_TYPES","ClrWizardButton","wasClicked","checkDefaultAndCustomType","valueToCheck","typeToLookUp","nav","isCancel","isPrevious","ClrWizardCustomTags","ClrWizardStepnav","pageService","ClrWizardStepnavItem","pageGuard","isComplete","isCurrent","[attr.aria-selected]","[class.clr-nav-link]","[class.nav-item]","[class.no-click]","[class.complete]","[class.error]","CLR_WIZARD_DIRECTIVES","ClrWizardModule","accordionCount","AccordionPanelModel","accordionId","status","Inactive","templateId","AccordionModel","strategy","Default","_panels","setStrategy","updatePanelOrder","ids","removeOldPanels","addPanel","panelId","panelIsOpen","closeAllPanels","disablePanel","panels","panel","AccordionService","accordion","_panelsChanges","getPanelChanges","emitUpdatedPanels","panelAnimation","display","stepAnimation","ClrAccordionDescription","[class.clr-accordion-description]","ClrAccordionPanel","accordionService","ifExpandService","panelOpen","panelOpenChange","isAccordion","tap","emitPanelChange","previousValue","collapsePanelOnAnimationDone","getPanelStateClasses","getAccordionContentId","getAccordionHeaderId","[class.clr-accordion-panel]","ClrAccordionTitle","[class.clr-accordion-title]","ClrAccordion","multiPanel","setAccordionStrategy","listenForDOMChanges","[class.clr-accordion]","ClrAccordionContent","AccordionWillyWonka","AccordionOompaLoompa","ClrAccordionModule","StepperModel","getNumberOfIncompletePanels","getNumberOfOpenPanels","openFirstPanel","Complete","navigateToNextPanel","currentPanelId","currentPanelValid","completePanel","openNextPanel","setPanelError","overrideInitialPanel","setPanelsWithErrors","resetPanels","resetPanel","getNextPanel","resetAllFuturePanels","firstPanel","getFirstPanel","nextPanel","StepperService","panelsCompleted","getAllCompletedPanelChanges","_activeStepChanges","activeStep","updateNextStep","allPanelsCompleted","ClrStepButtonType","ClrStepperPanel","formGroupName","ngModelGroup","stepperService","_value","triggerAllFormControlValidationIfError","listenToFocusChanges","headerButton","triggerAllFormControlValidation","formGroup","controls","FormControl","FormGroup","FormGroupName","NgModelGroup","ClrStepButton","clrStep","Next","submitButton","Submit","valid","[class.clr-step-button]","[type]","ClrStepper","ngForm","form","listenForPanelsCompleted","listenForFormResetChanges","initialPanel","pristine","ngSubmit","setPanelsWithFormErrors","panelsWithErrors","FormGroupDirective","NgForm","[class.clr-stepper-forms]","StepperWillyWonka","StepperOompaLoompa","ClrStepperModule","ClrProgressBar","externalId","_ID","displayAriaLive","displayValue","_labeled","_fade","_loop","_success","_danger","_flash","_flashDanger","displayval","CLR_PROGRESS_BAR_DIRECTIVES","ClrProgressBarModule","ClarityModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrViewportViolation {\n  BOTTOM = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  TOP = 3,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAlignment {\n  START = 0,\n  CENTER = 0.5,\n  END = 1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-icon' })\nexport class ClrIconCustomTag {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrIconCustomTag } from './icon';\n\nexport const CLR_ICON_DIRECTIVES: Type<any>[] = [ClrIconCustomTag];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_ICON_DIRECTIVES], exports: [CLR_ICON_DIRECTIVES] })\nexport class ClrIconModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverToggleService {\n  /**\n   *  Popovers might need to ignore click events on an element\n   *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)\n   */\n  private _open: boolean = false;\n  private _openChange: Subject<boolean> = new Subject<boolean>();\n  private _openEvent: Event;\n  private _openEventChange: Subject<Event> = new Subject<Event>();\n\n  public get openChange(): Observable<boolean> {\n    return this._openChange.asObservable();\n  }\n\n  public set openEvent(event: Event) {\n    this._openEvent = event;\n    this._openEventChange.next(event);\n  }\n\n  public get openEvent(): Event {\n    return this._openEvent;\n  }\n\n  public getEventChange(): Observable<Event> {\n    return this._openEventChange.asObservable();\n  }\n\n  public set open(value: boolean) {\n    value = !!value;\n    if (this._open !== value) {\n      this._open = value;\n      this._openChange.next(value);\n    }\n  }\n\n  public get open(): boolean {\n    return this._open;\n  }\n\n  get originalEvent(): Event {\n    return this._openEvent;\n  }\n\n  /**\n   * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n   * This is for instance the case of components that open on a click, but close on a click outside.\n   */\n  public toggleWithEvent(event: any) {\n    this.openEvent = event;\n    this.open = !this.open;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ElementRef, Injectable, Renderer2, Inject, OnDestroy } from '@angular/core';\nimport { ClrPopoverToggleService } from './popover-toggle.service';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Injectable()\nexport class ClrPopoverEventsService implements OnDestroy {\n  public outsideClickClose = true;\n  public scrollToClose = true;\n  private documentClickListener: () => void;\n  public ignoredEvent: any;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private smartOpenService: ClrPopoverToggleService,\n    @Inject(DOCUMENT) private document: HTMLDocument\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.subscribe(open => {\n        if (open) {\n          this.addEscapeListener();\n          this.addClickListener();\n          this.addScrollListener();\n        } else {\n          this.removeAllEventListeners();\n        }\n      }),\n      smartOpenService.getEventChange().subscribe(event => {\n        // Remember the event that was used to open the content\n        this.ignoredEvent = event;\n      })\n    );\n  }\n\n  private scrollSubscription: Subscription;\n  public addScrollListener() {\n    if (this.scrollToClose) {\n      this.documentScroller = fromEvent(this.document, 'scroll', { capture: true });\n      this.scrollSubscription = this.documentScroller\n        .pipe(filter(this.testForSmartPopoverContentContainer))\n        .subscribe(() => {\n          this.smartOpenService.open = false;\n          this.setAnchorFocus();\n        });\n    } else {\n      // I think this is where dynamic re-positioning will be added\n      // Instead of testing like we do in the close pipe below\n      // we need to switch positioning to use an observable and then\n      // debounce the scroll events to recalculate content position in a performant way\n      // For now, ignore scrolling events.\n      return;\n    }\n  }\n\n  public removeScrollListener() {\n    if (this.documentScroller) {\n      this.scrollSubscription.unsubscribe();\n      delete this.documentScroller;\n    }\n  }\n\n  private testForSmartPopoverContentContainer(event: Event): boolean {\n    // Filter for the documentScroller observable event targets\n    let target: Element = <Element>event.target;\n\n    // Walk up the DOM tree until we get to the element that is a direct child of the body.\n    while (target.classList && target.parentElement.localName !== 'body') {\n      target = target.parentElement;\n    }\n\n    // Target is the child element of body where the scroll events originated.\n    // Return false and prevent the popover content container from closing for any scroll events inside a popover\n    // content container.\n    if (target.classList) {\n      // check scroll events to see if they are happening in popover content or elsewhere\n      return target.classList.contains('clr-popover-content') ? false : true;\n    } else {\n      // prevents it from closing right after first opening\n      return false;\n    }\n  }\n\n  public addClickListener() {\n    if (this.outsideClickClose) {\n      this.documentClickListener = this.renderer.listen(this.document, 'click', (event: MouseEvent) => {\n        if (event === this.ignoredEvent) {\n          // Here we ignore the opening click event (w/o this content opens and immediately closes.\n          delete this.ignoredEvent;\n        } else {\n          this.smartOpenService.open = false;\n          // Rather than a complex change to the focus trap I put focus on the element that was clicked\n          const clickedElement: HTMLElement = <HTMLElement>event.target;\n          clickedElement.focus();\n        }\n      });\n    }\n  }\n\n  public removeClickListener() {\n    if (this.outsideClickClose) {\n      delete this.ignoredEvent;\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n\n  private escapeListener: () => void;\n  public addEscapeListener() {\n    this.escapeListener = this.renderer.listen(this.document, 'keydown.escape', event => {\n      this.smartOpenService.open = false;\n      this.setAnchorFocus();\n    });\n  }\n\n  public removeEscapeListener() {\n    if (this.escapeListener) {\n      this.escapeListener();\n      delete this.escapeListener;\n    }\n  }\n\n  private _anchorButtonRef: ElementRef;\n  public set anchorButtonRef(ref: ElementRef) {\n    this._anchorButtonRef = ref;\n  }\n  public get anchorButtonRef(): ElementRef {\n    return this._anchorButtonRef;\n  }\n\n  private _closeButtonRef: ElementRef;\n  public set closeButtonRef(ref: ElementRef) {\n    this._closeButtonRef = ref;\n  }\n  public get closeButtonRef(): ElementRef {\n    return this._closeButtonRef;\n  }\n\n  public setCloseFocus(): void {\n    this._closeButtonRef.nativeElement.focus();\n  }\n\n  public setAnchorFocus(): void {\n    this.anchorButtonRef.nativeElement.focus();\n  }\n\n  private _contentRef: ElementRef;\n  public set contentRef(host: ElementRef) {\n    this._contentRef = host;\n  }\n  public get contentRef(): ElementRef {\n    return this._contentRef;\n  }\n\n  private documentScroller: Observable<Event>;\n\n  private removeAllEventListeners() {\n    this.removeScrollListener();\n    this.removeClickListener();\n    this.removeEscapeListener();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.removeAllEventListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from './interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from './enums/viewport-violation.enum';\nimport { ClrVisibilityCoords } from './interfaces/visibility-coords.interface';\nimport { ClrAlignment } from './enums/alignment.enum';\n\n// Put the forward arg here but it is only needed when nudging content or anchors.\nexport type ClrTransform = (position: ClrPopoverPosition, back?: boolean) => ClrPopoverPosition;\n\nexport const flipSides: ClrTransform = position => {\n  return {\n    ...position,\n    side: -1 * position.side,\n  };\n};\n\n// This could be used in more advanced positioning algorithms.\n// flipAxisFlipSideAndNudgeContent(flipAxis, flipSide, nudge, nudgeForward?): ClrTransform {...}\n// I would like to keep it for now.\nexport const flipAxis: ClrTransform = position => {\n  return {\n    ...position,\n    axis: position.axis === 0 ? 1 : 0,\n  };\n};\n\nexport const nudgeContent: ClrTransform = (position, forward) => {\n  const nextAlignment = position.content + (forward ? 0.5 : -0.5);\n  if (nextAlignment < 0 || nextAlignment > 1) {\n    return position;\n  } else {\n    return {\n      ...position,\n      content: nextAlignment,\n    };\n  }\n};\n\nexport function flipSidesAndNudgeContent(flip: ClrTransform, nudge: ClrTransform, nudgeBack?: boolean): ClrTransform {\n  return (position: ClrPopoverPosition): ClrPopoverPosition => nudge(flip(position), nudgeBack);\n}\n\nexport function align(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): ClrPopoverContentOffset {\n  let xDiff = anchor.left;\n  let yDiff = anchor.top;\n\n  // When ClrAxis is VERTICAL BEFORE = left, AFTER = right\n  // When ClrAxis is HORIZONTAL BEFORE is top, AFTER is bottom\n  switch (position.axis + position.side) {\n    case -1: {\n      // ClrAxis.VERTICAL + ClrSide.BEFORE\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff -= content.height; // pull content up to the top of the anchor\n      break;\n    }\n    case 1: {\n      // ClrAxis.VERTICAL + ClrSide.AFTER\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff += anchor.height; // push the content down to below the anchor\n      break;\n    }\n    case 0: {\n      // ClrAxis.HORIZONTAL + ClrSide.BEFORE\n      xDiff -= content.width; // pull the content left of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    case 2: {\n      // ClrAxis.HORIZONTAL + ClrSide.AFTER\n      xDiff += anchor.width; // push the content right of of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return { xOffset: xDiff, yOffset: yDiff };\n}\n\nfunction alignHorizontal(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  let horizontalOffset = 0;\n  // horizontal offset for the anchor position\n  switch (position.anchor /*calculate for the anchor alignment*/) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset += anchor.width / 2; // push content over 1/2 anchor width\n      break;\n    }\n    case ClrAlignment.END: {\n      horizontalOffset += anchor.width; //  push content over width of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // horizontal offsets for anchor alignment\n  switch (\n    position.content // calculate for the content alignment\n  ) {\n    case ClrAlignment.START: {\n      // Nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset -= content.width / 2; // pull content left by a value of 1/2 content width\n      break;\n    }\n    case ClrAlignment.END: {\n      // subtract the width of currentContent from horizontalOffset to pull it back\n      horizontalOffset -= content.width;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return horizontalOffset;\n}\n\nfunction alignVertical(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  // y axis offsets for anchor alignment\n  let verticalOffset = 0;\n\n  // Calculate y offset for anchor position\n  switch (position.anchor) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset += anchor.height / 2; // push content down to the middle of the anchor rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset += anchor.height; // push content down to the bottom of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // Calculate y offsets for content alignment\n  switch (position.content) {\n    case ClrAlignment.START: {\n      // aligned to the top of the content rect\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset -= content.height / 2; // pull content back up to the middle of the content rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset -= content.height; // pull content back up to the bottom of the content rect\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return verticalOffset;\n}\n\nexport function testVisibility(offset: ClrPopoverContentOffset, content: ClientRect): ClrViewportViolation[] {\n  const violations: ClrViewportViolation[] = [];\n  const mockCoords: ClrVisibilityCoords = {\n    bottom: offset.yOffset + content.height,\n    left: offset.xOffset,\n    right: offset.xOffset + content.width,\n    top: offset.yOffset,\n  };\n\n  if (!(mockCoords.top >= 0)) {\n    violations.push(ClrViewportViolation.TOP);\n  }\n  if (!(mockCoords.left >= 0)) {\n    violations.push(ClrViewportViolation.LEFT);\n  }\n  if (!(mockCoords.bottom <= (window.innerHeight || document.documentElement.clientHeight))) {\n    violations.push(ClrViewportViolation.BOTTOM);\n  }\n  if (!(mockCoords.right <= (window.innerWidth || document.documentElement.clientWidth))) {\n    violations.push(ClrViewportViolation.RIGHT);\n  }\n\n  return violations;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAxis {\n  VERTICAL,\n  HORIZONTAL,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, OnDestroy, Optional } from '@angular/core';\n\nimport { LoadingListener } from './loading-listener';\n\nexport enum ClrLoadingState {\n  DEFAULT,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\n@Directive({ selector: '[clrLoading]' })\nexport class ClrLoading implements OnDestroy {\n  // We find the first parent that handles something loading\n  constructor(@Optional() private listener: LoadingListener) {}\n\n  private _loadingState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  public get loadingState() {\n    return this._loadingState;\n  }\n\n  @Input('clrLoading')\n  public set loadingState(value: boolean | ClrLoadingState) {\n    if (value === true) {\n      value = ClrLoadingState.LOADING;\n    } else if (!value) {\n      value = ClrLoadingState.DEFAULT;\n    }\n\n    if (value === this._loadingState) {\n      return;\n    }\n\n    this._loadingState = value;\n    if (this.listener) {\n      this.listener.loadingStateChange(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this.loadingState = ClrLoadingState.DEFAULT;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { ClrPopoverEventsService } from './popover-events.service';\nimport { ClrPopoverPosition } from '../interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from '../interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from '../enums/viewport-violation.enum';\nimport { align, flipSidesAndNudgeContent, flipSides, nudgeContent, testVisibility } from '../position-operators';\nimport { ClrAxis } from '../enums/axis.enum';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverPositionService {\n  private currentAnchorCoords: ClientRect;\n  private currentContentCoords: ClientRect;\n  private contentOffsets: ClrPopoverContentOffset;\n  private _position: ClrPopoverPosition;\n\n  private _shouldRealign: Subject<void> = new Subject();\n  shouldRealign: Observable<void> = this._shouldRealign.asObservable();\n\n  realign() {\n    this._shouldRealign.next();\n  }\n\n  set position(position: ClrPopoverPosition) {\n    this._position = position;\n  }\n  get position(): ClrPopoverPosition {\n    return this._position;\n  }\n\n  constructor(private eventService: ClrPopoverEventsService, @Inject(PLATFORM_ID) public platformId: Object) {}\n\n  public alignContent(content: HTMLElement): ClrPopoverContentOffset {\n    if (!isPlatformBrowser(this.platformId)) {\n      // Only position when in a browser.\n      // Default to the browser origin and prevent getBoundingClientRect from running.\n      return {\n        xOffset: 0,\n        yOffset: 0,\n      };\n    }\n\n    this.currentAnchorCoords = this.eventService.anchorButtonRef.nativeElement.getBoundingClientRect();\n    this.currentContentCoords = content.getBoundingClientRect();\n    this.contentOffsets = align(this.position, this.currentAnchorCoords, this.currentContentCoords);\n\n    const visibilityViolations: ClrViewportViolation[] = testVisibility(this.contentOffsets, this.currentContentCoords);\n    /**\n     * Calculate the sum of viewport errors. This calculation is used below with the provided Axis in the given\n     * ClrPopoverPosition. Its worth putting the ClrViewportViolation enum values here:\n     *\n     *   BOTTOM = 0,\n     *   LEFT = 1,\n     *   RIGHT = 2,\n     *   TOP = 3,\n     *\n     *   So, this.visibilityViolations.length tells us how many sides of the viewport that the popover content was\n     *   clipped on. We can only help when the content has an issue on one or two sides.\n     *   errorSum is calculated to determine _how_ to change the position. Looking at both the axis and the number\n     *   of violations I can use the errorSum to determine how to transform the position (on the fly) and adjust\n     *   where it can be improved.\n     *\n     *   Note, more than 3 viewport violations and there isn't anything we can do to help. Also when there are two\n     *   violations, we can't help if the violations are TOP+BOTTOM || LEFT+RIGHT => There is no transformation we\n     *   can make to the postion that will help.\n     *\n     *   Some examples:\n     *   There is only one error and Primary axis is VERTICAL\n     *   - this.handleVerticalAxisOneViolation has a switch that will use the error sum to apply the correct\n     *   transform to the postion based on the reduction of visibilityViolations.\n     *\n     *   There are two errors and Primary axis is HORIZONTAL\n     *   - handleHorizontalAxisTwoViolations has a switch that uses the error sum to apply both transforms needed to\n     *   improve the content position based on the reduction of visibilityViolations.\n     */\n\n    const errorSum = visibilityViolations.reduce((count, current) => {\n      return count + current;\n    }, 0);\n\n    if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there is one viewport violation\n      this.handleVerticalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there is one viewport violation\n      this.handleHorizontalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there are two viewport violations\n      this.handleVerticalAxisTwoViolations(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there are two viewport violations\n      this.handleHorizontalAxisTwoViolations(errorSum);\n    }\n    return this.contentOffsets;\n  }\n\n  private handleVerticalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 0:\n      case 3: {\n        // BOTTOM(0) or TOP(3) are primary violations and we can just flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 1: {\n        // LEFT(1) is secondary and needs to nudge content right\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 2: {\n        // RIGHT(2) is secondary and  needs to nudge content left\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleVerticalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      // We know there are two violations. We can use the errorSum to determine which combination of sides were\n      // violated and handle appropriately.\n      case 5: {\n        // TOP(3)+RIGHT(2) is case 5. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 4: {\n        //TOP(3)+LEFT(1) is case 4, we need to flip sides and nudge content to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2: {\n        // BOTTOM(0)+RIGHT(2) is case 2. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 1: {\n        // BOTTOM(0)+LEFT(1) is case 1. We need to flip sides and nudge to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 1:\n      case 2: {\n        // LEFT(1) and RIGHT(2) are primary violations so we can flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 0: {\n        // BOTTOM(0) is a secondary violation and we need to nudge content up\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3) is a secondary violation and we need to nudge content down\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      case 5:\n      case 4: {\n        // TOP(3)+LEFT(1) is case 4.\n        // TOP(3)+RIGHT(2) is case 5.\n        // In both of these cases we need to flip sides and nudge content down\n        const flipAndNudgeDown = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeDown(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2:\n      case 1: {\n        // BOTTOM(0)+RIGHT(2) is case 2.\n        // BOTTOM(0)+LEFT(1) is case 1.\n        // In both cases we  need to flip sides and nudge content up\n        const flipAndNudgeUp = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(flipAndNudgeUp(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport {\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  AfterContentChecked,\n  EventEmitter,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverPositionService } from './providers/popover-position.service';\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { debounceTime } from 'rxjs/operators';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Directive({ selector: '[clrPopoverContent]' })\nexport class ClrPopoverContent implements AfterContentChecked, OnDestroy {\n  private view: EmbeddedViewRef<void>;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrPopoverContent')\n  public set open(value: boolean) {\n    this.smartOpenService.open = !!value;\n  }\n\n  @Input('clrPopoverContentAt')\n  set contentAt(position: ClrPopoverPosition) {\n    this.smartPositionService.position = position;\n  }\n\n  @Input('clrPopoverContentOutsideClickToClose')\n  set outsideClickClose(clickToClose) {\n    this.smartEventsService.outsideClickClose = !!clickToClose;\n  }\n\n  @Input('clrPopoverContentScrollToClose')\n  set scrollToClose(scrollToClose) {\n    this.smartEventsService.scrollToClose = !!scrollToClose;\n  }\n\n  constructor(\n    @Inject(DOCUMENT) private document: HTMLDocument,\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private renderer: Renderer2,\n    private smartPositionService: ClrPopoverPositionService,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {}\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        if (change) {\n          this.addContent();\n        } else {\n          this.removeContent();\n        }\n      }),\n      this.smartPositionService.shouldRealign.subscribe(() => {\n        this.shouldRealign = true;\n        // Avoid flickering on initialization, caused by the asynchronous nature of the\n        // check-collector pattern.\n        this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n      }),\n      // Here we collect subsequent synchronously received content-check events and only take action\n      // at the end of the cycle. See below for details on the check-collector pattern.\n      this.checkCollector.pipe(debounceTime(0)).subscribe(() => {\n        this.alignContent();\n        this.shouldRealign = false;\n        this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '1');\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.removeContent();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private removeContent(): void {\n    if (!this.view) {\n      return;\n    }\n    this.view.rootNodes.forEach(node => this.renderer.removeChild(this.document.body, node));\n    this.container.clear();\n    delete this.view;\n  }\n\n  /**\n   * TODO(matt): investigate why DebugElement retains a reference to the nodes and causes a memory leak.\n   * A note about the use of appendChild/removeChild\n   * The DebugElement is keeping a reference to the detached node and its unclear why.\n   * This does warrant further investigation. But, since it doesn't happen in production mode\n   * it is a low priority issue for now.\n   */\n  private addContent() {\n    // Create the view container\n    this.view = this.container.createEmbeddedView(this.template);\n    this.smartEventsService.contentRef = this.view.rootNodes[0]; // So we know where/what to set close focus on\n    this.renderer.addClass(this.view.rootNodes[0], 'clr-popover-content');\n    // Reset to the begining of the document to be available for sizing/positioning calculations.\n    // If we add new content to the bottom it triggers changes in the layout that may lead to false anchor\n    // coordinates values.\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', '0px');\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', '0px');\n    // We need to hide it during the calculation phase, while it's not yet finally positioned.\n    this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n    this.renderer.listen(this.view.rootNodes[0], 'click', event => {\n      this.smartOpenService.openEvent = event;\n    });\n    this.view.rootNodes.forEach(node => {\n      this.renderer.appendChild(this.document.body, node);\n    });\n    // Mark for realingment on the next content-check cycle.\n    this.shouldRealign = true;\n  }\n\n  private shouldRealign = false;\n\n  // Check-collector pattern:\n  // In order to get accurate content height/width values, we cannot calculate alignment offsets until\n  // after the projected content has stabilized.\n  // As multiple check events may happen in the same rendering cycle, we need to collect all events\n  // and only act after the content is really stable. Or we may get wrong intermediate positioning values.\n  // We will channel subsequent content check events through this observable.\n  private checkCollector: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentChecked(): void {\n    if (this.smartOpenService.open && this.view && this.shouldRealign) {\n      // Channel content-check event through the check-collector\n      this.checkCollector.emit();\n    }\n  }\n\n  private alignContent() {\n    if (!this.view) {\n      return;\n    }\n    const positionCoords = this.smartPositionService.alignContent(this.view.rootNodes[0]);\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', `${positionCoords.yOffset}px`);\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', `${positionCoords.xOffset}px`);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, EventEmitter, HostListener, OnDestroy, Output } from '@angular/core';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrPopoverOpenCloseButton]',\n  host: {\n    '[class.clr-smart-open-close]': 'true',\n  },\n})\nexport class ClrPopoverOpenCloseButton implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(private smartOpenService: ClrPopoverToggleService) {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        this.openCloseChange.next(change);\n      })\n    );\n  }\n\n  @Output('clrPopoverOpenCloseChange') openCloseChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef, EventEmitter, Output, HostListener, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[clrPopoverCloseButton]',\n  host: {\n    '[class.clr-smart-close-button]': 'true',\n  },\n})\nexport class ClrPopoverCloseButton implements OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private elementRef: ElementRef,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.pipe(filter(value => !value)).subscribe(() => {\n        this.closeChange.next();\n      })\n    );\n  }\n\n  @Output('clrPopoverOnCloseChange') closeChange: EventEmitter<void> = new EventEmitter<void>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n    this.smartEventsService.setAnchorFocus();\n  }\n\n  ngAfterViewInit() {\n    this.smartEventsService.closeButtonRef = this.elementRef;\n    this.smartEventsService.setCloseFocus();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef } from '@angular/core';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\n\n@Directive({\n  selector: '[clrPopoverAnchor]',\n  host: {\n    '[class.clr-anchor]': 'true',\n  },\n})\nexport class ClrPopoverAnchor {\n  constructor(smartEventService: ClrPopoverEventsService, element: ElementRef) {\n    smartEventService.anchorButtonRef = element;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrPopoverContent } from './popover-content';\nimport { ClrPopoverOpenCloseButton } from './popover-open-close-button';\nimport { ClrPopoverCloseButton } from './popover-close-button';\nimport { ClrPopoverAnchor } from './popover-anchor';\n\n@NgModule({\n  imports: [],\n  declarations: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n  exports: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n})\nexport class ClrPopoverModuleNext {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrLoadingState } from './loading';\n\n/**\n * This is an abstract class because we need it to still be a valid token for dependency injection after transpiling.\n * This does not mean you should extend it, simply implementing it is fine.\n */\nexport abstract class LoadingListener {\n  abstract loadingStateChange(state: ClrLoadingState): void;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrButton } from '../button-group/button';\n\n@Injectable()\nexport class ButtonInGroupService {\n  private _changes: Subject<ClrButton> = new Subject<ClrButton>();\n\n  get changes(): Observable<ClrButton> {\n    return this._changes.asObservable();\n  }\n\n  updateButtonGroup(button: ClrButton): void {\n    this._changes.next(button);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Optional, Output, SkipSelf, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-button',\n  template: `\n        <ng-template #buttonProjectedRef>\n            <button \n                [class]=\"classNames\" \n                (click)=\"emitClick($event)\"\n                [attr.type]=\"type\"\n                [attr.name]=\"name\"\n                [attr.disabled]=\"disabled\"\n                [id]=\"id\">\n                <span class=\"spinner spinner-inline\" *ngIf=\"loading\"></span>\n                <ng-content></ng-content>\n            </button>\n        </ng-template>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrButton }],\n})\nexport class ClrButton implements LoadingListener {\n  private _enableService: boolean = false;\n\n  @ViewChild('buttonProjectedRef', { static: true })\n  templateRef: TemplateRef<ClrButton>;\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public buttonInGroupService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService\n  ) {}\n\n  private _inMenu: boolean = false;\n\n  get inMenu(): boolean {\n    return this._inMenu;\n  }\n\n  @Input('clrInMenu')\n  set inMenu(value: boolean) {\n    value = !!value;\n    if (this._inMenu !== value) {\n      this._inMenu = value;\n      // We check if the service flag is enabled\n      // and if the service exists because the service is optional\n      if (this._enableService && this.buttonInGroupService) {\n        this.buttonInGroupService.updateButtonGroup(this);\n      }\n    }\n  }\n\n  private _classNames: string = 'btn';\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  @Input('class')\n  set classNames(value: string) {\n    if (typeof value === 'string') {\n      const classNames: string[] = value.split(' ');\n      if (classNames.indexOf('btn') === -1) {\n        classNames.push('btn');\n      }\n      this._classNames = classNames.join(' ');\n    }\n  }\n\n  private _name: string = null;\n\n  get name(): string {\n    return this._name;\n  }\n\n  @Input('name')\n  set name(value: string) {\n    if (typeof value === 'string') {\n      this._name = value;\n    }\n  }\n\n  private _type: string = null;\n\n  get type(): string {\n    return this._type;\n  }\n\n  @Input('type')\n  set type(value: string) {\n    if (typeof value === 'string') {\n      this._type = value;\n    }\n  }\n\n  private _id: string = null;\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input('id')\n  set id(value: string) {\n    if (typeof value === 'string') {\n      this._id = value;\n    }\n  }\n\n  private _disabled: any = null;\n\n  get disabled(): any {\n    return this._disabled;\n  }\n\n  @Input('disabled')\n  set disabled(value: any) {\n    if (value !== null && value !== false) {\n      this._disabled = '';\n    } else {\n      this._disabled = null;\n    }\n  }\n\n  public loading: boolean;\n\n  loadingStateChange(state: ClrLoadingState): void {\n    this.loading = state === ClrLoadingState.LOADING;\n  }\n\n  @Output('click') _click: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  emitClick($event): void {\n    if (this.inMenu) {\n      this.toggleService.toggleWithEvent($event);\n    }\n    this._click.emit(true);\n  }\n\n  ngAfterViewInit() {\n    this._enableService = true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { CommonStringsServiceInternal } from '@clr/core/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrCommonStringsService extends CommonStringsServiceInternal {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nlet NB_INSTANCES = 0;\n\nexport const UNIQUE_ID = new InjectionToken<string>('UNIQUE_ID');\n\nexport function uniqueIdFactory() {\n  return 'clr-id-' + NB_INSTANCES++;\n}\n\nexport const UNIQUE_ID_PROVIDER = {\n  provide: UNIQUE_ID,\n  useFactory: uniqueIdFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrSide {\n  BEFORE = -1,\n  AFTER = 1,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrAxis } from './axis.enum';\nimport { ClrSide } from './side.enum';\nimport { ClrAlignment } from './alignment.enum';\n\ninterface ClrPopoverPositionsInterface {\n  axis: ClrAxis;\n  side: ClrSide;\n  anchor: ClrAlignment;\n  content: ClrAlignment;\n}\n\nexport class ClrPopoverPositions {\n  static 'top-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'top-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'bottom-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'bottom-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'right-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'right-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'left-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'left-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { uniqueIdFactory } from '../id-generator/id-generator.service';\n\nexport enum ClrAriaLivePoliteness {\n  off = 'off',\n  polite = 'polite',\n  assertive = 'assertive',\n}\n\n/**\n * Time in milliseconds before inserting the content into the container\n */\nconst ARIA_LIVE_TICK: number = 100;\n\n/**\n * This service handle `aria-live` accessibility attribute. The issue is that you need\n * to have the DOM Element with attribute `aria-live` before you could insert content\n * and SR (Screen Reader) pick the change and announce it.\n *\n * ```typescript\n * import { ClrAriaLiveService } from 'src/clr-angular/utils/a11y/aria-live.service';\n *\n * @Component({\n * selector: 'clr-demo-component',\n * providers: [ClrAriaLiveService],\n * template: `\n *   <ng-content></ng-content>\n * `,\n * })\n * export class DemoComponent {\n *  constructor(ariaLiveService: ClrAriaLiveService) {}\n *\n *  public actionThatWillTriggerChange() {\n *    this.ariaLiveService.announce('message that I want to announce to SR');\n *  }\n * }\n * ```\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrAriaLiveService implements OnDestroy {\n  private ariaLiveElement: HTMLElement;\n  private document: Document;\n  private previousTimeout: ReturnType<typeof setTimeout>;\n\n  constructor(\n    private ngZone: NgZone,\n    @Inject(DOCUMENT) _document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = _document;\n  }\n\n  private _id: string = `clr-aria-live-element-${uniqueIdFactory()}`;\n  /**\n   * get access to the internal HTML `id` that gonna be used for the AriaLive container.\n   * @return ID of the DOM Element as string.\n   */\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Append text content inside the AriaLive Container. This method will check if the\n   * DOM Element is existing if not it will create one for us and the will apply the text.\n   *\n   * ```typescript\n   * this.ariaLiveService.announce(this.el.nativeElement);\n   * // or\n   * this.ariaLiveService.announce('Message to announce to SR');\n   * ```\n   *\n   * @remark\n   * When second argument is `AriaLivePoliteness.off` we won't create aria container or update it.\n   * The reason for that is that we don't want to do additional work if the SR will ignore it.\n   *\n   * @param message - This could be simple string or HTMLElement\n   * @param politeness - 'polite', 'assertive' or 'off'\n   */\n  public announce(\n    message: string | HTMLElement,\n    politeness: ClrAriaLivePoliteness = ClrAriaLivePoliteness.polite\n  ): void {\n    if (politeness === ClrAriaLivePoliteness.off) {\n      return;\n    }\n\n    if (!this.ariaLiveElement && isPlatformBrowser(this.platformId)) {\n      this.ariaLiveElement = this.createContainer();\n    }\n\n    message = typeof message !== 'string' && isPlatformBrowser(this.platformId) ? message.textContent : message;\n\n    // when there is no message do NOTHING!\n    if (!message) {\n      return;\n    }\n\n    this.ariaLiveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    this.ngZone.runOutsideAngular(() => {\n      // This clearTimeout will stop all older messages from announcing\n      // in the case where the messages are comming too fast we gonna try to append only\n      // the last one. That's what the SR will try to do anyway.\n      clearTimeout(this.previousTimeout);\n      this.previousTimeout = setTimeout(() => {\n        this.ariaLiveElement.textContent = <string>message;\n      }, ARIA_LIVE_TICK);\n    });\n  }\n\n  /**\n   * onDestroy life cycle - must stop all active setTimeouts and remove the AriaLive\n   * container from the document.\n   */\n  public ngOnDestroy() {\n    clearTimeout(this.previousTimeout);\n    if (isPlatformBrowser(this.platformId) && this.ariaLiveElement) {\n      this.document.body.removeChild(this.ariaLiveElement);\n      this.ariaLiveElement = null;\n    }\n  }\n\n  /**\n   * Create AriaLive DOM element as a last child of the document.\n   * After the element is created, we gonna apply Clarity class to hide it from\n   * the screen and set the `aria-live` politness.\n   *\n   * `clr-sr-only` is the CSS class that is used to hide the element from the screen.\n   *\n   * @remark\n   * Calling this method multiple times will create multiple DOM Elements, that\n   * won't be tracked and will be GC after the service is destroyed.\n   *\n   * @return AriaLive container as HTMLElement\n   *\n   */\n  private createContainer(): HTMLElement {\n    const ariaLiveElement = this.document.createElement('div');\n\n    ariaLiveElement.setAttribute('id', this.id);\n    // Use clarity screen reader class to hide the dom element\n    // and fix the scrollbar shake\n    ariaLiveElement.classList.add('clr-sr-only');\n\n    ariaLiveElement.setAttribute('aria-atomic', 'true');\n    ariaLiveElement.setAttribute('aria-live', ClrAriaLivePoliteness.polite);\n\n    this.document.body.appendChild(ariaLiveElement);\n\n    return ariaLiveElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\n\nimport { ClrButton } from './button';\n\n@Component({\n  selector: 'clr-button-group',\n  templateUrl: 'button-group.html',\n  providers: [\n    ButtonInGroupService,\n    UNIQUE_ID_PROVIDER,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n  ],\n  host: { '[class.btn-group]': 'true' },\n})\nexport class ClrButtonGroup {\n  @ContentChildren(ClrButton) buttons: QueryList<ClrButton>;\n\n  constructor(\n    public buttonGroupNewService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  public popoverPosition: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  inlineButtons: ClrButton[] = [];\n  menuButtons: ClrButton[] = [];\n\n  /**\n   * 1. Initializes the initial Button Group View\n   * 2. Subscribes to changes on the ContentChildren\n   *    in case the user content projection changes\n   */\n  ngAfterContentInit() {\n    this.initializeButtons();\n    this.buttonGroupNewService.changes.subscribe(button => this.rearrangeButton(button));\n    this.buttons.changes.subscribe(() => {\n      this.initializeButtons();\n    });\n  }\n\n  /**\n   * Moves the button into the other ViewContainer\n   * when an update is received.\n   *\n   * @param button\n   */\n  rearrangeButton(button: ClrButton): void {\n    let fromView: ClrButton[];\n    let toView: ClrButton[];\n    if (button.inMenu) {\n      fromView = this.inlineButtons;\n      toView = this.menuButtons;\n    } else {\n      fromView = this.menuButtons;\n      toView = this.inlineButtons;\n    }\n    const index: number = fromView.indexOf(button);\n    if (index > -1) {\n      fromView.splice(index, 1);\n      const moveIndex = this.getMoveIndex(button);\n      if (moveIndex <= toView.length) {\n        toView.splice(moveIndex, 0, button);\n      }\n    }\n  }\n\n  /**\n   * Author: Eudes\n   *\n   * Finds the order of a button w.r.t other buttons\n   *\n   * @param buttonToMove\n   * @returns\n   */\n  getMoveIndex(buttonToMove: ClrButton): number {\n    const tempArr: ClrButton[] = this.buttons.filter(button => button.inMenu === buttonToMove.inMenu);\n    return tempArr.indexOf(buttonToMove);\n  }\n\n  initializeButtons(): void {\n    const tempInlineButtons: ClrButton[] = [];\n    const tempInMenuButtons: ClrButton[] = [];\n    this.buttons.forEach(button => {\n      if (button.inMenu) {\n        tempInMenuButtons.push(button);\n      } else {\n        tempInlineButtons.push(button);\n      }\n    });\n    this.inlineButtons = tempInlineButtons;\n    this.menuButtons = tempInMenuButtons;\n  }\n\n  /**\n   * Overflow Menu\n   *\n   */\n\n  // Indicates the position of the overflow menu\n  private _menuPosition: string;\n\n  get menuPosition(): string {\n    return this._menuPosition;\n  }\n\n  @Input('clrMenuPosition')\n  set menuPosition(pos: string) {\n    if (pos && ClrPopoverPositions[pos]) {\n      this._menuPosition = pos;\n    } else {\n      this._menuPosition = 'bottom-left';\n    }\n\n    this.popoverPosition = ClrPopoverPositions[this._menuPosition];\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrButton } from './button';\nimport { ClrButtonGroup } from './button-group';\n\nexport const CLR_BUTTON_GROUP_DIRECTIVES: Type<any>[] = [ClrButton, ClrButtonGroup];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrPopoverModuleNext],\n  declarations: [CLR_BUTTON_GROUP_DIRECTIVES],\n  exports: [CLR_BUTTON_GROUP_DIRECTIVES],\n})\nexport class ClrButtonGroupModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\n@Component({\n  selector: 'button[clrLoading]',\n  template: `\n        <ng-container [ngSwitch]=\"state\">\n            <span *ngSwitchCase=\"buttonState.LOADING\">\n                <span @spinner class=\"spinner spinner-inline\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.SUCCESS\">\n                <span @validated (@validated.done)=\"this.loadingStateChange(this.buttonState.DEFAULT)\" class=\"spinner spinner-inline spinner-check\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.DEFAULT\" @defaultButton>\n                <ng-content></ng-content>\n            </span>\n        </ng-container>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrLoadingButton }],\n  animations: [\n    trigger('defaultButton', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      // TODO: see if we can get leave animation to work before spinner's enter animation\n      transition(':leave', [style({ opacity: 0 })]),\n    ]),\n    trigger('spinner', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n    trigger('validated', [\n      transition(':enter', [\n        animate(\n          '600ms',\n          keyframes([\n            style({ transform: 'scale(0,0)', offset: 0 }),\n            style({ opacity: 1, offset: 0.2 }),\n            style({ transform: 'scale(1.2,1.2)', offset: 0.4 }),\n            style({ transform: 'scale(.9,.9)', offset: 0.6 }),\n            style({ transform: 'scale(1,1)', offset: 1 }),\n          ])\n        ),\n      ]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  host: { '[attr.disabled]': \"disabled? '' : null\" },\n})\nexport class ClrLoadingButton implements LoadingListener {\n  public buttonState = ClrLoadingState;\n  public state: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  @Input('disabled') public disabled: boolean;\n\n  @Output('clrLoadingChange')\n  public clrLoadingChange: EventEmitter<ClrLoadingState> = new EventEmitter<ClrLoadingState>(false);\n\n  constructor(public el: ElementRef, private renderer: Renderer2) {}\n\n  loadingStateChange(state: ClrLoadingState): void {\n    if (state === this.state) {\n      return;\n    }\n    this.state = state;\n\n    switch (state) {\n      case ClrLoadingState.DEFAULT:\n        this.renderer.removeStyle(this.el.nativeElement, 'width');\n        this.renderer.removeStyle(this.el.nativeElement, 'transform'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        if (!this.disabled) {\n          this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n        }\n        break;\n      case ClrLoadingState.LOADING:\n        this.setExplicitButtonWidth();\n        this.renderer.setStyle(this.el.nativeElement, 'transform', 'translatez(0)'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        this.renderer.setAttribute(this.el.nativeElement, 'disabled', '');\n        break;\n      case ClrLoadingState.SUCCESS:\n        this.setExplicitButtonWidth();\n        break;\n      case ClrLoadingState.ERROR:\n        this.loadingStateChange(ClrLoadingState.DEFAULT);\n        break;\n      default:\n        break;\n    }\n    this.clrLoadingChange.emit(state);\n  }\n\n  private setExplicitButtonWidth() {\n    if (this.el.nativeElement && this.el.nativeElement.getBoundingClientRect) {\n      const boundingClientRect = this.el.nativeElement.getBoundingClientRect();\n      this.renderer.setStyle(this.el.nativeElement, 'width', `${boundingClientRect.width}px`);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoadingButton } from './loading-button';\n\nexport const CLR_LOADING_BUTTON_DIRECTIVES: Type<any>[] = [ClrLoadingButton];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_LOADING_BUTTON_DIRECTIVES],\n  exports: [CLR_LOADING_BUTTON_DIRECTIVES],\n})\nexport class ClrLoadingButtonModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonGroupModule } from './button-group/button-group.module';\nimport { ClrLoadingButtonModule } from './button-loading/loading-button.module';\n\n@NgModule({\n  exports: [ClrLoadingButtonModule, ClrButtonGroupModule],\n})\nexport class ClrButtonModule {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  template: '',\n})\nexport class EmptyAnchor {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * Internal module, please do not export!\n */\n@NgModule({ declarations: [EmptyAnchor], exports: [EmptyAnchor], entryComponents: [EmptyAnchor] })\nexport class ClrHostWrappingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class ControlIdService {\n  private _id = 'clr-form-control-' + ++counter;\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport enum Layouts {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  COMPACT = 'compact',\n}\n\n@Injectable()\nexport class LayoutService {\n  readonly minLabelSize = 1;\n  readonly maxLabelSize = 12;\n  layout: Layouts = Layouts.HORIZONTAL;\n\n  // This is basically a replacement for Object.values(), which IE11 and Node <9 don't support :(\n  // String enums cannot be reverse-mapped, meaning Layouts['COMPACT'] does not return 'compact' so\n  // this exists to deal with this little caveat to get the list of the values as an array.\n  private layoutValues: string[] = Object.keys(Layouts).map(key => Layouts[key]);\n  private _labelSize: number = 2;\n\n  set labelSize(size: number) {\n    if (this.labelSizeIsValid(size)) {\n      this._labelSize = size;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  isVertical(): boolean {\n    return this.layout === Layouts.VERTICAL;\n  }\n\n  isHorizontal(): boolean {\n    return this.layout === Layouts.HORIZONTAL;\n  }\n\n  isCompact(): boolean {\n    return this.layout === Layouts.COMPACT;\n  }\n\n  get layoutClass(): string {\n    return `clr-form-${this.layout}`;\n  }\n\n  isValid(layout: string): boolean {\n    return this.layoutValues.indexOf(layout) > -1;\n  }\n\n  labelSizeIsValid(labelSize: number): boolean {\n    return Number.isInteger(labelSize) && labelSize >= this.minLabelSize && labelSize <= this.maxLabelSize;\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional, ElementRef, AfterViewInit } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  providers: [ClrAriaLiveService],\n  selector: 'clr-control-error',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-error\"',\n  },\n})\nexport class ClrControlError implements AfterViewInit {\n  constructor(\n    @Optional() public controlIdService: ControlIdService,\n    private ariaLiveService: ClrAriaLiveService,\n    private el: ElementRef\n  ) {}\n\n  ngAfterViewInit() {\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.el.nativeElement);\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\n\n@Component({\n  selector: 'clr-control-helper',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-helper\"',\n  },\n})\nexport class ClrControlHelper {\n  constructor(@Optional() public controlIdService: ControlIdService) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class NgControlService {\n  // Observable to subscribe to the control, since its not available immediately for projected content\n  private _controlChanges: Subject<NgControl> = new Subject<NgControl>();\n  get controlChanges(): Observable<NgControl> {\n    return this._controlChanges.asObservable();\n  }\n\n  setControl(control: NgControl) {\n    this._controlChanges.next(control);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { NgControlService } from '../providers/ng-control.service';\n\n@Injectable()\nexport class IfErrorService implements OnDestroy {\n  // Implement our own status changes observable, since Angular controls don't\n  // fire on events like blur, and we want to return the boolean state instead of a string\n  private _statusChanges: Subject<boolean> = new Subject();\n  get statusChanges(): Observable<boolean> {\n    return this._statusChanges.asObservable();\n  }\n\n  private subscriptions: Subscription[] = [];\n  private control: NgControl;\n\n  constructor(private ngControlService: NgControlService) {\n    // Wait for the control to be available\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.control = control;\n          this.listenForChanges();\n        }\n      })\n    );\n  }\n\n  // Subscribe to the status change events, only after touched and emit the control\n  private listenForChanges() {\n    this.subscriptions.push(\n      this.control.statusChanges.subscribe(() => {\n        this.sendValidity();\n      })\n    );\n  }\n\n  private sendValidity() {\n    if (this.control.touched && this.control.invalid) {\n      this._statusChanges.next(true);\n    } else {\n      this._statusChanges.next(false);\n    }\n  }\n\n  // Allows a control to push a status check upstream, such as on blur\n  triggerStatusChange() {\n    if (this.control) {\n      this.sendValidity();\n    }\n  }\n\n  // Clean up subscriptions\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfErrorService } from './if-error.service';\nimport { NgControlService } from '../providers/ng-control.service';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrIfError]' })\nexport class ClrIfError {\n  constructor(\n    @Optional() private ifErrorService: IfErrorService,\n    @Optional() private ngControlService: NgControlService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    if (!this.ifErrorService) {\n      throw new Error('clrIfError can only be used within a form control container element like clr-input-container');\n    } else {\n      this.displayError(false);\n    }\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        // If there is a specific error to track, check it, otherwise check overall validity\n        if (this.error && this.control) {\n          this.displayError(this.control.hasError(this.error));\n        } else {\n          this.displayError(invalid);\n        }\n      })\n    );\n  }\n\n  @Input('clrIfError') error: string;\n\n  private subscriptions: Subscription[] = [];\n  private displayed: boolean = false;\n  private control: NgControl;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private displayError(invalid: boolean) {\n    if (invalid && !this.displayed) {\n      this.container.createEmbeddedView(this.template);\n      this.displayed = true;\n    } else if (!invalid) {\n      this.container.clear();\n      this.displayed = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostBinding, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { LayoutService } from './providers/layout.service';\nimport { NgControlService } from './providers/ng-control.service';\n\n@Directive({ selector: 'label' })\nexport class ClrLabel implements OnInit, OnDestroy {\n  constructor(\n    @Optional() private controlIdService: ControlIdService,\n    @Optional() private layoutService: LayoutService,\n    @Optional() private ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  @HostBinding('attr.for')\n  @Input('for')\n  forAttr: string;\n\n  private subscriptions: Subscription[] = [];\n  private enableGrid = true;\n\n  get labelText(): string {\n    return this.el.nativeElement && this.el.nativeElement.textContent;\n  }\n\n  ngOnInit() {\n    // Only add the clr-control-label if it is inside a control container\n    if (this.controlIdService || this.ngControlService) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-control-label');\n    }\n    // Only set the grid column classes if we are in the right context and if they aren't already set\n    if (\n      this.enableGrid &&\n      this.layoutService &&\n      !this.layoutService.isVertical() &&\n      this.el.nativeElement &&\n      this.el.nativeElement.className.indexOf('clr-col') < 0\n    ) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-col-12');\n      this.renderer.addClass(this.el.nativeElement, `clr-col-md-${this.layoutService.labelSize}`);\n    }\n    if (this.controlIdService && !this.forAttr) {\n      this.subscriptions.push(this.controlIdService.idChange.subscribe(id => (this.forAttr = id)));\n    }\n  }\n\n  disableGrid() {\n    this.enableGrid = false;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class MarkControlService {\n  private _touched: Subject<void> = new Subject();\n\n  get touchedChange(): Observable<void> {\n    return this._touched.asObservable();\n  }\n\n  markAsTouched() {\n    this._touched.next();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ContentChildren,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  PLATFORM_ID,\n  QueryList,\n  Input,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { LayoutService } from './providers/layout.service';\nimport { MarkControlService } from './providers/mark-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrLabel } from './label';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Directive({\n  selector: '[clrForm]',\n  providers: [LayoutService, MarkControlService, ClrAriaLiveService],\n  host: {\n    '[class.clr-form]': 'true',\n    '[class.clr-form-horizontal]': 'layoutService.isHorizontal()',\n    '[class.clr-form-compact]': 'layoutService.isCompact()',\n  },\n})\nexport class ClrForm {\n  private invalidControls = [];\n\n  @Input('clrLabelSize')\n  set labelSize(size: number) {\n    this.layoutService.labelSize = size;\n  }\n\n  constructor(\n    public layoutService: LayoutService,\n    private markControlService: MarkControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private el: ElementRef,\n    private commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  /** @deprecated since 2.0 */\n  markAsDirty(updateAriaLiveText?: boolean) {\n    this.markAsTouched((updateAriaLiveText = true));\n  }\n\n  // Trying to avoid adding an input and keep this backwards compatible at the same time\n  markAsTouched(updateAriaLiveText?: boolean) {\n    this.markControlService.markAsTouched();\n\n    // I don't think consumers will call this with undefined, null or other values but\n    // want to make sure this only guards against when this is called with false\n    if (updateAriaLiveText !== false && isPlatformBrowser(this.platformId)) {\n      this.invalidControls = Array.from(this.el.nativeElement.querySelectorAll('.ng-invalid'));\n      if (this.invalidControls.length > 0) {\n        this.invalidControls[0].focus();\n        this.updateAriaLive();\n      }\n    }\n  }\n\n  @ContentChildren(ClrLabel, { descendants: true })\n  labels: QueryList<ClrLabel>;\n\n  @HostListener('submit')\n  onFormSubmit() {\n    this.markAsTouched();\n  }\n\n  /** @deprecated since 3.0, remove in 4.0 */\n  private updateAriaLive(): void {\n    if (this.invalidControls.length === 0) {\n      return;\n    }\n\n    const errorList = this.labels.filter(label => this.invalidControls.find(control => label.forAttr === control.id));\n\n    this.ariaLiveService.announce(\n      this.commonStrings.parse(this.commonStrings.keys.formErrorSummary, { ERROR_NUMBER: errorList.length.toString() })\n    );\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Input, OnInit } from '@angular/core';\nimport { Layouts, LayoutService } from './providers/layout.service';\n\n@Directive({\n  selector: '[clrForm][clrLayout]',\n})\nexport class ClrLayout implements OnInit {\n  @Input('clrLayout') layout: Layouts;\n\n  constructor(public layoutService: LayoutService) {}\n\n  ngOnInit() {\n    // Only set the layout if it is a valid option\n    if (this.layout && this.layoutService.isValid(this.layout)) {\n      this.layoutService.layout = this.layout;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional } from '@angular/core';\nimport { LayoutService } from './layout.service';\n\n@Injectable()\nexport class ControlClassService {\n  className = '';\n\n  constructor(@Optional() private layoutService: LayoutService) {}\n\n  controlClass(invalid = false, grid = false, additional = '') {\n    const controlClasses = [this.className, additional];\n    if (invalid) {\n      controlClasses.push('clr-error');\n    }\n    if (grid && this.layoutService && this.className.indexOf('clr-col') === -1) {\n      controlClasses.push(`clr-col-md-${this.layoutService.maxLabelSize - this.layoutService.labelSize} clr-col-12`);\n    }\n    return controlClasses.join(' ').trim();\n  }\n\n  // We want to remove the column classes from the input up to the container\n  initControlClass(renderer, element: HTMLElement) {\n    if (element && element.className) {\n      this.className = element.className;\n      const klasses = element.className.split(' ');\n      klasses.forEach(klass => {\n        if (klass.startsWith('clr-col')) {\n          renderer.removeClass(element, klass);\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ContentChild, Directive, OnDestroy, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { LayoutService } from './providers/layout.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ClrLabel } from './label';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Directive()\nexport abstract class ClrAbstractContainer implements DynamicWrapper, OnDestroy {\n  protected subscriptions: Subscription[] = [];\n  invalid = false;\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  control: NgControl;\n\n  constructor(\n    protected ifErrorService: IfErrorService,\n    @Optional() protected layoutService: LayoutService,\n    protected controlClassService: ControlClassService,\n    protected ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Component({\n  selector: 'clr-control-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrControlContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  InjectionToken,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { DynamicWrapper } from './dynamic-wrapper';\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * HostWrapper must be called in OnInit to ensure that the Views are ready. If its called in a constructor the view is\n * still undefined.\n * TODO - make sure these comment annotations do not break ng-packgr.\n */\nexport class HostWrapper<W extends DynamicWrapper> implements Injector {\n  constructor(containerType: Type<W>, vcr: ViewContainerRef, index: number = 0) {\n    this.injector = vcr.injector;\n    // If the host is already wrapped, we don't do anything\n    if (!this.injector.get(containerType, null)) {\n      const cfr = this.injector.get(ComponentFactoryResolver);\n      const el = this.injector.get(ElementRef);\n\n      // We need a new anchor, since we're projecting the current one.\n      vcr.createComponent(cfr.resolveComponentFactory(EmptyAnchor));\n      const factory: ComponentFactory<W> = cfr.resolveComponentFactory(containerType);\n      // Craft the element array based on what slot to use. Angular only uses the index to determine\n      // which ng-content to project into, so if you have more than one ng-content you'll need to set\n      // the index in the constructor appropriately\n      const element = [];\n      element[index] = [el.nativeElement];\n      // We're assuming only one projection slot, but in more complex cases we might want to provide\n      // a different array of projected elements.\n      const containerRef = vcr.createComponent(factory, undefined, undefined, element);\n      // We can now remove the useless anchor\n      vcr.remove(0);\n\n      // We note that the container was dynamically created\n      containerRef.instance._dynamic = true;\n\n      // We keep the wrapper's injector to access the dependencies that weren't available before.\n      this.injector = containerRef.injector;\n    }\n  }\n\n  private injector: Injector;\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    return this.injector.get(token, notFoundValue);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  HostBinding,\n  InjectionToken,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  Directive,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter, distinctUntilChanged, startWith } from 'rxjs/operators';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControl } from '@angular/forms';\nimport { ControlClassService } from './providers/control-class.service';\nimport { MarkControlService } from './providers/mark-control.service';\n\n@Directive()\nexport class WrappedFormControl<W extends DynamicWrapper> implements OnInit, OnDestroy {\n  protected ngControlService: NgControlService;\n  private ifErrorService: IfErrorService;\n  private controlClassService: ControlClassService;\n  private markControlService: MarkControlService;\n  protected renderer: Renderer2;\n  protected el: ElementRef<any>;\n\n  protected subscriptions: Subscription[] = [];\n  protected index = 0;\n  protected controlIdService: ControlIdService;\n\n  _id: string;\n\n  // I lost way too much time trying to make this work without injecting the ViewContainerRef and the Injector,\n  // I'm giving up. So we have to inject these two manually for now.\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected wrapperType: Type<W>,\n    injector: Injector,\n    private ngControl: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    this.renderer = renderer;\n    this.el = el;\n    try {\n      this.ngControlService = injector.get(NgControlService);\n      this.ifErrorService = injector.get(IfErrorService);\n      this.controlClassService = injector.get(ControlClassService);\n      this.markControlService = injector.get(MarkControlService);\n    } catch (e) {}\n\n    if (this.controlClassService) {\n      this.controlClassService.initControlClass(renderer, el.nativeElement);\n    }\n    if (this.markControlService) {\n      this.subscriptions.push(\n        this.markControlService.touchedChange.subscribe(() => {\n          this.ngControl.control.markAsTouched();\n          this.ngControl.control.updateValueAndValidity();\n        })\n      );\n    }\n  }\n\n  @HostBinding()\n  @Input()\n  get id() {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    if (this.controlIdService) {\n      this.controlIdService.id = value;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    if (this.ifErrorService) {\n      this.ifErrorService.triggerStatusChange();\n    }\n  }\n\n  private _containerInjector: Injector;\n\n  // @TODO This method has a try/catch due to an unknown issue that came when building the clrToggle feature\n  // We need to figure out why this fails for the ClrToggle scenario but works for Date picker...\n  // To see the error, remove the try/catch here and run the ClrToggle suite to see issues getting the container\n  // injector in time, and this ONLY HAPPENS in tests and not in dev/prod mode.\n  protected getProviderFromContainer<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    try {\n      return this._containerInjector.get(token, notFoundValue);\n    } catch (e) {\n      return notFoundValue;\n    }\n  }\n\n  ngOnInit() {\n    this._containerInjector = new HostWrapper(this.wrapperType, this.vcr, this.index);\n    this.controlIdService = this._containerInjector.get(ControlIdService);\n\n    if (this._id) {\n      this.controlIdService.id = this._id;\n    } else {\n      this._id = this.controlIdService.id;\n    }\n\n    if (this.ngControlService) {\n      this.ngControlService.setControl(this.ngControl);\n    }\n\n    this.listenForErrorStateChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private listenForErrorStateChanges() {\n    if (this.ifErrorService) {\n      this.subscriptions.push(\n        this.ifErrorService.statusChanges\n          .pipe(startWith(false), filter(() => this.renderer && !!this.el), distinctUntilChanged())\n          .subscribe(error => this.setAriaDescribedBy(error))\n      );\n    }\n  }\n\n  private setAriaDescribedBy(error: boolean) {\n    this.renderer.setAttribute(this.el.nativeElement, 'aria-describedby', this.getAriaDescribedById(error));\n  }\n\n  private getAriaDescribedById(error: boolean): string {\n    return this.controlIdService.id.concat(error ? '-error' : '-helper');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { WrappedFormControl } from './wrapped-control';\nimport { ClrControlContainer } from './control-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrControl]', host: { '[class.clr-input]': 'true' } })\nexport class ClrControl extends WrappedFormControl<ClrControlContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrControlContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrControlError } from './error';\nimport { ClrControlHelper } from './helper';\nimport { ClrIfError } from './if-error/if-error';\nimport { ClrLabel } from './label';\nimport { ClrForm } from './form';\nimport { ClrLayout } from './layout';\nimport { ClrControlContainer } from './control-container';\nimport { ClrControl } from './control';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlHelper,\n    ClrIfError,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  exports: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlHelper,\n    ClrIfError,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  entryComponents: [ClrControlContainer],\n})\nexport class ClrCommonFormsModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, OnInit, ContentChild, Inject, InjectionToken, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\nexport const IS_TOGGLE = new InjectionToken<BehaviorSubject<boolean>>('IS_TOGGLE');\nexport function isToggleFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const IS_TOGGLE_PROVIDER = { provide: IS_TOGGLE, useFactory: isToggleFactory };\n\n@Component({\n  selector: 'clr-checkbox-wrapper,clr-toggle-wrapper',\n  template: `\n    <ng-content select=\"[clrCheckbox],[clrToggle]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-checkbox-wrapper]': '!toggle',\n    '[class.clr-toggle-wrapper]': 'toggle',\n  },\n  providers: [ControlIdService, IS_TOGGLE_PROVIDER],\n})\nexport class ClrCheckboxWrapper implements DynamicWrapper, OnInit, OnDestroy {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n  toggle = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(@Inject(IS_TOGGLE) toggleService: BehaviorSubject<boolean>) {\n    this.subscriptions.push(\n      toggleService.subscribe(state => {\n        this.toggle = state;\n      })\n    );\n  }\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Renderer2, ElementRef, Injector, Self, Optional, ViewContainerRef, Attribute } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ClrCheckboxWrapper, IS_TOGGLE } from './checkbox-wrapper';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n/**\n * This implements both the clrCheckbox and clrToggle functionality, since they are both just checkboxes with different\n * visual styling. The challenge is that the container needs to know which selector was used, which the @Attribute\n * decorator gets for us to determine if the toggle is used, and emits a value to the wrapper container to tell it\n * there is a toggle switch instead.\n */\n@Directive({ selector: '[clrCheckbox],[clrToggle]' })\nexport class ClrCheckbox extends WrappedFormControl<ClrCheckboxWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Attribute('clrToggle') private toggle: string\n  ) {\n    super(vcr, ClrCheckboxWrapper, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const toggleService = this.getProviderFromContainer<BehaviorSubject<boolean>>(IS_TOGGLE, null);\n\n    if (toggleService && this.toggle !== null) {\n      toggleService.next(true);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-checkbox-container,clr-toggle-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-checkbox-wrapper,clr-toggle-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrCheckboxContainer extends ClrAbstractContainer {\n  private inline = false;\n  // private formGroup: AbstractControl;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrCheckbox } from './checkbox';\nimport { ClrCheckboxContainer } from './checkbox-container';\nimport { ClrCheckboxWrapper } from './checkbox-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrCommonFormsModule, ClrHostWrappingModule],\n  declarations: [ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  exports: [ClrCommonFormsModule, ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  entryComponents: [ClrCheckboxWrapper],\n})\nexport class ClrCheckboxModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nlet activeCounter = 0;\n\nexport const IF_ACTIVE_ID = new InjectionToken<number>('IF_ACTIVE_ID');\n\nexport function tokenFactory() {\n  return ++activeCounter;\n}\n\nexport const IF_ACTIVE_ID_PROVIDER = {\n  provide: IF_ACTIVE_ID,\n  useFactory: tokenFactory,\n};\n\n@Injectable()\n\n/*********\n * @class IfActiveService\n *\n * @description\n * An injectable service used by IfActive structural directives and the components that implement IfActive in their\n * templates. It holds the value of the current state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on current value changes.\n *\n */\nexport class IfActiveService {\n  /********\n   * @property _currentChange\n   *\n   * @description\n   * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n   * implemting the IfActive structural directive.\n   *\n   */\n  private _currentChange: Subject<number> = new Subject<number>();\n\n  /*********\n   * @property _current\n   *\n   * @description\n   * A property holding the current value for current/closed state of an IfActive structural directive.\n   */\n  private _current: number;\n\n  /*********\n   *\n   * @description\n   * A getter function that provides an observable for the _current Subject.\n   *\n   */\n  public get currentChange(): Observable<number> {\n    return this._currentChange.asObservable();\n  }\n\n  /*********\n   *\n   * @description\n   * A setter function that updates the current state of _current for this instance of IfActive structural directive.\n   * And, broadcasts the new value to all subscribers.\n   *\n   * @param value\n   */\n  public set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n      this._currentChange.next(value);\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A getter that returns the current value of this IfActive instance.\n   * @returns\n   */\n  public get current(): number {\n    return this._current;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IF_ACTIVE_ID, IfActiveService } from './if-active.service';\n\n@Directive({ selector: '[clrIfActive]' })\n\n/**********\n *\n * @class ClrIfActive\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfActiveService to maintain state between itself and\n * the component using it in the component template.\n *\n */\nexport class ClrIfActive implements OnDestroy {\n  private subscription: Subscription;\n  private wasActive: boolean = false;\n\n  constructor(\n    private ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.checkAndUpdateView(ifActiveService.current);\n\n    this.subscription = this.ifActiveService.currentChange.subscribe(newCurrentId => {\n      this.checkAndUpdateView(newCurrentId);\n    });\n  }\n\n  private checkAndUpdateView(currentId: number) {\n    const isNowActive = currentId === this.id;\n    // only emit if the new active state is changed since last time.\n    if (isNowActive !== this.wasActive) {\n      this.updateView(isNowActive);\n      this.activeChange.emit(isNowActive);\n      this.wasActive = isNowActive;\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A setter that updates IfActiveService.active with value.\n   *\n   * @param value\n   */\n  @Input('clrIfActive')\n  public set active(value: boolean) {\n    if (value) {\n      this.ifActiveService.current = this.id;\n    }\n  }\n\n  /**********\n   * @property activeChange\n   *\n   * @description\n   * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   *\n   */\n  @Output('clrIfActiveChange') activeChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current IfActiveService.active value.\n   */\n  public get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a any value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../popover/providers/popover-toggle.service';\n\n@Directive({ selector: '[clrIfOpen]' })\n\n/**********\n *\n * @class ClrIfOpen\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: ClrPopoverToggleService to maintain state between itself and the component\n * using it in the component template.\n *\n */\nexport class ClrIfOpen implements OnDestroy {\n  private subscription: Subscription;\n\n  /*********\n   *\n   * @description\n   * A setter that updates ClrPopoverToggleService.open with value.\n   *\n   * @param value\n   */\n  @Input('clrIfOpen')\n  public set open(value: boolean) {\n    this.toggleService.open = value;\n  }\n\n  /**********\n   * @property openChange\n   *\n   * @description\n   * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   */\n  @Output('clrIfOpenChange') openChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current ClrPopoverToggleService.open value.\n   *\n   */\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      this.updateView(change);\n      this.openChange.emit(change);\n    });\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a boolean value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { LoadingListener } from '../loading/loading-listener';\nimport { ClrLoadingState } from '../loading/loading';\n\n@Injectable()\nexport class IfExpandService implements LoadingListener {\n  public expandable: number = 0;\n\n  protected _loading: boolean = false;\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value: boolean) {\n    value = !!value;\n    if (value !== this._loading) {\n      this._loading = value;\n    }\n  }\n\n  protected _expanded: boolean = false;\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._expandChange.next(value);\n    }\n  }\n\n  public toggle() {\n    this.expanded = !this._expanded;\n  }\n\n  protected _expandChange: Subject<boolean> = new Subject<boolean>();\n  public get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  loadingStateChange(state: ClrLoadingState): void {\n    switch (state) {\n      case ClrLoadingState.LOADING:\n        this.loading = true;\n        break;\n      default:\n        this.loading = false;\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from './if-expanded.service';\n\n@Directive({ selector: '[clrIfExpanded]' })\nexport class ClrIfExpanded implements OnInit, OnDestroy {\n  private _expanded: boolean = false;\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input('clrIfExpanded')\n  set expanded(value: boolean) {\n    if (typeof value === 'boolean') {\n      this.expand.expanded = value;\n      this._expanded = value;\n    }\n  }\n\n  @Output('clrIfExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  constructor(\n    @Optional() private template: TemplateRef<any>,\n    private container: ViewContainerRef,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private expand: IfExpandService\n  ) {\n    expand.expandable++;\n    this._subscriptions.push(\n      expand.expandChange.subscribe(() => {\n        this.updateView();\n        this.expandedChange.emit(this.expand.expanded);\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  private updateView() {\n    if (this.expand.expanded && this.container.length !== 0) {\n      return;\n    }\n    if (this.template) {\n      if (this.expand.expanded) {\n        // Should we pass a context? I don't see anything useful to pass right now,\n        // but we can come back to it in the future as a solution for additional features.\n        this.container.createEmbeddedView(this.template);\n      } else {\n        // TODO: Move when we move the animation logic to Datagrid Row Expand\n        // We clear before the animation is over. Not ideal, but doing better would involve a much heavier\n        // process for very little gain. Once Angular animations are dynamic enough, we should be able to\n        // get the optimal behavior.\n        this.container.clear();\n      }\n    } else {\n      try {\n        // If we don't have a template ref, we fallback to a crude display: none for now.\n        if (this.expand.expanded) {\n          this.renderer.setStyle(this.el.nativeElement, 'display', null);\n        } else {\n          this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\n        }\n      } catch (e) {\n        // We catch the case where clrIfExpanded was put on a non-DOM element, and we just do nothing\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.updateView();\n  }\n\n  ngOnDestroy() {\n    this.expand.expandable--;\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIfActive } from './if-active.directive';\nimport { ClrIfOpen } from './if-open.directive';\nimport { ClrIfExpanded } from './if-expanded.directive';\n\nexport const CONDITIONAL_DIRECTIVES: Type<any>[] = [ClrIfActive, ClrIfOpen, ClrIfExpanded];\n\n@NgModule({ imports: [CommonModule], declarations: [CONDITIONAL_DIRECTIVES], exports: [CONDITIONAL_DIRECTIVES] })\nexport class ClrConditionalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\n@Injectable({ providedIn: 'root' })\nexport class FocusTrapTracker {\n  private _previousFocusTraps: FocusTrapDirective[] = [];\n  private _current: FocusTrapDirective;\n\n  get current(): FocusTrapDirective {\n    return this._current;\n  }\n\n  set current(value: FocusTrapDirective) {\n    this._previousFocusTraps.push(this._current);\n    this._current = value;\n  }\n\n  get nbFocusTrappers(): number {\n    return this._previousFocusTraps.length;\n  }\n\n  activatePreviousTrapper() {\n    this._current = this._previousFocusTraps.pop();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\n\nimport { FocusTrapTracker } from './focus-trap-tracker.service';\n\ninterface FocusTrapConfig {\n  strict: boolean;\n}\n\n@Directive({ selector: '[clrFocusTrap]' })\nexport class FocusTrapDirective implements AfterViewInit, OnDestroy {\n  private previousActiveElement: any;\n  private previousTrappedActiveElement: any;\n  private localFocusEscaped = false;\n  private document: Document;\n  private parentElement: Element;\n\n  private topReboundEl: any;\n  private bottomReboundEl: any;\n\n  constructor(\n    private el: ElementRef,\n    private injector: Injector,\n    private focusTrapsTracker: FocusTrapTracker,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = this.injector.get(DOCUMENT);\n    this.focusTrapsTracker.current = this;\n\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n  }\n\n  private _config: FocusTrapConfig = {\n    strict: true,\n  };\n  @Input('clrFocusTrap')\n  set config(config: FocusTrapConfig) {\n    this._config = Object.assign(this._config, config);\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusIn(event: any) {\n    if (this.focusTrapsTracker.current !== this || !isPlatformBrowser(this.platformId) || this.localFocusEscaped) {\n      return;\n    }\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    if (this._config.strict && event.target && !nativeElement.contains(event.target)) {\n      // When the focus trap is global, always steal focus back if it goes outside\n      nativeElement.focus();\n    } else if (event.target === this.bottomReboundEl && nativeElement.contains(this.previousTrappedActiveElement)) {\n      // When the focus trap is local, if the user navigates via keyboard to the end element from within the trap, move to top\n      nativeElement.focus();\n    } else if (event.target === this.topReboundEl) {\n      // When the focus trap is local, if the user navigates via keyboard back to start element from within the trap, move to bottom\n      // @TODO implement an acceptable solution to SHIFT+TAB navigation\n    } else if (event.target !== nativeElement && !nativeElement.contains(event.target)) {\n      // If a user has escaped the trap using the mouse\n      // relax, don't do it, when you want to go to it, living those dreams, scheme those schemes, hit me with those laser beams\n      this.localFocusEscaped = true;\n    }\n    // Track the last focused item, so we can check\n    this.previousTrappedActiveElement = event.target;\n  }\n\n  private createFocusableOffScreenEl(): any {\n    // Not using Renderer2's createElement method because that leads to DOM leakage.\n    // https://github.com/angular/angular/issues/26954\n    const offScreenSpan = this.document.createElement('span');\n    this.renderer.setAttribute(offScreenSpan, 'tabindex', '0');\n    this.renderer.addClass(offScreenSpan, 'offscreen-focus-rebounder');\n\n    return offScreenSpan;\n  }\n\n  private addReboundEls() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.topReboundEl = this.createFocusableOffScreenEl();\n      this.bottomReboundEl = this.createFocusableOffScreenEl();\n      const hostElement = this.el.nativeElement;\n      // Add reboundBeforeTrapEl right outside of host element\n      this.renderer.insertBefore(hostElement.parentElement, this.topReboundEl, hostElement);\n      // Add reboundAfterTrapEl right after host element\n      if (hostElement.nextSibling) {\n        this.renderer.insertBefore(hostElement.parentNode, this.bottomReboundEl, hostElement.nextSibling);\n      } else {\n        this.renderer.appendChild(hostElement.parentNode, this.bottomReboundEl);\n      }\n    }\n  }\n\n  private removeReboundEls() {\n    if (isPlatformBrowser(this.platformId) && this.topReboundEl && this.bottomReboundEl) {\n      this.parentElement.removeChild(this.topReboundEl);\n      this.parentElement.removeChild(this.bottomReboundEl);\n      // These are here to to make sure that\n      // we completely delete all traces of the removed DOM objects.\n      delete this.topReboundEl;\n      delete this.bottomReboundEl;\n    }\n  }\n\n  public setPreviousFocus(): void {\n    if (this.previousActiveElement && this.previousActiveElement.focus) {\n      this.previousActiveElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.previousActiveElement = <HTMLElement>this.document.activeElement;\n      this.parentElement = this.el.nativeElement.parentElement;\n    }\n\n    this.addReboundEls();\n  }\n\n  ngOnDestroy() {\n    this.removeReboundEls();\n    this.setPreviousFocus();\n    this.focusTrapsTracker.activatePreviousTrapper();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\nexport const FOCUS_TRAP_DIRECTIVES: Type<any>[] = [FocusTrapDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_TRAP_DIRECTIVES],\n  exports: [FOCUS_TRAP_DIRECTIVES],\n})\nexport class ClrFocusTrapModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * This is the en-001 short locale date format. Setting as default.\n */\nexport const DEFAULT_LOCALE_FORMAT: string = 'dd/MM/y';\n\n// https://en.wikipedia.org/wiki/Date_format_by_country\nexport const LITTLE_ENDIAN_REGEX: RegExp = /d+.+m+.+y+/i;\nexport const MIDDLE_ENDIAN_REGEX: RegExp = /m+.+d+.+y+/i;\n// No need for BIG_ENDIAN_REGEX because anything that doesn't satisfy the above 2\n// is automatically BIG_ENDIAN\n\nexport const DELIMITER_REGEX: RegExp = /d+|m+|y+/i;\n\nexport const USER_INPUT_REGEX: RegExp = /\\d+/g;\n\nexport const MOBILE_USERAGENT_REGEX: RegExp = /Mobi/i;\n\nexport const RTL_REGEX: RegExp = /\\u200f/g;\n\nexport const YEAR: string = 'YYYY';\nexport const MONTH: string = 'MM';\nexport const DATE: string = 'DD';\n\nexport type FormatType = 'LITTLE_ENDIAN' | 'MIDDLE_ENDIAN' | 'BIG_ENDIAN';\n\nexport type InputDateDisplayFormat = {\n  readonly name: FormatType;\n  readonly format: [string, string, string];\n};\n\nexport const LITTLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'LITTLE_ENDIAN',\n  format: [DATE, MONTH, YEAR],\n};\n\nexport const MIDDLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'MIDDLE_ENDIAN',\n  format: [MONTH, DATE, YEAR],\n};\n\nexport const BIG_ENDIAN: InputDateDisplayFormat = {\n  name: 'BIG_ENDIAN',\n  format: [YEAR, MONTH, DATE],\n};\n\nexport const NO_OF_DAYS_IN_A_WEEK: number = 7;\nexport const NO_OF_ROWS_IN_CALENDAR_VIEW: number = 6;\nexport const TOTAL_DAYS_IN_DAYS_VIEW: number = NO_OF_DAYS_IN_A_WEEK * NO_OF_ROWS_IN_CALENDAR_VIEW;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { WeekDay } from '@angular/common';\n\n/**\n * Returns the number of days in a month.\n */\nexport function getNumberOfDaysInTheMonth(year: number, month: number): number {\n  // If we go to the next month, but use a day of 0, it returns the last day from the previous month\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * Returns the day for the corresponding date where 0 represents Sunday.\n */\nexport function getDay(year: number, month: number, date: number): WeekDay {\n  return new Date(year, month, date).getDay();\n}\n\n/**\n * Takes in a year and if it is a 2 digit year, returns the corresponding 4 digit year.\n * Window of 80 years before and 20 years after the present year.\n * Credit: https://github.com/globalizejs/globalize/blob/e1b31cd6a4f1cff75b185b68b7a32220aac5196f/src/date/parse.js\n */\nexport function parseToFourDigitYear(year: number): number {\n  if (year > 9999 || (year > 100 && year < 999) || year < 10) {\n    return -1;\n  }\n  if (year > 999) {\n    return year;\n  }\n  const currYear: number = new Date().getFullYear();\n  const century: number = Math.floor(currYear / 100) * 100;\n  let result: number = year + century;\n  if (result > currYear + 20) {\n    result = result - 100;\n  }\n  return result;\n}\n\nexport function datesAreEqual(date1: Date, date2: Date) {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (\n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate()\n    );\n  } else {\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DayModel } from './day.model';\n\nexport class DayViewModel {\n  constructor(\n    public dayModel: DayModel,\n    public isTodaysDate: boolean = false,\n    public isExcluded: boolean = false,\n    public isDisabled: boolean = false,\n    public isSelected: boolean = false,\n    public isFocusable: boolean = false\n  ) {}\n\n  /**\n   * Gets the tab index based on the isFocusable flag.\n   */\n  get tabIndex(): number {\n    return this.isFocusable ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class DayModel {\n  constructor(public readonly year: number, public readonly month: number, public readonly date: number) {}\n\n  /**\n   * Checks if the passed CalendarDate is equal to itself.\n   */\n  isEqual(day: DayModel) {\n    if (day) {\n      return this.year === day.year && this.month === day.month && this.date === day.date;\n    }\n    return false;\n  }\n\n  toDate(): Date {\n    return new Date(this.year, this.month, this.date);\n  }\n\n  /**\n   * Returns a new DayModel which is incremented based on the value passed.\n   */\n  incrementBy(value: number): DayModel {\n    // Creating new Javascript Date object to increment because\n    // it will automatically take care of switching to next or previous\n    // months & years without we having to worry about it.\n    const date: Date = new Date(this.year, this.month, this.date + value);\n    return new DayModel(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  /**\n   * Clones the current day model.\n   */\n  clone(): DayModel {\n    return new DayModel(this.year, this.month, this.date);\n  }\n\n  toComparisonString(): string {\n    return `${this.year}${this.pad(this.month)}${this.pad(this.date)}`;\n  }\n\n  private pad(num: number): string {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n\n  public toDateString(): string {\n    return this.toDate().toLocaleDateString();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NO_OF_DAYS_IN_A_WEEK, NO_OF_ROWS_IN_CALENDAR_VIEW, TOTAL_DAYS_IN_DAYS_VIEW } from '../utils/constants';\nimport { getDay } from '../utils/date-utils';\n\nimport { CalendarModel } from './calendar.model';\nimport { DayViewModel } from './day-view.model';\nimport { DayModel } from './day.model';\nimport { DateRange } from '../interfaces/date-range.interface';\n\nexport class CalendarViewModel {\n  constructor(\n    public calendar: CalendarModel,\n    private selectedDay: DayModel,\n    private focusableDay: DayModel,\n    private today: DayModel,\n    public firstDayOfWeek: number,\n    private excludedDates: DateRange\n  ) {\n    this.initializeCalendarView();\n  }\n\n  private currMonthDayViews: DayViewModel[] = [];\n\n  private _calendarView: DayViewModel[][];\n\n  /**\n   * DayViewModel matrix. Size 6x7\n   */\n  get calendarView(): DayViewModel[][] {\n    return this._calendarView;\n  }\n\n  /**\n   * Generates a 6x7 matrix of DayViewModel based on the Calendar.\n   * The 6x7 matrix is structured according to the first day of the week.\n   * 6 rows to accommodate months which might have dates spanning over 6 weeks.\n   * 7 columns because there are 7 days in a week :P :D\n   */\n  private initializeCalendarView(): void {\n    // Generate prev and next month calendar models.\n    const prevMonthCalendar: CalendarModel = this.calendar.previousMonth();\n    const nextMonthCalendar: CalendarModel = this.calendar.nextMonth();\n\n    // Get no of days from prev and next months.\n    const daysFromPrevMonthInCalView: number = this.numDaysFromPrevMonthInCalView(\n      this.calendar.year,\n      this.calendar.month\n    );\n    const daysFromNextMonthInCalView: number =\n      TOTAL_DAYS_IN_DAYS_VIEW - (this.calendar.days.length + daysFromPrevMonthInCalView);\n\n    // Generate prev, curr and next day view models\n    let prevMonthDayViews: DayViewModel[] = [];\n    let nextMonthDayViews: DayViewModel[] = [];\n\n    if (daysFromPrevMonthInCalView > 0) {\n      prevMonthDayViews = this.generateDayViewModels(\n        prevMonthCalendar.days.slice(-1 * daysFromPrevMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    this.currMonthDayViews = this.generateDayViewModels(this.calendar.days, false, true);\n\n    if (daysFromNextMonthInCalView > 0) {\n      nextMonthDayViews = this.generateDayViewModels(\n        nextMonthCalendar.days.slice(0, daysFromNextMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    // Generate calendar view and initialize flags\n    this._calendarView = this.generateCalendarView(prevMonthDayViews, this.currMonthDayViews, nextMonthDayViews);\n    this.initializeSelectedDay();\n    this.initializeFocusableDay();\n  }\n\n  private isDateExcluded(date: DayModel) {\n    const { minDate, maxDate }: DateRange = this.excludedDates;\n    const from = minDate.toComparisonString();\n    const to = maxDate.toComparisonString();\n    const today = date.toComparisonString();\n\n    return !(today >= from && today <= to);\n  }\n\n  /**\n   * Generates a DayViewModel array based on the DayModel passed\n   */\n  private generateDayViewModels(days: DayModel[], isExcluded: boolean, isCurrentCalendar: boolean): DayViewModel[] {\n    const dayViews: DayViewModel[] = days.map(day => {\n      return new DayViewModel(day, false, isExcluded, this.isDateExcluded(day), false, false);\n    });\n    if (isCurrentCalendar && this.calendar.isDayInCalendar(this.today)) {\n      dayViews[this.today.date - 1].isTodaysDate = true;\n    }\n    return dayViews;\n  }\n\n  /**\n   * Gets the first day of the current month to figure out how many dates of previous month\n   * are needed to complete the Calendar View based on the first day of the week.\n   * eg: Assuming locale en-US, the first day of the week is Sunday,\n   * if first day of the current month lands on Wednesday, then\n   * (this.getDay function would return 3 since\n   * first day of the week is 0), we need the 3 days from the previous month.\n   */\n  private numDaysFromPrevMonthInCalView(currentYear: number, currentMonth: number): number {\n    const firstDayOfCurrMonth: number = getDay(currentYear, currentMonth, 1);\n\n    if (firstDayOfCurrMonth >= this.firstDayOfWeek) {\n      return firstDayOfCurrMonth - this.firstDayOfWeek;\n    } else {\n      return NO_OF_DAYS_IN_A_WEEK + firstDayOfCurrMonth - this.firstDayOfWeek;\n    }\n  }\n\n  /**\n   * Checks if the Day passed is in the CalendarView.\n   */\n  private isDayInCalendarView(day: DayModel): boolean {\n    if (!this.calendar.isDayInCalendar(day)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Using the DayViewModels from the previous, current and next month, this function\n   * generates the CalendarView.\n   */\n  private generateCalendarView(prev: DayViewModel[], curr: DayViewModel[], next: DayViewModel[]): DayViewModel[][] {\n    const combinationArr: DayViewModel[] = [...prev, ...curr, ...next];\n\n    const calendarView: DayViewModel[][] = [];\n    for (let i = 0; i < NO_OF_ROWS_IN_CALENDAR_VIEW; i++) {\n      calendarView[i] = combinationArr.slice(i * NO_OF_DAYS_IN_A_WEEK, (i + 1) * NO_OF_DAYS_IN_A_WEEK);\n    }\n    return calendarView;\n  }\n\n  /**\n   * Initialize the selected day if the day is in the calendar.\n   */\n  private initializeSelectedDay(): void {\n    if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.currMonthDayViews[this.selectedDay.date - 1].isSelected = true;\n    }\n  }\n\n  /**\n   * Initializes the focusable day if the day is in the calendar. If focusable day is not set, then\n   * we check for the selected day. If selected day is not set then check if today is in the current\n   * calendar. If not then just set the 15th of the current calendar month.\n   */\n  private initializeFocusableDay(): void {\n    if (this.focusableDay && this.isDayInCalendarView(this.focusableDay)) {\n      this.setFocusableFlag(this.focusableDay, true);\n    } else if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.setFocusableFlag(this.selectedDay, true);\n      this.focusableDay = this.selectedDay.clone();\n    } else if (this.isDayInCalendarView(this.today)) {\n      this.setFocusableFlag(this.today, true);\n      this.focusableDay = this.today.clone();\n    } else {\n      this.focusableDay = new DayModel(this.calendar.year, this.calendar.month, 15);\n      this.setFocusableFlag(this.focusableDay, true);\n    }\n  }\n\n  private setFocusableFlag(day: DayModel, flag: boolean): void {\n    if (day) {\n      this.currMonthDayViews[day.date - 1].isFocusable = flag;\n    }\n  }\n\n  /**\n   * Updates the focusable day in the calendar.\n   */\n  updateFocusableDay(day: DayModel): void {\n    this.setFocusableFlag(this.focusableDay, false);\n    this.setFocusableFlag(day, true);\n    this.focusableDay = day;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { getNumberOfDaysInTheMonth } from '../utils/date-utils';\n\nimport { DayModel } from './day.model';\n\nexport class CalendarModel {\n  constructor(public readonly year: number, public readonly month: number) {\n    this.initializeDaysInCalendar();\n  }\n\n  days: DayModel[];\n\n  /**\n   * Populates the days array with the DayModels in the current Calendar.\n   */\n  private initializeDaysInCalendar(): void {\n    const noOfDaysInCalendar: number = getNumberOfDaysInTheMonth(this.year, this.month);\n    this.days = Array(noOfDaysInCalendar)\n      .fill(null)\n      .map((date, index) => {\n        return new DayModel(this.year, this.month, index + 1);\n      });\n  }\n\n  /**\n   * Checks if the calendar passed is equal to the current calendar.\n   */\n  isEqual(calendar: CalendarModel) {\n    if (calendar) {\n      return this.year === calendar.year && this.month === calendar.month;\n    }\n    return false;\n  }\n\n  /**\n   * Checks if a DayModel is in the Calendar\n   */\n  isDayInCalendar(day: DayModel): boolean {\n    if (day) {\n      return this.year === day.year && this.month === day.month;\n    }\n    return false;\n  }\n\n  /**\n   * Returns CalendarModel of the previous month.\n   */\n  previousMonth(): CalendarModel {\n    if (this.month === 0) {\n      return new CalendarModel(this.year - 1, 11);\n    } else {\n      return new CalendarModel(this.year, this.month - 1);\n    }\n  }\n\n  /**\n   * Returns CalendarModel of the next month.\n   */\n  nextMonth(): CalendarModel {\n    if (this.month === 11) {\n      return new CalendarModel(this.year + 1, 0);\n    } else {\n      return new CalendarModel(this.year, this.month + 1);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { CalendarModel } from '../model/calendar.model';\nimport { DayModel } from '../model/day.model';\n\n/**\n * This service is responsible for:\n * 1. Initializing the displayed calendar.\n * 2. Moving the calendar to the next, previous or current months\n * 3. Managing the focused and selected day models.\n */\n@Injectable()\nexport class DateNavigationService {\n  private _displayedCalendar: CalendarModel;\n\n  get displayedCalendar(): CalendarModel {\n    return this._displayedCalendar;\n  }\n\n  // not a setter because i want this to remain private\n  private setDisplayedCalendar(value: CalendarModel) {\n    if (!this._displayedCalendar.isEqual(value)) {\n      this._displayedCalendar = value;\n      this._displayedCalendarChange.next();\n    }\n  }\n\n  /**\n   * Variable to store today's date.\n   */\n  private _todaysFullDate: Date = new Date();\n  private _today: DayModel;\n\n  private initializeTodaysDate(): void {\n    this._todaysFullDate = new Date();\n    this._today = new DayModel(\n      this._todaysFullDate.getFullYear(),\n      this._todaysFullDate.getMonth(),\n      this._todaysFullDate.getDate()\n    );\n  }\n\n  get today(): DayModel {\n    return this._today;\n  }\n\n  public selectedDay: DayModel;\n\n  private _selectedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  get selectedDayChange(): Observable<DayModel> {\n    return this._selectedDayChange.asObservable();\n  }\n\n  /**\n   * Notifies that the selected day has changed so that the date can be emitted to the user.\n   * Note: Only to be called from day.ts\n   */\n  notifySelectedDayChanged(dayModel: DayModel) {\n    this.selectedDay = dayModel;\n    this._selectedDayChange.next(dayModel);\n  }\n\n  public focusedDay: DayModel;\n\n  /**\n   * Initializes the calendar based on the selected day.\n   */\n  initializeCalendar(): void {\n    this.focusedDay = null; // Can be removed later on the store focus\n    this.initializeTodaysDate();\n    if (this.selectedDay) {\n      this._displayedCalendar = new CalendarModel(this.selectedDay.year, this.selectedDay.month);\n    } else {\n      this._displayedCalendar = new CalendarModel(this.today.year, this.today.month);\n    }\n  }\n\n  changeMonth(month: number): void {\n    this.setDisplayedCalendar(new CalendarModel(this._displayedCalendar.year, month));\n  }\n\n  changeYear(year: number): void {\n    this.setDisplayedCalendar(new CalendarModel(year, this._displayedCalendar.month));\n  }\n\n  /**\n   * Moves the displayed calendar to the next month.\n   */\n  moveToNextMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.nextMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the previous month.\n   */\n  moveToPreviousMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.previousMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the current month and year.\n   */\n  moveToCurrentMonth(): void {\n    if (!this.displayedCalendar.isDayInCalendar(this.today)) {\n      this.setDisplayedCalendar(new CalendarModel(this.today.year, this.today.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  incrementFocusDay(value: number): void {\n    this.focusedDay = this.focusedDay.incrementBy(value);\n    if (this._displayedCalendar.isDayInCalendar(this.focusedDay)) {\n      this._focusedDayChange.next(this.focusedDay);\n    } else {\n      this.setDisplayedCalendar(new CalendarModel(this.focusedDay.year, this.focusedDay.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  private _displayedCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the displayed calendar has changed.\n   */\n  get displayedCalendarChange(): Observable<void> {\n    return this._displayedCalendarChange.asObservable();\n  }\n\n  private _focusOnCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the focus should be applied on the calendar.\n   */\n  get focusOnCalendarChange(): Observable<void> {\n    return this._focusOnCalendarChange.asObservable();\n  }\n\n  private _focusedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  /**\n   * This observable lets the subscriber know that the focused day in the displayed calendar has changed.\n   */\n  get focusedDayChange(): Observable<DayModel> {\n    return this._focusedDayChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { first, filter } from 'rxjs/operators';\n\n/**\n * This service focuses the day that is focusable in the calendar.\n */\n@Injectable()\nexport class DatepickerFocusService {\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focusCell(elRef: ElementRef): void {\n    this._ngZone.runOutsideAngular(() => {\n      this.ngZoneIsStableInBrowser().subscribe(() => {\n        const focusEl = elRef.nativeElement.querySelector('[tabindex=\"0\"]');\n        if (focusEl) {\n          focusEl.focus();\n        }\n      });\n    });\n  }\n\n  focusInput(element: HTMLInputElement): void {\n    this._ngZone.runOutsideAngular(() => this.ngZoneIsStableInBrowser().subscribe(() => element.focus()));\n  }\n\n  elementIsFocused(element: HTMLInputElement) {\n    return isPlatformBrowser(this.platformId) && document.activeElement === element;\n  }\n\n  private ngZoneIsStableInBrowser() {\n    // Credit: Material: https://github.com/angular/material2/blob/master/src/lib/datepicker/calendar.ts\n    return this._ngZone.onStable.asObservable().pipe(first(), filter(() => isPlatformBrowser(this.platformId)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  FormatWidth,\n  FormStyle,\n  getLocaleDateFormat,\n  getLocaleDayNames,\n  getLocaleFirstDayOfWeek,\n  getLocaleMonthNames,\n  TranslationWidth,\n} from '@angular/common';\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { ClrDayOfWeek } from '../interfaces/day-of-week.interface';\n\n/**\n * This service extracts the Angular CLDR data needed by the datepicker.\n */\n@Injectable()\nexport class LocaleHelperService {\n  constructor(@Inject(LOCALE_ID) public locale: string) {\n    this.initializeLocaleData();\n  }\n\n  private _firstDayOfWeek: number = 0;\n  private _localeDays: ReadonlyArray<ClrDayOfWeek>;\n  private _localeMonthsAbbreviated: ReadonlyArray<string>;\n  private _localeMonthsWide: ReadonlyArray<string>;\n  private _localeDateFormat: string;\n\n  get firstDayOfWeek(): number {\n    return this._firstDayOfWeek;\n  }\n\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeDays;\n  }\n\n  // leave for backward compatibility\n  get localeDaysNarrow(): ReadonlyArray<string> {\n    return this._localeDays.map(day => day.narrow);\n  }\n\n  get localeMonthsAbbreviated(): ReadonlyArray<string> {\n    return this._localeMonthsAbbreviated;\n  }\n\n  get localeMonthsWide(): ReadonlyArray<string> {\n    return this._localeMonthsWide;\n  }\n\n  get localeDateFormat(): string {\n    return this._localeDateFormat;\n  }\n\n  /**\n   * Initializes the locale data.\n   */\n  private initializeLocaleData(): void {\n    // Order in which these functions is called is very important.\n    this.initializeFirstDayOfWeek();\n    this.initializeLocaleDateFormat();\n    this.initializeLocaleMonthsAbbreviated();\n    this.initializeLocaleMonthsWide();\n    this.initializeLocaleDays();\n  }\n\n  /**\n   * Initialize day names based on the locale.\n   * eg: [{day: Sunday, narrow: S}, {day: Monday, narrow: M}...] for en-US.\n   */\n  private initializeLocaleDays(): void {\n    // Get locale day names starting with Sunday\n    const tempArr = [];\n    const tempWideArr: string[] = getLocaleDayNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n    const tempNarrowArr: string[] = getLocaleDayNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Narrow\n    ).slice();\n    // Get first day of the week based on the locale\n    const firstDayOfWeek: number = this.firstDayOfWeek;\n    for (let i = 0; i < 7; i++) {\n      tempArr.push({ day: tempWideArr[i], narrow: tempNarrowArr[i] });\n    }\n    // Rearrange the tempArr to start with the first day of the week based on the locale.\n    if (firstDayOfWeek > 0) {\n      const prevDays: string[] = tempArr.splice(0, firstDayOfWeek);\n      tempArr.push(...prevDays);\n    }\n    this._localeDays = tempArr;\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Abbreviated format.\n   * e.g. `[Jan, Feb, ...]` for en-US\n   */\n  private initializeLocaleMonthsAbbreviated(): void {\n    this._localeMonthsAbbreviated = getLocaleMonthNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Abbreviated\n    ).slice();\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Wide format.\n   * e.g. `[January, February, ...]` for en-US\n   */\n  private initializeLocaleMonthsWide(): void {\n    this._localeMonthsWide = getLocaleMonthNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n  }\n\n  /**\n   * Initializes the first day of the week based on the locale.\n   */\n  private initializeFirstDayOfWeek(): void {\n    this._firstDayOfWeek = getLocaleFirstDayOfWeek(this.locale);\n  }\n\n  private initializeLocaleDateFormat(): void {\n    this._localeDateFormat = getLocaleDateFormat(this.locale, FormatWidth.Short);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  BIG_ENDIAN,\n  DEFAULT_LOCALE_FORMAT,\n  DELIMITER_REGEX,\n  InputDateDisplayFormat,\n  LITTLE_ENDIAN,\n  LITTLE_ENDIAN_REGEX,\n  MIDDLE_ENDIAN,\n  MIDDLE_ENDIAN_REGEX,\n  RTL_REGEX,\n  USER_INPUT_REGEX,\n} from '../utils/constants';\nimport { getNumberOfDaysInTheMonth, parseToFourDigitYear } from '../utils/date-utils';\n\nimport { LocaleHelperService } from './locale-helper.service';\nimport { DateRange } from '../interfaces/date-range.interface';\nimport { DayModel } from '../model/day.model';\n\n@Injectable()\nexport class DateIOService {\n  public disabledDates: DateRange = {\n    // This is the default range. It approximates the beginning of time to the end of time.\n    // Unless a minDate or maxDate is set with the native HTML5 api the range is all dates\n    // TODO: turn this into an Array of min/max ranges that allow configuration of multiple ranges.\n    minDate: new DayModel(0, 0, 1),\n    maxDate: new DayModel(9999, 11, 31),\n  };\n  public cldrLocaleDateFormat: string = DEFAULT_LOCALE_FORMAT;\n  private localeDisplayFormat: InputDateDisplayFormat = LITTLE_ENDIAN;\n  private delimiters: [string, string] = ['/', '/'];\n\n  constructor(private _localeHelperService: LocaleHelperService) {\n    this.cldrLocaleDateFormat = this._localeHelperService.localeDateFormat;\n    this.initializeLocaleDisplayFormat();\n  }\n\n  public setMinDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset back to the beginning of time\n      this.disabledDates.minDate = new DayModel(0, 0, 1);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.minDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  public setMaxDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset forward to the end of time\n      this.disabledDates.maxDate = new DayModel(9999, 11, 31);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.maxDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  private initializeLocaleDisplayFormat(): void {\n    const format: string = this.cldrLocaleDateFormat.toLocaleLowerCase();\n    if (LITTLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = LITTLE_ENDIAN;\n    } else if (MIDDLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = MIDDLE_ENDIAN;\n    } else {\n      // everything else is set to BIG-ENDIAN FORMAT\n      this.localeDisplayFormat = BIG_ENDIAN;\n    }\n    this.extractDelimiters();\n  }\n\n  private extractDelimiters(): void {\n    if (this.cldrLocaleDateFormat) {\n      // Sanitize Date Format. Remove RTL characters.\n      // FIXME: When we support RTL, remove this and handle it correctly.\n      const localeFormat: string = this.cldrLocaleDateFormat.replace(RTL_REGEX, '');\n      const delimiters: string[] = localeFormat.split(DELIMITER_REGEX);\n\n      // NOTE: The split from the CLDR date format should always result\n      // in an arary with 4 elements. The 1st and the 2nd values are the delimiters\n      // we will use in order.\n      // Eg: \"dd/MM/y\".split(/d+|m+|y+/i) results in [\"\", \"/\", \"/\", \"\"]\n      if (delimiters && delimiters.length === 4) {\n        this.delimiters = [delimiters[1], delimiters[2]];\n      } else {\n        console.error('Unexpected date format received. Delimiters extracted: ', delimiters);\n      }\n    }\n  }\n\n  toLocaleDisplayFormatString(date: Date): string {\n    if (date) {\n      if (isNaN(date.getTime())) {\n        return '';\n      }\n      const dateNo: number = date.getDate();\n      const monthNo: number = date.getMonth() + 1;\n      const dateStr: string = dateNo > 9 ? dateNo.toString() : '0' + dateNo;\n      const monthStr: string = monthNo > 9 ? monthNo.toString() : '0' + monthNo;\n      if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n        return dateStr + this.delimiters[0] + monthStr + this.delimiters[1] + date.getFullYear();\n      } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n        return monthStr + this.delimiters[0] + dateStr + this.delimiters[1] + date.getFullYear();\n      } else {\n        return date.getFullYear() + this.delimiters[0] + monthStr + this.delimiters[1] + dateStr;\n      }\n    }\n    return '';\n  }\n\n  get placeholderText(): string {\n    const format: [string, string, string] = this.localeDisplayFormat.format;\n    return format[0] + this.delimiters[0] + format[1] + this.delimiters[1] + format[2];\n  }\n\n  /**\n   * Checks if the month entered by the user is valid or not.\n   * Note: Month is 0 based.\n   */\n  private isValidMonth(month: number): boolean {\n    return month > -1 && month < 12;\n  }\n\n  /**\n   * Checks if the date is valid depending on the year and month provided.\n   */\n  private isValidDate(year: number, month: number, date: number): boolean {\n    return date > 0 && date <= getNumberOfDaysInTheMonth(year, month);\n  }\n\n  /**\n   * Validates the parameters provided and returns the date.\n   * If the parameters are not\n   * valid then return null.\n   * NOTE: (Month here is 1 based since the user has provided that as an input)\n   */\n  private validateAndGetDate(year: string, month: string, date: string): Date {\n    // I don't know whats wrong with the TS compiler. It throws an error if I write\n    // the below if statement. The error is:\n    // Operator '!==' cannot be applied to types '2' and '4'\n    // More info here: https://github.com/Microsoft/TypeScript/issues/12794#issuecomment-270342936\n    /*\n        if (year.length !== 2 || year.length !== 4) {\n            return null;\n        }\n        */\n\n    // Instead I have to write the logic like this x-(\n    const y: number = +year;\n    const m: number = +month - 1; // month is 0 based\n    const d: number = +date;\n    if (!this.isValidMonth(m) || !this.isValidDate(y, m, d)) {\n      return null;\n    }\n    const result: number = parseToFourDigitYear(y);\n    return result !== -1 ? new Date(result, m, d) : null;\n  }\n\n  getDateValueFromDateString(date: string): Date {\n    if (!date) {\n      return null;\n    }\n    const dateParts: string[] = date.match(USER_INPUT_REGEX);\n    if (!dateParts || dateParts.length !== 3) {\n      return null;\n    }\n    const [firstPart, secondPart, thirdPart] = dateParts;\n    if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n      // secondPart is month && firstPart is date\n      return this.validateAndGetDate(thirdPart, secondPart, firstPart);\n    } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n      // firstPart is month && secondPart is date\n      return this.validateAndGetDate(thirdPart, firstPart, secondPart);\n    } else {\n      // secondPart is month && thirdPart is date\n      return this.validateAndGetDate(firstPart, secondPart, thirdPart);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { CalendarViewModel } from './model/calendar-view.model';\nimport { CalendarModel } from './model/calendar.model';\nimport { DayModel } from './model/day.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { NO_OF_DAYS_IN_A_WEEK } from './utils/constants';\nimport { ClrDayOfWeek } from './interfaces/day-of-week.interface';\nimport { DateIOService } from './providers/date-io.service';\n\n@Component({ selector: 'clr-calendar', templateUrl: './calendar.html' })\nexport class ClrCalendar implements OnDestroy {\n  private _subs: Subscription[] = [];\n  constructor(\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _dateIOService: DateIOService,\n    private _elRef: ElementRef\n  ) {\n    this.generateCalendarView();\n    this.initializeSubscriptions();\n  }\n\n  /**\n   * Calendar View Model to generate the Calendar.\n   */\n  calendarViewModel: CalendarViewModel;\n\n  /**\n   * Gets the locale days according to the TranslationWidth.Narrow format.\n   */\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeHelperService.localeDays;\n  }\n\n  get calendar(): CalendarModel {\n    return this._dateNavigationService.displayedCalendar;\n  }\n\n  get selectedDay(): DayModel {\n    return this._dateNavigationService.selectedDay;\n  }\n\n  get focusedDay(): DayModel {\n    return this._dateNavigationService.focusedDay;\n  }\n\n  get today(): DayModel {\n    return this._dateNavigationService.today;\n  }\n\n  /**\n   * Initialize subscriptions to:\n   * 1. update the calendar view model.\n   * 2. update the focusable day in the calendar view model.\n   * 3. focus on the focusable day in the calendar.\n   */\n  private initializeSubscriptions(): void {\n    this._subs.push(\n      this._dateNavigationService.displayedCalendarChange.subscribe(() => {\n        this.generateCalendarView();\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusedDayChange.subscribe((focusedDay: DayModel) => {\n        this.calendarViewModel.updateFocusableDay(focusedDay);\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusOnCalendarChange.subscribe(() => {\n        this._datepickerFocusService.focusCell(this._elRef);\n      })\n    );\n  }\n\n  /**\n   * Generates the Calendar View based on the calendar retrieved from the DateNavigationService.\n   */\n  private generateCalendarView(): void {\n    this.calendarViewModel = new CalendarViewModel(\n      this.calendar,\n      this.selectedDay,\n      this.focusedDay,\n      this.today,\n      this._localeHelperService.firstDayOfWeek,\n      this._dateIOService.disabledDates\n    );\n  }\n\n  /**\n   * Delegates Keyboard arrow navigation to the DateNavigationService.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (event && this.focusedDay) {\n      switch (event.keyCode) {\n        case UP_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1 * NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case DOWN_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case LEFT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1);\n          break;\n        case RIGHT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(1);\n          break;\n        default:\n          break; // No default case. TSLint x-(\n      }\n    }\n  }\n\n  /**\n   * Focuses on the focusable day when the Calendar View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy(): void {\n    this._subs.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const UP_ARROW: number = 38;\nexport const DOWN_ARROW: number = 40;\nexport const RIGHT_ARROW: number = 39;\nexport const LEFT_ARROW: number = 37;\nexport const ENTER: number = 13;\nexport const SPACE: number = 32;\nexport const TAB: number = 9;\nexport const ESC: number = 27;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class FocusService {\n  private _focused: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get focusChange(): Observable<boolean> {\n    return this._focused.asObservable();\n  }\n  set focused(state: boolean) {\n    this._focused.next(state);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class DateFormControlService {\n  private _touchedChange: Subject<void> = new Subject<void>();\n  public disabled;\n\n  get touchedChange(): Observable<void> {\n    return this._touchedChange.asObservable();\n  }\n\n  private _dirtyChange: Subject<void> = new Subject<void>();\n\n  get dirtyChange(): Observable<void> {\n    return this._dirtyChange.asObservable();\n  }\n\n  markAsTouched(): void {\n    this._touchedChange.next();\n  }\n\n  markAsDirty(): void {\n    this._dirtyChange.next();\n  }\n\n  // friendly wrapper\n  setDisabled(state: boolean) {\n    this.disabled = state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nimport { DATEPICKER_ENABLE_BREAKPOINT } from '../../../utils/breakpoints/breakpoints';\nimport { MOBILE_USERAGENT_REGEX } from '../utils/constants';\n\n@Injectable()\nexport class DatepickerEnabledService {\n  constructor(@Inject(DOCUMENT) private _document: any) {\n    if (this._document) {\n      this._isUserAgentMobile = MOBILE_USERAGENT_REGEX.test(_document.defaultView.navigator.userAgent);\n      this._innerWidth = _document.defaultView.innerWidth;\n    }\n  }\n\n  private _isUserAgentMobile: boolean = false;\n  private _innerWidth: number;\n\n  /**\n   * Returns if the calendar should be active or not.\n   * If the user agent is mobile and the screen width is less than DATEPICKER_ACTIVE_BREAKPOINT\n   * then the calendar is inactive.\n   */\n  get isEnabled(): boolean {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n    // What they recommend is:\n    //\"In summary, we recommend looking for the string 'Mobi'\n    // anywhere in the User Agent to detect a mobile device.\"\n    if (this._document) {\n      if (this._innerWidth < DATEPICKER_ENABLE_BREAKPOINT && this._isUserAgentMobile) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// iPad mini screen width\n// http://stephen.io/mediaqueries/#iPadMini\nexport const DATEPICKER_ENABLE_BREAKPOINT: number = 768;\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ClrPopoverPositions } from '../../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../../utils/popover/interfaces/popover-position.interface';\n\nconst enum DatepickerViewEnum {\n  MONTHVIEW = 'MONTHVIEW',\n  YEARVIEW = 'YEARVIEW',\n  DAYVIEW = 'DAYVIEW',\n}\n\n/**\n * This service manages which view is visible in the datepicker popover.\n */\n@Injectable()\nexport class ViewManagerService {\n  private _currentView: DatepickerViewEnum = DatepickerViewEnum.DAYVIEW;\n  position: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  get isDayView(): boolean {\n    return this._currentView === DatepickerViewEnum.DAYVIEW;\n  }\n\n  get isYearView(): boolean {\n    return this._currentView === DatepickerViewEnum.YEARVIEW;\n  }\n\n  get isMonthView(): boolean {\n    return this._currentView === DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToMonthView(): void {\n    this._currentView = DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToYearView(): void {\n    this._currentView = DatepickerViewEnum.YEARVIEW;\n  }\n\n  changeToDayView(): void {\n    this._currentView = DatepickerViewEnum.DAYVIEW;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrLabel } from '../common/label';\n\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-date-container',\n  template: `\n      <ng-content select=\"label\"></ng-content>\n      <label *ngIf=\"!label && addGrid()\"></label>\n      <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n        <div class=\"clr-input-wrapper\" clrPopoverAnchor>\n          <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n            <ng-content select=\"[clrDate]\"></ng-content>\n            <button #actionButton\n                    type=\"button\"\n                    clrPopoverOpenCloseButton\n                    class=\"clr-input-group-icon-action\"\n                    [attr.title]=\"commonStrings.keys.datepickerToggle\"\n                    [attr.aria-label]=\"commonStrings.keys.datepickerToggle\"\n                    [disabled]=\"isInputDateDisabled\"\n                    *ngIf=\"isEnabled\">\n              <clr-icon shape=\"calendar\"></clr-icon>\n            </button>\n            <clr-datepicker-view-manager *clrPopoverContent=\"open at popoverPosition; outsideClickToClose: true; scrollToClose: true\" clrFocusTrap></clr-datepicker-view-manager>\n          </div>\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n        </div>\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    `,\n  providers: [\n    ControlIdService,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n    LocaleHelperService,\n    IfErrorService,\n    ControlClassService,\n    FocusService,\n    NgControlService,\n    DateIOService,\n    DateNavigationService,\n    DatepickerEnabledService,\n    DateFormControlService,\n    ViewManagerService,\n  ],\n  host: {\n    '[class.clr-form-control-disabled]': 'isInputDateDisabled',\n    '[class.clr-form-control]': 'true',\n    '[class.clr-row]': 'addGrid()',\n  },\n})\nexport class ClrDateContainer implements DynamicWrapper, OnDestroy, AfterViewInit {\n  _dynamic: boolean = false;\n  invalid = false;\n  focus = false;\n  control: NgControl;\n  @ContentChild(ClrLabel) label: ClrLabel;\n  @Input('clrPosition')\n  set clrPosition(position: string) {\n    if (position && ClrPopoverPositions[position]) {\n      this.viewManagerService.position = ClrPopoverPositions[position];\n    }\n  }\n  get popoverPosition(): ClrPopoverPosition {\n    return this.viewManagerService.position;\n  }\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  private toggleButton: ElementRef;\n  @ViewChild('actionButton')\n  set actionButton(button: ElementRef) {\n    this.toggleButton = button;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private dateNavigationService: DateNavigationService,\n    private datepickerEnabledService: DatepickerEnabledService,\n    private dateFormControlService: DateFormControlService,\n    public commonStrings: ClrCommonStringsService,\n    private ifErrorService: IfErrorService,\n    private focusService: FocusService,\n    private viewManagerService: ViewManagerService,\n    private controlClassService: ControlClassService,\n    @Optional() private layoutService: LayoutService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      }),\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      }),\n      this.toggleService.openChange.subscribe(state => {\n        this.dateFormControlService.markAsTouched();\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe(open => {\n        if (open) {\n          this.initializeCalendar();\n        } else {\n          this.toggleButton.nativeElement.focus();\n        }\n      })\n    );\n  }\n\n  /**\n   * Returns the classes to apply to the control\n   */\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  /**\n   * Determines if the control needs to add grid classes\n   */\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  /**\n   * Returns if the Datepicker is enabled or not. If disabled, hides the datepicker trigger.\n   */\n  get isEnabled(): boolean {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  /**\n   * Return if Datepicker is diabled or not as Form Control\n   */\n  get isInputDateDisabled(): boolean {\n    /* clrForm wrapper or without clrForm */\n    return (\n      (this.control && this.control.disabled) || (this.dateFormControlService && this.dateFormControlService.disabled)\n    );\n  }\n\n  /**\n   * Processes the user input and Initializes the Calendar everytime the datepicker popover is open.\n   */\n  private initializeCalendar(): void {\n    this.dateNavigationService.initializeCalendar();\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport function isBooleanAttributeSet(value: string | boolean): boolean {\n  // for null just return false no need to check anything\n  if (value === null) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    // Empty string is valid, 'true' as string is also valid\n    return value.length >= 0;\n  }\n  // Boolean value will be read as it is, everything else is false\n  return typeof value === 'boolean' ? value : false;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { FocusService } from '../common/providers/focus.service';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDateContainer } from './date-container';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { datesAreEqual } from './utils/date-utils';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\n\n// There are four ways the datepicker value is set\n// 1. Value set by user typing into text input as a string ex: '01/28/2015'\n// 2. Value set explicitly by Angular Forms APIs as a string ex: '01/28/2015'\n// 3. Value set by user via datepicker UI as a Date Object\n// 4. Value set via `clrDate` input as a Date Object\n\n@Directive({\n  selector: '[clrDate]',\n  host: {\n    '[class.clr-input]': 'true',\n  },\n  providers: [DatepickerFocusService],\n})\nexport class ClrDateInput extends WrappedFormControl<ClrDateContainer> implements OnInit, AfterViewInit, OnDestroy {\n  @Input() placeholder: string;\n  @Output('clrDateChange') dateChange: EventEmitter<Date> = new EventEmitter<Date>(false);\n  @Input('clrDate')\n  set date(date: Date) {\n    if (this.previousDateChange !== date) {\n      this.updateDate(this.getValidDateValueFromDate(date));\n    }\n\n    if (!this.initialClrDateInputValue) {\n      this.initialClrDateInputValue = date;\n    }\n  }\n\n  @Input()\n  set min(dateString: string) {\n    this.dateIOService.setMinDate(dateString);\n  }\n\n  @Input()\n  set max(dateString: string) {\n    this.dateIOService.setMaxDate(dateString);\n  }\n\n  protected index = 1;\n  private initialClrDateInputValue: Date;\n  private previousDateChange: Date;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    injector: Injector,\n    protected el: ElementRef,\n    protected renderer: Renderer2,\n    @Self()\n    @Optional()\n    protected control: NgControl,\n    @Optional() private container: ClrDateContainer,\n    @Optional() private dateIOService: DateIOService,\n    @Optional() private dateNavigationService: DateNavigationService,\n    @Optional() private datepickerEnabledService: DatepickerEnabledService,\n    @Optional() private dateFormControlService: DateFormControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private focusService: FocusService,\n    private datepickerFocusService: DatepickerFocusService\n  ) {\n    super(viewContainerRef, ClrDateContainer, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.populateServicesFromContainerComponent();\n\n    this.subscriptions.push(\n      this.listenForUserSelectedDayChanges(),\n      this.listenForControlValueChanges(),\n      this.listenForTouchChanges(),\n      this.listenForDirtyChanges(),\n      this.listenForInputRefocus()\n    );\n  }\n\n  ngAfterViewInit() {\n    // I don't know why I have to do this but after using the new HostWrapping Module I have to delay the processing\n    // of the initial Input set by the user to here. If I do not 2 issues occur:\n    // 1. The Input setter is called before ngOnInit. ngOnInit initializes the services without which the setter fails.\n    // 2. The Renderer doesn't work before ngAfterViewInit (It used to before the new HostWrapping Module for some reason).\n    // I need the renderer to set the value property on the input to make sure that if the user has supplied a Date\n    // input object, we reflect it with the right date on the input field using the IO service. I am not sure if\n    // these are major issues or not but just noting them down here.\n    this.processInitialInputs();\n  }\n\n  @HostListener('focus')\n  setFocusStates() {\n    this.setFocus(true);\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    this.setFocus(false);\n  }\n\n  @HostBinding('attr.placeholder')\n  get placeholderText(): string {\n    return this.placeholder ? this.placeholder : this.dateIOService.placeholderText;\n  }\n\n  @HostBinding('attr.type')\n  get inputType(): string {\n    return isPlatformBrowser(this.platformId) && this.usingNativeDatepicker() ? 'date' : 'text';\n  }\n\n  @HostListener('change', ['$event.target'])\n  onValueChange(target: HTMLInputElement) {\n    const validDateValue = this.dateIOService.getDateValueFromDateString(target.value);\n    if (this.usingClarityDatepicker() && validDateValue) {\n      this.updateDate(validDateValue, true);\n    } else if (this.usingNativeDatepicker()) {\n      const [year, month, day] = target.value.split('-');\n      this.updateDate(new Date(+year, +month - 1, +day), true);\n    } else {\n      this.emitDateOutput(null);\n    }\n  }\n\n  @HostBinding('disabled')\n  @Input('disabled')\n  set disabled(value: boolean | string) {\n    if (this.dateFormControlService) {\n      this.dateFormControlService.setDisabled(isBooleanAttributeSet(value));\n    }\n  }\n  get disabled() {\n    if (this.dateFormControlService) {\n      return this.dateFormControlService.disabled;\n    }\n    return null;\n  }\n\n  private usingClarityDatepicker() {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  private usingNativeDatepicker() {\n    return !this.datepickerEnabledService.isEnabled;\n  }\n\n  private setFocus(focus: boolean) {\n    if (this.focusService) {\n      this.focusService.focused = focus;\n    }\n  }\n\n  private populateServicesFromContainerComponent() {\n    if (!this.container) {\n      this.dateIOService = this.getProviderFromContainer(DateIOService);\n      this.dateNavigationService = this.getProviderFromContainer(DateNavigationService);\n      this.datepickerEnabledService = this.getProviderFromContainer(DatepickerEnabledService);\n      this.dateFormControlService = this.getProviderFromContainer(DateFormControlService);\n    }\n  }\n\n  private processInitialInputs() {\n    if (this.datepickerHasFormControl()) {\n      this.updateDate(this.dateIOService.getDateValueFromDateString(this.control.value));\n    } else {\n      this.updateDate(this.initialClrDateInputValue);\n    }\n  }\n\n  private updateDate(value: Date, setByUserInteraction = false) {\n    const date = this.getValidDateValueFromDate(value);\n\n    if (setByUserInteraction) {\n      this.emitDateOutput(date);\n    } else {\n      this.previousDateChange = date;\n    }\n\n    if (this.dateNavigationService) {\n      this.dateNavigationService.selectedDay = date\n        ? new DayModel(date.getFullYear(), date.getMonth(), date.getDate())\n        : null;\n    }\n\n    this.updateInput(date);\n  }\n\n  private updateInput(date: Date) {\n    if (date) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      if (this.usingNativeDatepicker()) {\n        // valueAsDate expects UTC, date from input is time-zoned\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        this.renderer.setProperty(this.el.nativeElement, 'valueAsDate', date);\n      } else if (this.datepickerHasFormControl() && dateString !== this.control.value) {\n        this.control.control.setValue(dateString);\n      } else {\n        this.renderer.setProperty(this.el.nativeElement, 'value', dateString);\n      }\n    } else {\n      this.renderer.setProperty(this.el.nativeElement, 'value', '');\n    }\n  }\n\n  private getValidDateValueFromDate(date: Date) {\n    if (this.dateIOService) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      return this.dateIOService.getDateValueFromDateString(dateString);\n    } else {\n      return null;\n    }\n  }\n\n  private emitDateOutput(date: Date) {\n    if (!datesAreEqual(date, this.previousDateChange)) {\n      this.dateChange.emit(date);\n      this.previousDateChange = date;\n    } else if (!date && this.previousDateChange) {\n      this.dateChange.emit(null);\n      this.previousDateChange = null;\n    }\n  }\n\n  private datepickerHasFormControl() {\n    return !!this.control;\n  }\n\n  private listenForControlValueChanges() {\n    return of(this.datepickerHasFormControl())\n      .pipe(\n        filter(hasControl => hasControl),\n        switchMap(() => this.control.valueChanges),\n        // only update date value if not being set by user\n        filter(() => !this.datepickerFocusService.elementIsFocused(this.el.nativeElement))\n      )\n      .subscribe((value: string) => this.updateDate(this.dateIOService.getDateValueFromDateString(value)));\n  }\n\n  private listenForUserSelectedDayChanges() {\n    return this.dateNavigationService.selectedDayChange.subscribe(dayModel => this.updateDate(dayModel.toDate(), true));\n  }\n\n  private listenForTouchChanges() {\n    return this.dateFormControlService.touchedChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsTouched());\n  }\n\n  private listenForDirtyChanges() {\n    return this.dateFormControlService.dirtyChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsDirty());\n  }\n\n  private listenForInputRefocus() {\n    return this.dateNavigationService.selectedDayChange\n      .pipe(filter(date => !!date))\n      .subscribe(v => this.datepickerFocusService.focusInput(this.el.nativeElement));\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-datepicker-view-manager',\n  templateUrl: './datepicker-view-manager.html',\n  providers: [DatepickerFocusService],\n  host: {\n    '[class.datepicker]': 'true',\n    '[attr.aria-modal]': 'true',\n  },\n})\nexport class ClrDatepickerViewManager {\n  constructor(private viewManagerService: ViewManagerService) {}\n\n  /**\n   * Returns if the current view is the monthpicker.\n   */\n  get isMonthView(): boolean {\n    return this.viewManagerService.isMonthView;\n  }\n\n  /**\n   * Returns if the current view is the yearpicker.\n   */\n  get isYearView(): boolean {\n    return this.viewManagerService.isYearView;\n  }\n\n  /**\n   * Returns if the current view is the daypicker.\n   */\n  get isDayView(): boolean {\n    return this.viewManagerService.isDayView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { DayViewModel } from './model/day-view.model';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\n\n@Component({\n  selector: 'clr-day',\n  template: `\n        <button\n            class=\"day-btn\"\n            type=\"button\"\n            [class.is-today]=\"dayView.isTodaysDate\"\n            [class.is-excluded]=\"dayView.isExcluded\"\n            [class.is-disabled]=\"dayView.isDisabled\"\n            [class.is-selected]=\"dayView.isSelected\"\n            [attr.tabindex]=\"dayView.tabIndex\"\n            (click)=\"selectDay()\"\n            (focus)=\"onDayViewFocus()\"\n            [attr.aria-label]=\"dayString\">\n            {{dayView.dayModel.date}}\n        </button>\n    `,\n  host: { '[class.day]': 'true' },\n})\nexport class ClrDay {\n  private _dayView: DayViewModel;\n  public dayString: string;\n\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _toggleService: ClrPopoverToggleService,\n    private dateFormControlService: DateFormControlService\n  ) {}\n\n  /**\n   * DayViewModel input which is used to build the Day View.\n   */\n\n  @Input('clrDayView')\n  public set dayView(day: DayViewModel) {\n    this._dayView = day;\n    this.dayString = this._dayView.dayModel.toDateString();\n  }\n\n  public get dayView(): DayViewModel {\n    return this._dayView;\n  }\n\n  /**\n   * Updates the focusedDay in the DateNavigationService when the ClrDay is focused.\n   */\n  onDayViewFocus() {\n    this._dateNavigationService.focusedDay = this.dayView.dayModel;\n  }\n\n  /**\n   * Updates the selectedDay when the ClrDay is selected and closes the datepicker popover.\n   */\n  selectDay(): void {\n    const day: DayModel = this.dayView.dayModel;\n    this._dateNavigationService.notifySelectedDayChanged(day);\n    this.dateFormControlService.markAsDirty();\n    this._toggleService.open = false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, AfterViewInit } from '@angular/core';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-daypicker',\n  providers: [ClrAriaLiveService],\n  templateUrl: './daypicker.html',\n  host: { '[class.daypicker]': 'true' },\n})\nexport class ClrDaypicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _dateNavigationService: DateNavigationService,\n    private _localeHelperService: LocaleHelperService,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  ngAfterViewInit() {\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(`${this.ariaLiveMonth} ${this.updateAriaLiveYear}`);\n  }\n\n  get monthAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectMonthText, {\n      CALENDAR_MONTH: this.calendarMonth,\n    });\n  }\n\n  get yearAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectYearText, {\n      CALENDAR_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  get ariaLiveMonth(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentMonthPhrase, {\n      CURRENT_MONTH: this.calendarMonth,\n    });\n  }\n\n  get updateAriaLiveYear(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentYearPhrase, {\n      CURRENT_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the monthpicker view.\n   */\n  changeToMonthView(): void {\n    this._viewManagerService.changeToMonthView();\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the yearpicker view.\n   */\n  changeToYearView(): void {\n    this._viewManagerService.changeToYearView();\n  }\n\n  /**\n   * Returns the month value of the calendar in the TranslationWidth.Abbreviated format.\n   */\n  get calendarMonth(): string {\n    return this._localeHelperService.localeMonthsAbbreviated[this._dateNavigationService.displayedCalendar.month];\n  }\n\n  /**\n   * Returns the year value of the calendar.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the next month.\n   */\n  nextMonth(): void {\n    this._dateNavigationService.moveToNextMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the previous month.\n   */\n  previousMonth(): void {\n    this._dateNavigationService.moveToPreviousMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the current month.\n   */\n  currentMonth(): void {\n    this._dateNavigationService.moveToCurrentMonth();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-monthpicker',\n  template: `\n        <button\n            type=\"button\"\n            class=\"calendar-btn month\"\n            *ngFor=\"let month of monthNames; let monthIndex = index\"\n            (click)=\"changeMonth(monthIndex)\"\n            [class.is-selected]=\"monthIndex === calendarMonthIndex\"\n            [attr.tabindex]=\"getTabIndex(monthIndex)\">\n            {{month}}\n        </button>\n    `,\n  host: {\n    '[class.monthpicker]': 'true',\n  },\n})\nexport class ClrMonthpicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef\n  ) {\n    this._focusedMonthIndex = this.calendarMonthIndex;\n  }\n\n  /**\n   * Keeps track of the current focused month.\n   */\n  private _focusedMonthIndex: number;\n\n  /**\n   * Gets the months array which is used to rendered the monthpicker view.\n   * Months are in the TranslationWidth.Wide format.\n   */\n  get monthNames(): ReadonlyArray<string> {\n    return this._localeHelperService.localeMonthsWide;\n  }\n\n  /**\n   * Gets the month value of the Calendar.\n   */\n  get calendarMonthIndex(): number {\n    return this._dateNavigationService.displayedCalendar.month;\n  }\n\n  /**\n   * Calls the DateNavigationService to update the month value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeMonth(monthIndex: number) {\n    this._dateNavigationService.changeMonth(monthIndex);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Compares the month passed to the focused month and returns the tab index.\n   */\n  getTabIndex(monthIndex: number): number {\n    return monthIndex === this._focusedMonthIndex ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the monthpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW && this._focusedMonthIndex > 0) {\n        event.preventDefault();\n        this._focusedMonthIndex--;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === DOWN_ARROW && this._focusedMonthIndex < 11) {\n        event.preventDefault();\n        this._focusedMonthIndex++;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === RIGHT_ARROW && this._focusedMonthIndex < 6) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex + 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === LEFT_ARROW && this._focusedMonthIndex > 5) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex - 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      }\n    }\n  }\n\n  /**\n   * Focuses on the current calendar month when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nconst YEARS_TO_DISPLAY: number = 10;\n\nexport class YearRangeModel {\n  constructor(private readonly year: number) {\n    this.generateYearRange();\n  }\n\n  yearRange: number[] = [];\n\n  /**\n   * Gets the number in the middle of the range.\n   */\n  get middleYear(): number {\n    return this.yearRange[Math.floor(this.yearRange.length / 2)];\n  }\n\n  /**\n   * Generates the year range based on the year parameter.\n   * eg: If 2018 is passed the output will be [2010, 2011, ..., 2019]\n   */\n  private generateYearRange() {\n    const remainder: number = this.year % YEARS_TO_DISPLAY;\n    const floor: number = this.year - remainder;\n    const ceil: number = floor + YEARS_TO_DISPLAY;\n    this.yearRange = this.generateRange(floor, ceil);\n  }\n\n  /**\n   * Function which generate a range of numbers from floor to ceil.\n   */\n  private generateRange(floor: number, ceil: number): number[] {\n    return Array.from({ length: ceil - floor }, (v, k) => k + floor);\n  }\n\n  /**\n   * Generates the YearRangeModel for the next decade.\n   */\n  nextDecade(): YearRangeModel {\n    return new YearRangeModel(this.year + 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the previous decade.\n   */\n  previousDecade(): YearRangeModel {\n    return new YearRangeModel(this.year - 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the current decade.\n   */\n  currentDecade(): YearRangeModel {\n    return new YearRangeModel(new Date().getFullYear());\n  }\n\n  /**\n   * Checks if the value is in the YearRangeModel.\n   */\n  inRange(value: number): boolean {\n    return this.yearRange.indexOf(value) > -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { YearRangeModel } from './model/year-range.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-yearpicker',\n  providers: [ClrAriaLiveService],\n  template: `\n        <div class=\"year-switchers\">\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"previousDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerPreviousDecade\">\n              <clr-icon shape=\"angle\" dir=\"left\" [attr.title]=\"commonStrings.keys.datepickerPreviousDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"currentDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerCurrentDecade\">\n              <clr-icon shape=\"event\" [attr.title]=\"commonStrings.keys.datepickerCurrentDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"nextDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerNextDecade\">\n              <clr-icon shape=\"angle\" dir=\"right\" [attr.title]=\"commonStrings.keys.datepickerNextDecade\"></clr-icon>\n          </button>\n        </div>\n        <div class=\"years\">\n            <button\n                *ngFor=\"let year of yearRangeModel.yearRange\"\n                type=\"button\"\n                class=\"calendar-btn year\"\n                [attr.tabindex]=\"getTabIndex(year)\"\n                [class.is-selected]=\"year === calendarYear\"\n                (click)=\"changeYear(year)\">\n                {{year}}\n            </button>\n        </div>\n    `,\n  host: {\n    '[class.yearpicker]': 'true',\n  },\n})\nexport class ClrYearpicker implements AfterViewInit {\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _viewManagerService: ViewManagerService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {\n    this.yearRangeModel = new YearRangeModel(this.calendarYear);\n    this._focusedYear = this.calendarYear;\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /** @deprecated since 3.0, remove in 4.0 */\n  get ariaLiveDecadeText(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentDecadePhrase, {\n      DECADE_RANGE: this.decadeRange,\n    });\n  }\n\n  private decadeRange;\n\n  /**\n   * YearRangeModel which is used to build the YearPicker view.\n   */\n  yearRangeModel: YearRangeModel;\n\n  /**\n   * Keeps track of the current focused year.\n   */\n  private _focusedYear: number;\n\n  /**\n   * Gets the year which the user is currently on.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Increments the focus year by the value passed. Updates the YearRangeModel if the\n   * new value is not in the current decade.\n   */\n  private incrementFocusYearBy(value: number): void {\n    this._focusedYear = this._focusedYear + value;\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (value > 0) {\n        this.yearRangeModel = this.yearRangeModel.nextDecade();\n      } else {\n        this.yearRangeModel = this.yearRangeModel.previousDecade();\n      }\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Calls the DateNavigationService to update the year value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeYear(year: number): void {\n    this._dateNavigationService.changeYear(year);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Updates the YearRangeModel to the previous decade.\n   */\n  previousDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.previousDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Updates the YearRangeModel to the current decade.\n   */\n  currentDecade(): void {\n    if (!this.yearRangeModel.inRange(this._dateNavigationService.today.year)) {\n      this.yearRangeModel = this.yearRangeModel.currentDecade();\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /**\n   * Updates the YearRangeModel to the next decade.\n   */\n  nextDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.nextDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Compares the year passed to the focused year and returns the tab index.\n   */\n  getTabIndex(year: number): number {\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (this.yearRangeModel.inRange(this.calendarYear)) {\n        this._focusedYear = this.calendarYear;\n      } else {\n        this._focusedYear = this.yearRangeModel.middleYear;\n      }\n    }\n    return this._focusedYear === year ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the yearpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-1);\n      } else if (keyCode === DOWN_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(1);\n      } else if (keyCode === RIGHT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(5);\n      } else if (keyCode === LEFT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-5);\n      }\n    }\n  }\n\n  private updateRange(yrm: YearRangeModel): void {\n    const floor = yrm.yearRange[0];\n    const ceil = yrm.yearRange[yrm.yearRange.length - 1];\n    this.decadeRange = `${floor} to ${ceil}`;\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n\n  /**\n   * Focuses on the current calendar year when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrCalendar } from './calendar';\nimport { ClrDateContainer } from './date-container';\nimport { ClrDateInput } from './date-input';\nimport { ClrDatepickerViewManager } from './datepicker-view-manager';\nimport { ClrDay } from './day';\nimport { ClrDaypicker } from './daypicker';\nimport { ClrMonthpicker } from './monthpicker';\nimport { ClrYearpicker } from './yearpicker';\n\nexport const CLR_DATEPICKER_DIRECTIVES: Type<any>[] = [\n  ClrDay,\n  ClrDateContainer,\n  ClrDateInput,\n  ClrDatepickerViewManager,\n  ClrMonthpicker,\n  ClrYearpicker,\n  ClrDaypicker,\n  ClrCalendar,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrHostWrappingModule,\n    ClrConditionalModule,\n    ClrPopoverModuleNext,\n    ClrIconModule,\n    ClrFocusTrapModule,\n    ClrCommonFormsModule,\n  ],\n  declarations: [CLR_DATEPICKER_DIRECTIVES],\n  exports: [CLR_DATEPICKER_DIRECTIVES],\n  entryComponents: [ClrDateContainer],\n})\nexport class ClrDatepickerModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-input-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content select=\"[clrInput]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrInputContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrInputContainer } from './input-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n@Directive({ selector: '[clrInput]', host: { '[class.clr-input]': 'true' } })\nexport class ClrInput extends WrappedFormControl<ClrInputContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrInputContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrInput } from './input';\nimport { ClrInputContainer } from './input-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrInput, ClrInputContainer],\n  exports: [ClrCommonFormsModule, ClrInput, ClrInputContainer],\n  entryComponents: [ClrInputContainer],\n})\nexport class ClrInputModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, InjectionToken, Input, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\nexport const TOGGLE_SERVICE = new InjectionToken<BehaviorSubject<boolean>>(undefined);\nexport function ToggleServiceFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const TOGGLE_SERVICE_PROVIDER = { provide: TOGGLE_SERVICE, useFactory: ToggleServiceFactory };\n\n@Component({\n  selector: 'clr-password-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrPassword]\"></ng-content>\n          <button\n            *ngIf=\"clrToggle\"\n            (click)=\"toggle()\"\n            [disabled]=\"control?.disabled\"\n            class=\"clr-input-group-icon-action\"\n            type=\"button\">\n            <clr-icon\n            [attr.shape]=\"show ? 'eye-hide' : 'eye'\"\n            [attr.title]=\"show ? commonStrings.keys.hide : commonStrings.keys.show\"></clr-icon>\n          </button>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    IfErrorService,\n    NgControlService,\n    ControlIdService,\n    ControlClassService,\n    FocusService,\n    TOGGLE_SERVICE_PROVIDER,\n  ],\n})\nexport class ClrPasswordContainer extends ClrAbstractContainer {\n  show = false;\n  focus = false;\n  private _toggle = true;\n\n  @Input('clrToggle')\n  set clrToggle(state: boolean) {\n    this._toggle = state;\n    if (!state) {\n      this.show = false;\n    }\n  }\n  get clrToggle() {\n    return this._toggle;\n  }\n\n  constructor(\n    ifErrorService: IfErrorService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    public focusService: FocusService,\n    @Inject(TOGGLE_SERVICE) private toggleService: BehaviorSubject<boolean>,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      })\n    );\n  }\n\n  toggle() {\n    this.show = !this.show;\n    this.toggleService.next(this.show);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport enum DragEventType {\n  DRAG_START,\n  DRAG_MOVE,\n  DRAG_END,\n  DRAG_ENTER,\n  DRAG_LEAVE,\n  DROP,\n}\n\nexport interface DragPointPosition {\n  pageX: number;\n  pageY: number;\n  moveX: number;\n  moveY: number;\n}\n\nexport interface DragEventInterface<T> {\n  type: DragEventType;\n  group?: string | string[];\n  ghostElement?: any;\n  dragPosition: DragPointPosition;\n  dragDataTransfer?: T;\n  // For default ghosts, this dropPointPosition denotes the center point of the ghost element.\n  // This center point is used to determine whether the ghost is over droppable elements or not.\n  dropPointPosition?: { pageX: number; pageY: number };\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPasswordContainer, TOGGLE_SERVICE } from './password-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { FocusService } from '../common/providers/focus.service';\n\n@Directive({ selector: '[clrPassword]', host: { '[class.clr-input]': 'true' } })\nexport class ClrPassword extends WrappedFormControl<ClrPasswordContainer> implements OnInit, OnDestroy {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Optional() private focusService: FocusService,\n    @Optional()\n    @Inject(TOGGLE_SERVICE)\n    private toggleService: BehaviorSubject<boolean>\n  ) {\n    super(vcr, ClrPasswordContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrPassword requires being wrapped in <clr-password-container>');\n    }\n\n    this.subscriptions.push(\n      this.toggleService.subscribe(toggle => {\n        renderer.setProperty(el.nativeElement, 'type', toggle ? 'text' : 'password');\n      })\n    );\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrPassword } from './password';\nimport { ClrPasswordContainer } from './password-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrPassword, ClrPasswordContainer],\n  exports: [ClrCommonFormsModule, ClrPassword, ClrPasswordContainer],\n  entryComponents: [ClrPasswordContainer],\n})\nexport class ClrPasswordModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnInit } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\n@Component({\n  selector: 'clr-radio-wrapper',\n  template: `\n    <ng-content select=\"[clrRadio]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-radio-wrapper]': 'true',\n  },\n  providers: [ControlIdService],\n})\nexport class ClrRadioWrapper implements DynamicWrapper, OnInit {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRadioWrapper } from '../radio/radio-wrapper';\n\n@Directive({ selector: '[clrRadio]' })\nexport class ClrRadio extends WrappedFormControl<ClrRadioWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRadioWrapper, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-radio-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-radio-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrRadioContainer extends ClrAbstractContainer {\n  private inline = false;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrRadio } from './radio';\nimport { ClrRadioContainer } from './radio-container';\nimport { ClrRadioWrapper } from './radio-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  exports: [ClrCommonFormsModule, ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  entryComponents: [ClrRadioWrapper],\n})\nexport class ClrRadioModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild } from '@angular/core';\nimport { SelectMultipleControlValueAccessor } from '@angular/forms';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-select-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div [ngClass]=\"wrapperClass()\">\n                <ng-content select=\"[clrSelect]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrSelectContainer extends ClrAbstractContainer {\n  @ContentChild(SelectMultipleControlValueAccessor, { static: false })\n  multiple: SelectMultipleControlValueAccessor;\n  private multi = false;\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.multi = control.valueAccessor instanceof SelectMultipleControlValueAccessor;\n          this.control = control;\n        }\n      })\n    );\n  }\n\n  wrapperClass() {\n    return this.multi ? 'clr-multiselect-wrapper' : 'clr-select-wrapper';\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrSelectContainer } from './select-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrSelect]', host: { '[class.clr-select]': 'true' } })\nexport class ClrSelect extends WrappedFormControl<ClrSelectContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrSelectContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrSelect } from './select';\nimport { ClrSelectContainer } from './select-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrSelect, ClrSelectContainer],\n  exports: [ClrCommonFormsModule, ClrSelect, ClrSelectContainer],\n  entryComponents: [ClrSelectContainer],\n})\nexport class ClrSelectModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-textarea-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-textarea-wrapper\">\n                <ng-content select=\"[clrTextarea]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrTextareaContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@Directive({ selector: '[clrTextarea]', host: { '[class.clr-textarea]': 'true' } })\nexport class ClrTextarea extends WrappedFormControl<ClrTextareaContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrTextareaContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrTextarea } from './textarea';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrTextarea, ClrTextareaContainer],\n  exports: [ClrCommonFormsModule, ClrTextarea, ClrTextareaContainer],\n  entryComponents: [ClrTextareaContainer],\n})\nexport class ClrTextareaModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional, Renderer2 } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-range-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-range-wrapper\" [class.progress-fill]=\"hasProgress\">\n                <ng-content select=\"[clrRange]\"></ng-content>\n                <span\n                  *ngIf=\"hasProgress\"\n                  class=\"fill-input\"\n                  [style.width]=\"getRangeProgressFillWidth()\"\n                ></span>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrRangeContainer extends ClrAbstractContainer {\n  private _hasProgress: boolean = false;\n\n  @Input('clrRangeHasProgress')\n  set hasProgress(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasProgress) {\n      this._hasProgress = valBool;\n    }\n  }\n\n  get hasProgress() {\n    return this._hasProgress;\n  }\n\n  constructor(\n    ifErrorService: IfErrorService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private idService: ControlIdService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n  }\n\n  getRangeProgressFillWidth(): string {\n    const input = <HTMLInputElement>this.renderer.selectRootElement('[clrRange]#' + this.idService.id);\n\n    const inputWidth = input.offsetWidth;\n    const inputMinValue = +input.min;\n    let inputMaxValue = +input.max;\n\n    if (inputMinValue === 0 && inputMaxValue === 0) {\n      inputMaxValue = 100;\n    }\n\n    const inputMiddle = (inputMinValue + inputMaxValue) / 2;\n    const inputValue = !!this.control && this.control.value !== undefined ? this.control.value : inputMiddle;\n    const valueAsPercent = (inputValue - inputMinValue) * 100 / (inputMaxValue - inputMinValue);\n\n    return valueAsPercent * inputWidth / 100 + 'px';\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRangeContainer } from './range-container';\n\n@Directive({ selector: '[clrRange]', host: { '[class.clr-range]': 'true' } })\nexport class ClrRange extends WrappedFormControl<ClrRangeContainer> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRangeContainer, injector, control, renderer, el);\n  }\n\n  // Notes: We need an output here EventEmitter for the value\n  // Does this implementation also need a display for the value?\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrRange } from './range';\nimport { ClrRangeContainer } from './range-container';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRange, ClrRangeContainer],\n  exports: [ClrCommonFormsModule, ClrRange, ClrRangeContainer],\n  entryComponents: [ClrRangeContainer],\n})\nexport class ClrRangeModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class DatalistIdService {\n  private _id = 'clr-datalist-' + ++counter;\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-datalist-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrDatalistInput]\"></ng-content>\n          <ng-content select=\"datalist\"></ng-content>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    ControlClassService,\n    LayoutService,\n    ControlIdService,\n    FocusService,\n    IfErrorService,\n    NgControlService,\n    DatalistIdService,\n  ],\n})\nexport class ClrDatalistContainer extends ClrAbstractContainer {\n  focus: boolean = false;\n\n  constructor(\n    controlClassService: ControlClassService,\n    @Optional() layoutService: LayoutService,\n    ifErrorService: IfErrorService,\n    ngControlService: NgControlService,\n    private focusService: FocusService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n\n    this.subscriptions.push(this.focusService.focusChange.subscribe(state => (this.focus = state)));\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ViewContainerRef,\n  Injector,\n  Self,\n  Optional,\n  Renderer2,\n  ElementRef,\n  HostListener,\n  AfterContentInit,\n} from '@angular/core';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { NgControl } from '@angular/forms';\nimport { FocusService } from '../common/providers/focus.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: '[clrDatalistInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.list]': 'listValue',\n  },\n})\nexport class ClrDatalistInput extends WrappedFormControl<ClrDatalistContainer> implements AfterContentInit {\n  constructor(\n    @Optional() private focusService: FocusService,\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    private datalistIdService: DatalistIdService\n  ) {\n    super(vcr, ClrDatalistContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrDatalist requires being wrapped in <clr-datalist-container>');\n    }\n  }\n\n  listValue: string;\n\n  ngAfterContentInit() {\n    // Subscriptions is inherited from WrappedFormControl, unsubscribe is handled there\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.listValue = id)));\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Input, Directive, AfterContentInit, Optional } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: 'datalist',\n  host: {\n    '[id]': 'datalistId',\n  },\n})\nexport class ClrDatalist implements AfterContentInit {\n  private subscriptions: Subscription[] = [];\n  constructor(@Optional() private datalistIdService: DatalistIdService) {}\n  datalistId: string;\n\n  ngAfterContentInit() {\n    if (!this.datalistIdService) {\n      return;\n    }\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.datalistId = id)));\n  }\n  @Input()\n  set id(idValue) {\n    if (!!idValue && this.datalistIdService) {\n      this.datalistId = idValue;\n      this.datalistIdService.id = idValue;\n    } else if (!!idValue) {\n      this.datalistId = idValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrDatalistInput } from './datalist-input';\nimport { ClrInputModule } from '../input/input.module';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDatalist } from './datalist';\n\n@NgModule({\n  imports: [CommonModule, ClrInputModule, ClrIconModule],\n  declarations: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n  exports: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n})\nexport class ClrDatalistModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrCheckboxModule } from './checkbox/checkbox.module';\nimport { ClrCommonFormsModule } from './common/common.module';\nimport { ClrDatepickerModule } from './datepicker/datepicker.module';\nimport { ClrInputModule } from './input/input.module';\nimport { ClrPasswordModule } from './password/password.module';\nimport { ClrRadioModule } from './radio/radio.module';\nimport { ClrSelectModule } from './select/select.module';\nimport { ClrTextareaModule } from './textarea/textarea.module';\nimport { ClrRangeModule } from './range/range.module';\nimport { ClrDatalistModule } from './datalist/datalist.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    ClrCommonFormsModule,\n    ClrCheckboxModule,\n    ClrDatepickerModule,\n    ClrInputModule,\n    ClrPasswordModule,\n    ClrRadioModule,\n    ClrSelectModule,\n    ClrTextareaModule,\n    ClrRangeModule,\n    ClrDatalistModule,\n  ],\n})\nexport class ClrFormsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoading } from './loading';\n\nexport const CLR_LOADING_DIRECTIVES: Type<any>[] = [ClrLoading];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_LOADING_DIRECTIVES], exports: [CLR_LOADING_DIRECTIVES] })\nexport class ClrLoadingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({ selector: '[clrOutsideClick]' })\nexport class OutsideClick {\n  constructor(private el: ElementRef) {}\n\n  @Input('clrStrict') strict = false;\n\n  @Output('clrOutsideClick') outsideClick = new EventEmitter<any>(false);\n\n  @HostListener('document:click', ['$event'])\n  documentClick(event: MouseEvent) {\n    const target = event.target; // Get the element in the DOM on which the mouse was clicked\n    const host = this.el.nativeElement; // Get the current actionMenu native HTML element\n\n    if (target === host) {\n      return;\n    }\n    if (!this.strict && host.contains(target)) {\n      return;\n    }\n    this.outsideClick.emit(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { OutsideClick } from './outside-click';\n\nexport * from './outside-click';\n\nexport const OUSTIDE_CLICK_DIRECTIVES: Type<any>[] = [OutsideClick];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OUSTIDE_CLICK_DIRECTIVES } from './index';\n\n@NgModule({ imports: [CommonModule], declarations: [OUSTIDE_CLICK_DIRECTIVES], exports: [OUSTIDE_CLICK_DIRECTIVES] })\nexport class ClrOutsideClickModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * If we someday want to be able to render the datagrid in a webworker,\n * this is where we would test if we're in headless mode. Right now it's not testing anything, but any access\n * to native DOM elements' methods and properties in the Datagrid happens here.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DomAdapter {\n  userDefinedWidth(element: HTMLElement): number {\n    element.classList.add('datagrid-cell-width-zero');\n    const userDefinedWidth = this.clientRect(element).width;\n    element.classList.remove('datagrid-cell-width-zero');\n    return userDefinedWidth;\n  }\n\n  scrollBarWidth(element: any) {\n    return element.offsetWidth - element.clientWidth;\n  }\n\n  scrollWidth(element: any) {\n    return element.scrollWidth || 0;\n  }\n\n  computedHeight(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('height'), 10);\n  }\n\n  clientRect(element: any): ClientRect {\n    const elementClientRect = element.getBoundingClientRect();\n    return {\n      top: parseInt(elementClientRect.top, 10),\n      bottom: parseInt(elementClientRect.bottom, 10),\n      left: parseInt(elementClientRect.left, 10),\n      right: parseInt(elementClientRect.right, 10),\n      width: parseInt(elementClientRect.width, 10),\n      height: parseInt(elementClientRect.height, 10),\n    };\n  }\n\n  minWidth(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('min-width'), 10);\n  }\n\n  focus(element: any): void {\n    element.focus();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DragEventInterface, DragPointPosition } from './interfaces/drag-event.interface';\n\n// This class is used to convert an internal event\n// to an external event to be emitted.\nexport class ClrDragEvent<T> {\n  public dragPosition: DragPointPosition;\n  public group: string | string[];\n  public dragDataTransfer: T;\n  public dropPointPosition: { pageX: number; pageY: number };\n\n  constructor(dragEvent: DragEventInterface<T>) {\n    this.dragPosition = dragEvent.dragPosition;\n    this.group = dragEvent.group;\n    this.dragDataTransfer = dragEvent.dragDataTransfer;\n    this.dropPointPosition = dragEvent.dropPointPosition;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Enumeration representing the sorting order of a datagrid column. It is a constant Enum,\n * i.e. each value needs to be treated as a `number`, starting at index 0.\n *\n * @export\n * @enum {number}\n */\nexport enum ClrDatagridSortOrder {\n  UNSORTED = 0,\n  ASC = 1,\n  DESC = -1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class DragAndDropEventBusService<T> {\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private drop: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  get dropped(): Observable<DragEventInterface<T>> {\n    return this.drop.asObservable();\n  }\n\n  broadcast(event: DragEventInterface<T>): void {\n    switch (event.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(event);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(event);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(event);\n        break;\n      case DragEventType.DROP:\n        this.drop.next(event);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, NgZone, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { DragAndDropEventBusService } from './drag-and-drop-event-bus.service';\n\n@Injectable()\nexport class DragEventListenerService<T> {\n  private draggableEl: any;\n\n  // contains the starting events such as mousedown and touchstart\n  private listeners: (() => void)[];\n  // contains the nested events that happens after/inside the starting events\n  // such as selectstart, mousemove/touchmove, mouseup/touchend\n  private nestedListeners: (() => void)[];\n\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  private hasDragStarted: boolean = false;\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  constructor(private ngZone: NgZone, private renderer: Renderer2, private eventBus: DragAndDropEventBusService<T>) {}\n\n  private initialPosition: { pageX: number; pageY: number };\n\n  // Draggable component sets these properties:\n  public dragDataTransfer?: T;\n  public group?: string | string[];\n\n  // DraggableGhost component sets these properties:\n  public ghostElement?: any;\n  public dropPointPosition?: { pageX: number; pageY: number };\n\n  public attachDragListeners(draggableEl: Node) {\n    this.draggableEl = draggableEl;\n    this.listeners = [\n      this.customDragEvent(this.draggableEl, 'mousedown', 'mousemove', 'mouseup'),\n      this.customDragEvent(this.draggableEl, 'touchstart', 'touchmove', 'touchend'),\n    ];\n  }\n\n  public detachDragListeners() {\n    if (this.listeners) {\n      this.listeners.map(event => event());\n    }\n\n    // In most cases, once users start dragging with mousedown/touchstart events,\n    // they will end dragging at one point with mouseup/touchend.\n    // However, there might be a few cases where mousedown/touchstart events get registered,\n    // but the draggable element gets removed before user ends dragging.\n    // In that case, we need to remove the attached listeners that happened during the mousedown/touchstart events.\n    if (this.nestedListeners) {\n      this.nestedListeners.map(event => event());\n    }\n  }\n\n  private getNativeEventObject(event: MouseEvent | TouchEvent): any {\n    if ((<TouchEvent>event).hasOwnProperty('changedTouches')) {\n      return (<TouchEvent>event).changedTouches[0];\n    } else {\n      return event;\n    }\n  }\n\n  private customDragEvent(element: Node, startOnEvent: string, moveOnEvent: string, endOnEvent: string): () => void {\n    return this.renderer.listen(element, startOnEvent, (startEvent: MouseEvent | TouchEvent) => {\n      // save the initial point to initialPosition\n      // this will be used to calculate how far the draggable has been dragged from its initial position\n      this.initialPosition = {\n        pageX: this.getNativeEventObject(startEvent).pageX,\n        pageY: this.getNativeEventObject(startEvent).pageY,\n      };\n\n      // Initialize nested listeners' property with a new empty array;\n      this.nestedListeners = [];\n\n      // This is needed to disable selection during dragging (especially in EDGE/IE11).\n      this.nestedListeners.push(\n        this.renderer.listen('document', 'selectstart', (selectEvent: Event) => {\n          selectEvent.preventDefault();\n          selectEvent.stopImmediatePropagation();\n        })\n      );\n\n      // Listen to mousemove/touchmove events outside of angular zone.\n      this.nestedListeners.push(\n        this.ngZone.runOutsideAngular(() => {\n          return this.renderer.listen('document', moveOnEvent, (moveEvent: MouseEvent | TouchEvent) => {\n            // Event.stopImmediatePropagation() is needed here to prevent nested draggables from getting dragged\n            // altogether. We shouldn't use Event.stopPropagation() here as we are listening to the events\n            // on the global element level.\n\n            // With Event.stopImmediatePropagation(), it registers the events sent from the inner most draggable\n            // first. Then immediately after that, it stops listening to the same type of events on the same\n            // element. So this will help us to not register the same events that would come from the parent\n            // level draggables eventually.\n\n            moveEvent.stopImmediatePropagation();\n\n            if (!this.hasDragStarted) {\n              this.hasDragStarted = true;\n              // Fire \"dragstart\"\n              this.broadcast(moveEvent, DragEventType.DRAG_START);\n            } else {\n              // Fire \"dragmove\"\n              this.broadcast(moveEvent, DragEventType.DRAG_MOVE);\n            }\n          });\n        })\n      );\n\n      // Listen to mouseup/touchend events.\n      this.nestedListeners.push(\n        this.renderer.listen('document', endOnEvent, (endEvent: MouseEvent | TouchEvent) => {\n          if (this.hasDragStarted) {\n            // Fire \"dragend\" only if dragstart is registered\n            this.hasDragStarted = false;\n            this.broadcast(endEvent, DragEventType.DRAG_END);\n          }\n\n          // We must remove the the nested listeners every time drag completes.\n          if (this.nestedListeners) {\n            this.nestedListeners.map(event => event());\n          }\n        })\n      );\n    });\n  }\n\n  private broadcast(event: MouseEvent | TouchEvent, eventType: DragEventType): void {\n    const dragEvent: DragEventInterface<T> = this.generateDragEvent(event, eventType);\n\n    switch (dragEvent.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(dragEvent);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(dragEvent);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(dragEvent);\n        break;\n      default:\n        break;\n    }\n\n    // The following properties are set after they are broadcasted to the DraggableGhost component.\n    dragEvent.ghostElement = this.ghostElement;\n    dragEvent.dropPointPosition = this.dropPointPosition;\n\n    this.eventBus.broadcast(dragEvent);\n  }\n\n  private generateDragEvent(event: MouseEvent | TouchEvent, eventType: DragEventType): DragEventInterface<T> {\n    const nativeEvent: any = this.getNativeEventObject(event);\n\n    return {\n      type: eventType,\n      dragPosition: {\n        pageX: nativeEvent.pageX,\n        pageY: nativeEvent.pageY,\n        moveX: nativeEvent.pageX - this.initialPosition.pageX,\n        moveY: nativeEvent.pageY - this.initialPosition.pageY,\n      },\n      group: this.group,\n      dragDataTransfer: this.dragDataTransfer,\n      ghostElement: this.ghostElement,\n    };\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\n\n// This service is used to capture the state of clrDraggable element\n// at a certain event and passes it to clrDraggableGhost component.\n@Injectable()\nexport class DraggableSnapshotService<T> {\n  constructor(private domAdapter: DomAdapter) {}\n\n  private draggableElClientRect: ClientRect;\n  private snapshotDragEvent: DragEventInterface<T>;\n\n  public capture(el: Node, event: DragEventInterface<T>): void {\n    this.draggableElClientRect = this.domAdapter.clientRect(el);\n    this.snapshotDragEvent = event;\n  }\n  public discard(): void {\n    delete this.draggableElClientRect;\n    delete this.snapshotDragEvent;\n  }\n  get hasDraggableState(): boolean {\n    return !!this.snapshotDragEvent && !!this.draggableElClientRect;\n  }\n  get clientRect(): ClientRect {\n    return this.draggableElClientRect;\n  }\n  get dragEvent(): DragEventInterface<T> {\n    return this.snapshotDragEvent;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, HostBinding, NgZone, OnDestroy, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\nimport { DraggableSnapshotService } from './providers/draggable-snapshot.service';\n\ntype PagePosition = {\n  pageX: number;\n  pageY: number;\n};\ntype OffsetPosition = {\n  top: number;\n  left: number;\n};\n\n@Component({\n  selector: 'clr-draggable-ghost',\n  template: `<ng-content></ng-content>`,\n  animations: [\n    trigger('leaveAnimation', [\n      transition(':leave', [\n        style({ left: '*', top: '*' }),\n        animate('0.2s ease-in-out', style({ top: '{{top}}', left: '{{left}}' })),\n      ]),\n    ]),\n  ],\n})\nexport class ClrDraggableGhost<T> implements OnDestroy {\n  private draggableGhostEl: any;\n\n  private subscriptions: Subscription[] = [];\n\n  @HostBinding('@leaveAnimation') leaveAnimConfig = { value: 0, params: { top: '0px', left: '0px' } };\n\n  constructor(\n    private el: ElementRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>,\n    @Optional() private draggableSnapshot: DraggableSnapshotService<T>,\n    private renderer: Renderer2,\n    private ngZone: NgZone\n  ) {\n    if (!this.dragEventListener || !this.draggableSnapshot) {\n      throw new Error('The clr-draggable-ghost component can only be used inside of a clrDraggable directive.');\n    }\n\n    this.draggableGhostEl = this.el.nativeElement;\n\n    // Need to use Renderer2 as it runs outside of NgZone\n    this.renderer.addClass(this.draggableGhostEl, 'draggable-ghost');\n\n    // Register the ghost element in DragEventListener to pass in a ClrDragEvent.\n    this.dragEventListener.ghostElement = this.draggableGhostEl;\n\n    // Default ghost size gets the size of ClrDraggable element.\n    this.setDefaultGhostSize(this.draggableGhostEl);\n\n    const offset: OffsetPosition = {\n      top: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageY - this.draggableSnapshot.clientRect.top\n        : 0,\n      left: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageX - this.draggableSnapshot.clientRect.left\n        : 0,\n    };\n\n    let isAnimationConfigured: boolean = false;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        // On the first drag move event, we configure the animation as it's dependent on the first drag event.\n        if (!isAnimationConfigured) {\n          if (this.draggableSnapshot.hasDraggableState) {\n            this.animateToOnLeave(\n              `${this.draggableSnapshot.clientRect.top}px`,\n              `${this.draggableSnapshot.clientRect.left}px`\n            );\n          } else {\n            this.animateToOnLeave(`${event.dragPosition.pageY}px`, `${event.dragPosition.pageX}px`);\n          }\n          isAnimationConfigured = true;\n        }\n\n        // Position the draggable ghost.\n        const topLeftPosition: PagePosition = this.findTopLeftPosition(event.dragPosition, offset);\n        this.setPositionStyle(this.draggableGhostEl, topLeftPosition.pageX, topLeftPosition.pageY);\n        this.dragEventListener.dropPointPosition = this.findDropPointPosition(topLeftPosition);\n      })\n    );\n  }\n\n  private setDefaultGhostSize(el: Node): void {\n    if (this.draggableSnapshot.hasDraggableState) {\n      this.setSizeStyle(el, this.draggableSnapshot.clientRect.width, this.draggableSnapshot.clientRect.height);\n    }\n  }\n\n  private animateToOnLeave(top: string, left: string): void {\n    this.ngZone.run(() => {\n      this.leaveAnimConfig = { value: 0, params: { top: top, left: left } };\n    });\n  }\n\n  private findTopLeftPosition(dragPosition: PagePosition, offset: OffsetPosition): PagePosition {\n    return { pageX: dragPosition.pageX - offset.left, pageY: dragPosition.pageY - offset.top };\n  }\n\n  private findDropPointPosition(topLeftPosition: PagePosition): PagePosition {\n    if (this.draggableSnapshot.hasDraggableState) {\n      return {\n        pageX: topLeftPosition.pageX + this.draggableSnapshot.clientRect.width / 2,\n        pageY: topLeftPosition.pageY + this.draggableSnapshot.clientRect.height / 2,\n      };\n    } else {\n      return topLeftPosition;\n    }\n  }\n\n  private setSizeStyle(el: Node, width: number, height: number): void {\n    this.renderer.setStyle(el, 'width', `${width}px`);\n    this.renderer.setStyle(el, 'height', `${height}px`);\n  }\n\n  private setPositionStyle(el: Node, left: number, top: number): void {\n    this.renderer.setStyle(el, 'left', `${left}px`);\n    this.renderer.setStyle(el, 'top', `${top}px`);\n    this.renderer.setStyle(el, 'visibility', 'visible');\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy, Optional, SkipSelf, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\n\n// This structural directive will be used mainly together with `clr-draggable-ghost` directive inside of clrDraggable\n// directive. The directive is responsible for instantiating `clr-draggable-ghost` directive only during dragging so\n// that Angular Change Detection is prevented from running if a component or directive is placed inside of the\n// `clr-draggable-ghost` directive.\n\n@Directive({ selector: '[clrIfDragged]' })\nexport class ClrIfDragged<T> implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private template: TemplateRef<any>,\n    @Optional()\n    @SkipSelf()\n    private container: ViewContainerRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>\n  ) {\n    if (!this.dragEventListener || !this.container) {\n      throw new Error('The *clrIfDragged directive can only be used inside of a clrDraggable directive.');\n    }\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.container.createEmbeddedView(this.template);\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.container.clear();\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\nimport { DragEventListenerService } from './drag-event-listener.service';\n\n// This provider registers the drag handle element.\n// When it registers a element as a drag handle, it attaches that element to the listeners from ClrDragEventListener.\n// Also, it adds the \"drag-handle\" css class to the registered element through Renderer.\n@Injectable()\nexport class DragHandleRegistrarService<T> {\n  private _customHandleEl: any;\n  private _defaultHandleEl: any;\n\n  get defaultHandleEl() {\n    return this._defaultHandleEl;\n  }\n\n  set defaultHandleEl(el: Node) {\n    this._defaultHandleEl = el; // defaultHandleEl will be usually the clrDraggable element.\n\n    // If the customHandleEl has been registered,\n    // don't make the defaultHandleEl the drag handle yet until the customHandleEl is unregistered.\n    if (!this._customHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n\n  constructor(private dragEventListener: DragEventListenerService<T>, private renderer: Renderer2) {}\n\n  private makeElementHandle(el: Node) {\n    if (this._defaultHandleEl && this._defaultHandleEl !== el) {\n      // Before making an element the custom handle element,\n      // we should remove the existing drag-handle class from the draggable element.\n      this.renderer.removeClass(this._defaultHandleEl, 'drag-handle');\n    }\n    this.dragEventListener.attachDragListeners(el);\n    this.renderer.addClass(el, 'drag-handle');\n  }\n\n  get customHandleEl() {\n    return this._customHandleEl;\n  }\n\n  public registerCustomHandle(el: Node) {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this._customHandleEl = el;\n    this.makeElementHandle(this._customHandleEl);\n  }\n\n  public unregisterCustomHandle() {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this.renderer.removeClass(this._customHandleEl, 'drag-handle');\n    delete this._customHandleEl;\n    // if default handle is set, make that handle\n    if (this._defaultHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\n// This service class adds and removes the \"in-drag\" class to the document body element\n// through its public enter() and exit() methods.\n@Injectable()\nexport class GlobalDragModeService {\n  constructor(private renderer: Renderer2) {}\n\n  enter(): void {\n    this.renderer.addClass(document.body, 'in-drag');\n  }\n\n  exit(): void {\n    this.renderer.removeClass(document.body, 'in-drag');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { ClrDraggableGhost } from '../draggable-ghost';\nimport { ClrIfDragged } from '../if-dragged';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\nimport { DragEventListenerService } from '../providers/drag-event-listener.service';\nimport { DragHandleRegistrarService } from '../providers/drag-handle-registrar.service';\nimport { DraggableSnapshotService } from '../providers/draggable-snapshot.service';\nimport { GlobalDragModeService } from '../providers/global-drag-mode.service';\n\n@Directive({\n  selector: '[clrDraggable]',\n  providers: [\n    DragEventListenerService,\n    DragHandleRegistrarService,\n    DraggableSnapshotService,\n    GlobalDragModeService,\n    DomAdapter,\n  ],\n  host: { '[class.draggable]': 'true', '[class.being-dragged]': 'dragOn' },\n})\nexport class ClrDraggable<T> implements AfterContentInit, OnDestroy {\n  private draggableEl: any;\n  private subscriptions: Subscription[] = [];\n  private componentFactory: ComponentFactory<ClrDraggableGhost<T>>;\n  public dragOn: boolean = false;\n\n  constructor(\n    private el: ElementRef,\n    private dragEventListener: DragEventListenerService<T>,\n    private dragHandleRegistrar: DragHandleRegistrarService<T>,\n    private viewContainerRef: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private draggableSnapshot: DraggableSnapshotService<T>,\n    private globalDragMode: GlobalDragModeService\n  ) {\n    this.draggableEl = this.el.nativeElement;\n    this.componentFactory = this.cfr.resolveComponentFactory<ClrDraggableGhost<T>>(ClrDraggableGhost);\n  }\n\n  @ContentChild(ClrIfDragged) customGhost: ClrIfDragged<T>;\n\n  @Input('clrDraggable')\n  set dataTransfer(value: T) {\n    this.dragEventListener.dragDataTransfer = value;\n  }\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this.dragEventListener.group = value;\n  }\n\n  private createDefaultGhost(event: DragEventInterface<T>) {\n    this.draggableSnapshot.capture(this.draggableEl, event);\n    // NOTE: The default ghost element will appear\n    // next to the clrDraggable in the DOM as a sibling element.\n    this.viewContainerRef.createComponent(this.componentFactory, 0, this.injector, [\n      [this.draggableEl.cloneNode(true)],\n    ]);\n  }\n\n  private destroyDefaultGhost() {\n    this.viewContainerRef.clear();\n    this.draggableSnapshot.discard();\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this.dragHandleRegistrar.defaultHandleEl = this.draggableEl;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.enter();\n        this.dragOn = true;\n        if (!this.customGhost) {\n          this.createDefaultGhost(event);\n        }\n\n        this.dragStartEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        this.dragMoveEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.exit();\n        this.dragOn = false;\n        if (!this.customGhost) {\n          this.destroyDefaultGhost();\n        }\n        this.dragEndEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this.dragEventListener.detachDragListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';\nimport { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';\n\n@Directive({\n  selector: '[clrDroppable]',\n  providers: [DomAdapter],\n  host: { '[class.droppable]': 'true', '[class.draggable-match]': 'isDraggableMatch' },\n})\nexport class ClrDroppable<T> implements OnInit, OnDestroy {\n  private dragStartSubscription: Subscription;\n  private dragMoveSubscription: Subscription;\n  private dragEndSubscription: Subscription;\n\n  private droppableEl: any;\n  private clientRect: ClientRect;\n\n  constructor(\n    private el: ElementRef,\n    private eventBus: DragAndDropEventBusService<T>,\n    private domAdapter: DomAdapter,\n    private renderer: Renderer2\n  ) {\n    this.droppableEl = this.el.nativeElement;\n  }\n\n  isDraggableMatch: boolean = false;\n  private _isDraggableOver: boolean = false;\n\n  set isDraggableOver(value: boolean) {\n    // We need to add/remove this draggable-over class via Renderer2\n    // because isDraggableOver is set outside of NgZone.\n    if (value) {\n      this.renderer.addClass(this.droppableEl, 'draggable-over');\n    } else {\n      this.renderer.removeClass(this.droppableEl, 'draggable-over');\n    }\n    this._isDraggableOver = value;\n  }\n\n  private _group: string | string[];\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this._group = value;\n  }\n\n  private _dropTolerance: ClrDropToleranceInterface = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  private dropToleranceGenerator(top = 0, right = top, bottom = top, left = right): ClrDropToleranceInterface {\n    return { top, right, bottom, left };\n  }\n\n  @Input('clrDropTolerance')\n  set dropTolerance(value: number | string | ClrDropToleranceInterface) {\n    // If user provides an object here and wants to manipulate/update properties individually,\n    // the object must be immutable as we generate new object based user's given object.\n    if (typeof value === 'number') {\n      this._dropTolerance = this.dropToleranceGenerator(value);\n    } else if (typeof value === 'string') {\n      const toleranceValues = value\n        .trim()\n        .split(/\\s+/)\n        .map(tolerance => parseInt(tolerance, 10));\n      this._dropTolerance = this.dropToleranceGenerator(...toleranceValues);\n    } else if (value) {\n      // The value could be passed in as {left: 20, top: 30 }\n      // In this case, the rest of the direction properties should be 0.\n      // That's why we initialize properties with 0 first, then override with user's given value.\n      this._dropTolerance = { ...this.dropToleranceGenerator(0), ...value };\n    }\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragLeave') dragLeaveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnter') dragEnterEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDrop') dropEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  private unsubscribeFrom(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private checkGroupMatch(draggableGroup: string | string[]): boolean {\n    // Both Draggable and Droppable have clrGroup input.\n    // The clrGroup input can be both a string key or array of string keys in Draggable and Droppable.\n\n    // It's not match if Draggable has no defined value assigned to clrGroup, but Droppable has a defined clrGroup.\n    if (!draggableGroup && this._group) {\n      return false;\n    }\n    // The same is true the other way round.\n    if (!this._group && draggableGroup) {\n      return false;\n    }\n\n    // It's match if both Draggable and Droppable have no assigned value for clrGroup.\n    if (!this._group && !draggableGroup) {\n      return true;\n    }\n\n    // It's match if both Draggable and Droppable have simple string keys that are matching.\n    // It's match if Draggable's simple clrGroup key is matching with one of the clrGroup keys of Droppable. The\n    // same is true the other way round.\n    // it's match if one of the clrGroup keys of Droppable is matching with one of the clrGroup keys of Draggable.\n    if (typeof draggableGroup === 'string') {\n      if (typeof this._group === 'string') {\n        return this._group === draggableGroup;\n      } else {\n        return this._group.indexOf(draggableGroup) > -1;\n      }\n    } else {\n      if (typeof this._group === 'string') {\n        return draggableGroup.indexOf(this._group) > -1;\n      } else {\n        return (this._group as string[]).some(groupKey => draggableGroup.indexOf(groupKey) > -1);\n      }\n    }\n  }\n\n  private isInDropArea(point: { pageX: number; pageY: number }): boolean {\n    if (!point) {\n      return false;\n    }\n\n    if (!this.clientRect) {\n      this.clientRect = this.domAdapter.clientRect(this.droppableEl);\n    }\n\n    if (\n      point.pageX >= this.clientRect.left - this._dropTolerance.left &&\n      point.pageX <= this.clientRect.right + this._dropTolerance.right &&\n      point.pageY >= this.clientRect.top - this._dropTolerance.top &&\n      point.pageY <= this.clientRect.bottom + this._dropTolerance.bottom\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private onDragStart(dragStartEvent: DragEventInterface<T>): void {\n    // Check draggable and droppable have a matching group key.\n    this.isDraggableMatch = this.checkGroupMatch(dragStartEvent.group);\n\n    // Subscribe to dragMoved and dragEnded only if draggable and droppable have a matching group key.\n    if (this.isDraggableMatch) {\n      this.dragStartEmitter.emit(new ClrDragEvent(dragStartEvent));\n      this.dragMoveSubscription = this.eventBus.dragMoved.subscribe((dragMoveEvent: DragEventInterface<T>) => {\n        this.onDragMove(dragMoveEvent);\n      });\n      this.dragEndSubscription = this.eventBus.dragEnded.subscribe((dragEndEvent: DragEventInterface<T>) => {\n        this.onDragEnd(dragEndEvent);\n      });\n    }\n  }\n\n  private onDragMove(dragMoveEvent: DragEventInterface<T>): void {\n    const isInDropArea = this.isInDropArea(dragMoveEvent.dropPointPosition);\n    if (!this._isDraggableOver && isInDropArea) {\n      this.isDraggableOver = true;\n      const dragEnterEvent = { ...dragMoveEvent, type: DragEventType.DRAG_ENTER };\n      this.eventBus.broadcast(dragEnterEvent);\n      this.dragEnterEmitter.emit(new ClrDragEvent(dragEnterEvent));\n    } else if (this._isDraggableOver && !isInDropArea) {\n      this.isDraggableOver = false;\n      const dragLeaveEvent = { ...dragMoveEvent, type: DragEventType.DRAG_LEAVE };\n      this.eventBus.broadcast(dragLeaveEvent);\n      this.dragLeaveEmitter.emit(new ClrDragEvent(dragLeaveEvent));\n    }\n\n    this.dragMoveEmitter.emit(new ClrDragEvent(dragMoveEvent));\n  }\n\n  private onDragEnd(dragEndEvent: DragEventInterface<T>): void {\n    if (this._isDraggableOver) {\n      if (dragEndEvent.ghostElement) {\n        // By this point, the draggable ghost component is destroyed,\n        // but the element would be active until its animation completes.\n        // As such, once the ghost is dropped over, we will give it \"dropped\" class.\n\n        // This process cannot be done in the ghost component\n        // because any subscription to the drop event is ineffective or invalid\n        // as the component had been already destroyed.\n        this.renderer.addClass(dragEndEvent.ghostElement, 'dropped');\n      }\n\n      const dropEvent = { ...dragEndEvent, type: DragEventType.DROP };\n      this.eventBus.broadcast(dropEvent);\n      this.dropEmitter.emit(new ClrDragEvent(dropEvent));\n      this.isDraggableOver = false;\n    }\n    this.dragEndEmitter.emit(new ClrDragEvent(dragEndEvent));\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n    this.isDraggableMatch = false;\n    delete this.clientRect;\n  }\n\n  ngOnInit() {\n    this.dragStartSubscription = this.eventBus.dragStarted.subscribe((dragStartEvent: DragEventInterface<T>) => {\n      this.onDragStart(dragStartEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeFrom(this.dragStartSubscription);\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, OnDestroy, Optional } from '@angular/core';\nimport { DragHandleRegistrarService } from './providers/drag-handle-registrar.service';\n\n@Directive({ selector: '[clrDragHandle]', host: { '[class.drag-handle]': 'true' } })\nexport class ClrDragHandle<T> implements OnDestroy {\n  constructor(private el: ElementRef, @Optional() private dragHandleRegistrar: DragHandleRegistrarService<T>) {\n    if (!this.dragHandleRegistrar) {\n      // ClrDragHandleRegistrar is provided in ClrDraggable so we expect it to be present here\n      // as clrDragHandle is required to be used only inside of a clrDraggable directive.\n      throw new Error('The clrDragHandle directive can only be used inside of a clrDraggable directive.');\n    }\n    this.dragHandleRegistrar.registerCustomHandle(this.el.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.dragHandleRegistrar.unregisterCustomHandle();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrDraggable } from './draggable/draggable';\nimport { ClrDroppable } from './droppable/droppable';\nimport { ClrIfDragged } from './if-dragged';\nimport { ClrDragHandle } from './drag-handle';\nimport { ClrDraggableGhost } from './draggable-ghost';\n\nexport const CLR_DRAG_AND_DROP_DIRECTIVES: Type<any>[] = [\n  ClrDraggable,\n  ClrDroppable,\n  ClrIfDragged,\n  ClrDragHandle,\n  ClrDraggableGhost,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DRAG_AND_DROP_DIRECTIVES],\n  entryComponents: [ClrDraggableGhost],\n  exports: [CLR_DRAG_AND_DROP_DIRECTIVES],\n})\nexport class ClrDragAndDropModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\n\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\n\n@Component({\n  selector: 'clr-expandable-animation',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n    :host {\n      display: block;\n    }\n  `,\n  ],\n  animations: [\n    trigger('expandAnimation', [\n      transition('true <=> false', [\n        style({ height: '{{startHeight}}px', overflow: 'hidden' }),\n        animate('0.2s ease-in-out', style({ height: '*' })),\n      ]),\n    ]),\n  ],\n  providers: [DomAdapter],\n})\nexport class ClrExpandableAnimation {\n  @Input() clrExpandTrigger: any;\n\n  startHeight: number = 0;\n\n  constructor(private element: ElementRef, private domAdapter: DomAdapter) {}\n\n  @HostBinding('@expandAnimation')\n  get expandAnimation() {\n    return { value: this.clrExpandTrigger, params: { startHeight: this.startHeight } };\n  }\n\n  @HostListener('@expandAnimation.done')\n  animationDone() {\n    // A \"safe\" auto-update of the height ensuring basic OOTB user experience .\n    // Prone to small jumps in initial animation height if data was changed in the meantime, window was resized, etc.\n    // For optimal behavior call manually updateStartHeight() from the parent component before initiating the update.\n    this.updateStartHeight();\n  }\n\n  updateStartHeight() {\n    this.startHeight = this.domAdapter.computedHeight(this.element.nativeElement) || 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\n\nimport { ClrExpandableAnimation } from './expandable-animation';\n\nexport * from './expandable-animation';\n\nexport const EXPANDABLE_ANIMATION_DIRECTIVES: Type<any>[] = [ClrExpandableAnimation];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EXPANDABLE_ANIMATION_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EXPANDABLE_ANIMATION_DIRECTIVES],\n  exports: [EXPANDABLE_ANIMATION_DIRECTIVES],\n})\nexport class ClrExpandableAnimationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding, ElementRef, AfterViewInit } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-spinner',\n  providers: [ClrAriaLiveService],\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[attr.aria-busy]': 'true',\n  },\n})\nexport class ClrSpinner implements AfterViewInit {\n  constructor(private el: ElementRef, private ariaLiveService: ClrAriaLiveService) {}\n\n  ngAfterViewInit() {\n    this.ariaLiveService.announce(this.el.nativeElement, this.ariaLive);\n  }\n\n  /**\n   * Default class for all spinners. This class is always true\n   */\n  @HostBinding('class.spinner')\n  get spinnerClass() {\n    return true;\n  }\n\n  // Style\n  private _inline: boolean;\n  @HostBinding('class.spinner-inline')\n  get inlineClass() {\n    return this._inline;\n  }\n\n  @Input('clrInline')\n  set clrInline(value: boolean | string) {\n    this._inline = isBooleanAttributeSet(value);\n  }\n\n  private _inverse: boolean;\n  @HostBinding('class.spinner-inverse')\n  get inverseClass() {\n    return this._inverse;\n  }\n\n  @Input('clrInverse')\n  set clrInverse(value: boolean | string) {\n    this._inverse = isBooleanAttributeSet(value);\n  }\n\n  // Size\n  /**\n   * By default all spinners are Large. (spinner-lg)\n   * To change the size you need to use set clrSmall or clrMedium to TRUE/\n   */\n\n  /**\n   * Small\n   */\n  private _small: boolean;\n  @HostBinding('class.spinner-sm')\n  get smallClass() {\n    return this._small;\n  }\n\n  @Input('clrSmall')\n  set clrSmall(value: boolean | string) {\n    this._small = isBooleanAttributeSet(value);\n  }\n\n  /**\n   * When clrSmall & clrMedium are set both to true.\n   * The CSS with high priority will be small - so medium size will be ignored.\n   *\n   * For this reason if clrSmall is set we won't add clrMedium class.\n   *\n   * NOTE: This is dictated by the CSS rules.\n   * DON'T USE clrSmall & clrMedium to toggle classes. This could change without notice.\n   *\n   * Also there is no logical need to have both of them set to TRUE or FALSE.\n   */\n  private _medium: boolean;\n  @HostBinding('class.spinner-md')\n  get mediumClass() {\n    if (this._small) {\n      return false;\n    }\n    return this._medium;\n  }\n\n  @Input('clrMedium')\n  set clrMedium(value: boolean | string) {\n    this._medium = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n\n  /**\n   * By default aria-live will be set to `polite` .\n   * To change is it you need to set clrAssertive or clrOff to TRUE\n   *\n   * There is priority:\n   *   Default: polite\n   *   Asertive\n   *   Off\n   *\n   * In case when for some reason you have clrAssertive=TRUE and clrOff=TRUE,\n   * we gonna set `assertive` as value of aria-live.\n   *\n   */\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrSpinner } from './spinner';\n\nexport const CLR_SPINNER_DIRECTIVES: Type<any>[] = [ClrSpinner];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_SPINNER_DIRECTIVES],\n  exports: [CLR_SPINNER_DIRECTIVES],\n})\nexport class ClrSpinnerModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const FOCUS_ON_VIEW_INIT = new InjectionToken<boolean>('FOCUS_ON_VIEW_INIT');\n\n// This provider holds the default value for clrFocusOnViewInit directive's isEnabled property.\n// So users can interject this provider and set their own value for this provider.\nexport const FOCUS_ON_VIEW_INIT_PROVIDER = {\n  provide: FOCUS_ON_VIEW_INIT,\n  useValue: true,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_ON_VIEW_INIT } from './focus-on-view-init.provider';\n\n/*  This directive is for guiding the document focus to the newly added content when its view is initialized \n    so that assistive technologies can read its content. */\n@Directive({\n  selector: '[clrFocusOnViewInit]',\n})\nexport class ClrFocusOnViewInit implements AfterViewInit {\n  constructor(\n    private el: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(FOCUS_ON_VIEW_INIT) private focusOnViewInit: boolean,\n    @Inject(DOCUMENT) document: any,\n    private renderer: Renderer2\n  ) {\n    this._isEnabled = this.focusOnViewInit;\n\n    // Angular compiler doesn't understand the type Document\n    // when working out the metadata for injectable parameters,\n    // even though it understands the injection token DOCUMENT\n    // https://github.com/angular/angular/issues/20351\n    this.document = document;\n  }\n\n  private document: Document;\n  private directFocus = true; // true if the element gets focused without need to set tabindex;\n\n  @HostListener('focusout')\n  onFocusout() {\n    if (!this.directFocus) {\n      // manually set attributes and styles should be removed\n      this.renderer.removeAttribute(this.el.nativeElement, 'tabindex');\n      this.renderer.setStyle(this.el.nativeElement, 'outline', null);\n    }\n  }\n\n  private _isEnabled: boolean;\n  @Input('clrFocusOnViewInit')\n  set isEnabled(value: boolean) {\n    if (this.focusOnViewInit && typeof value === 'boolean') {\n      this._isEnabled = value;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.focus();\n  }\n\n  private focus() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!this._isEnabled) {\n      return;\n    }\n    if (this.document && this.document.activeElement !== this.el.nativeElement) {\n      this.el.nativeElement.focus();\n      if (this.document.activeElement !== this.el.nativeElement) {\n        // if it's not directly focused now, it means it was a non-interactive element\n        // so we need to give it a tabindex.\n        this.directFocus = false;\n        this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n        this.renderer.setStyle(this.el.nativeElement, 'outline', 'none');\n        this.el.nativeElement.focus();\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrFocusOnViewInit } from './focus-on-view-init';\nimport { FOCUS_ON_VIEW_INIT_PROVIDER } from './focus-on-view-init.provider';\n\nexport const FOCUS_ON_VIEW_INIT_DIRECTIVES: Type<any>[] = [ClrFocusOnViewInit];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n  providers: [FOCUS_ON_VIEW_INIT_PROVIDER],\n  exports: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n})\nexport class ClrFocusOnViewInitModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport abstract class CustomFilter {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * This provider implements some form of synchronous debouncing through a lock pattern\n * to avoid emitting multiple state changes for a single user action.\n */\n@Injectable()\nexport class StateDebouncer {\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  private _change = new Subject<void>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<void> {\n    return this._change.asObservable();\n  }\n\n  /*\n     * This is the lock, to only emit once all the changes have finished processing\n     */\n  private nbChanges = 0;\n\n  public changeStart() {\n    this.nbChanges++;\n  }\n\n  public changeDone() {\n    if (--this.nbChanges === 0) {\n      this._change.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Page {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  private preventEmit = false;\n  public activated = false;\n\n  /**\n   * Page size, a value of 0 means no pagination\n   */\n  private _size = 0;\n  public get size(): number {\n    return this._size;\n  }\n  public set size(size: number) {\n    const oldSize = this._size;\n    if (size !== oldSize) {\n      if (!this.preventEmit) {\n        this.stateDebouncer.changeStart();\n      }\n      this._size = size;\n      if (size === 0) {\n        this._current = 1;\n      } else {\n        // Yeap. That's the formula to keep the first item from the old page still\n        // displayed in the new one.\n        this._current = Math.floor(oldSize / size * (this._current - 1)) + 1;\n      }\n      // We always emit an event even if the current page index didn't change, because\n      // the size changing means the items inside the page are different\n      if (!this.preventEmit) {\n        this._change.next(this._current);\n        this._sizeChange.next(this._size);\n        this.stateDebouncer.changeDone();\n      }\n    }\n    this.preventEmit = false;\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  private _totalItems?: number;\n  public get totalItems(): number {\n    return this._totalItems || 0; // remains 0 if not set to avoid breaking change\n  }\n  public set totalItems(total: number) {\n    this._totalItems = total;\n    // If we have less items than before, we might need to change the current page\n    if (this.current > this.last) {\n      this.current = this.last;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  private _last: number;\n  public get last(): number {\n    if (this._last) {\n      return this._last;\n    }\n    // If the last page isn't known, we compute it from the last item's index\n    if (this.size > 0 && this.totalItems) {\n      return Math.ceil(this.totalItems / this.size);\n    }\n    return 1;\n  }\n  public set last(page: number) {\n    this._last = page;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to page changes\n   */\n  private _change = new Subject<number>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _sizeChange = new Subject<number>();\n\n  public get sizeChange(): Observable<number> {\n    return this._sizeChange.asObservable();\n  }\n\n  /**\n   * Current page\n   */\n  private _current = 1;\n  public get current(): number {\n    return this._current;\n  }\n  public set current(page: number) {\n    if (page !== this._current) {\n      this.stateDebouncer.changeStart();\n      this._current = page;\n      this._change.next(page);\n      this.stateDebouncer.changeDone();\n    }\n  }\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    if (this.current > 1) {\n      this.current--;\n    }\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    if (this.current < this.last) {\n      this.current++;\n    }\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return 0;\n    }\n    return (this.current - 1) * this.size;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return this.totalItems - 1;\n    }\n    let lastInPage = this.current * this.size - 1;\n    if (this.totalItems) {\n      lastInPage = Math.min(lastInPage, this.totalItems - 1);\n    }\n    return lastInPage;\n  }\n\n  /**\n   * Resets the page size to 0\n   */\n  public resetPageSize(preventEmit = false): void {\n    this.preventEmit = preventEmit;\n    this.size = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { Page } from './page';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class FiltersProvider<T = any> {\n  constructor(private _page: Page, private stateDebouncer: StateDebouncer) {}\n  /**\n   * This subject is the list of filters that changed last, not the whole list.\n   * We emit a list rather than just one filter to allow batch changes to several at once.\n   */\n  private _change = new Subject<ClrDatagridFilterInterface<T>[]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<ClrDatagridFilterInterface<T>[]> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * List of all filters, whether they're active or not\n   */\n  private _all: RegisteredFilter<T, ClrDatagridFilterInterface<T>>[] = [];\n\n  /**\n   * Tests if at least one filter is currently active\n   */\n  public hasActiveFilters(): boolean {\n    // We do not use getActiveFilters() because this function will be called much more often\n    // and stopping the loop early might be relevant.\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns a list of all currently active filters\n   */\n  public getActiveFilters(): ClrDatagridFilterInterface<T>[] {\n    const ret: ClrDatagridFilterInterface<T>[] = [];\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        ret.push(filter);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Registers a filter, and returns a deregistration function\n   */\n  public add<F extends ClrDatagridFilterInterface<T>>(filter: F): RegisteredFilter<T, F> {\n    const subscription = filter.changes.subscribe(() => this.resetPageAndEmitFilterChange([filter]));\n    let hasUnregistered = false;\n    const registered = new RegisteredFilter(filter, () => {\n      if (hasUnregistered) {\n        return;\n      }\n      subscription.unsubscribe();\n      const matchIndex = this._all.findIndex(item => item.filter === filter);\n      if (matchIndex >= 0) {\n        this._all.splice(matchIndex, 1);\n      }\n      if (filter.isActive()) {\n        this.resetPageAndEmitFilterChange([]);\n      }\n      hasUnregistered = true;\n    });\n    this._all.push(registered);\n    if (filter.isActive()) {\n      this.resetPageAndEmitFilterChange([filter]);\n    }\n    return registered;\n  }\n\n  /**\n   * Accepts an item if it is accepted by all currently active filters\n   */\n  public accepts(item: T): boolean {\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive() && !filter.accepts(item)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private resetPageAndEmitFilterChange(filters: ClrDatagridFilterInterface<T>[]) {\n    this.stateDebouncer.changeStart();\n    // filtering may change the page number such that current page number doesn't exist in the filtered dataset.\n    // So here we always set the current page to 1 so that it'll fetch first page's data with the given filter.\n    this._page.current = 1;\n    this._change.next(filters);\n    this.stateDebouncer.changeDone();\n  }\n}\n\nexport class RegisteredFilter<T, F extends ClrDatagridFilterInterface<T>> {\n  constructor(public filter: F, public unregister: () => void) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { OnDestroy } from '@angular/core';\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { FiltersProvider, RegisteredFilter } from '../providers/filters';\n\nexport abstract class DatagridFilterRegistrar<T, F extends ClrDatagridFilterInterface<T>> implements OnDestroy {\n  constructor(private filters: FiltersProvider<T>) {}\n\n  public registered: RegisteredFilter<T, F>;\n\n  public get filter(): F {\n    return this.registered && this.registered.filter;\n  }\n\n  public setFilter(filter: F | RegisteredFilter<T, F>) {\n    // If we previously had another filter, we unregister it\n    this.deleteFilter();\n    if (filter instanceof RegisteredFilter) {\n      this.registered = filter;\n    } else if (filter) {\n      this.registered = this.filters.add(filter);\n    }\n  }\n\n  public deleteFilter() {\n    if (this.registered) {\n      this.registered.unregister();\n      delete this.registered;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.deleteFilter();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  Inject,\n  OnDestroy,\n  PLATFORM_ID,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\n\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from './providers/filters';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Custom filter that can be added in any column to override the default object property string filter.\n * The reason this is not just an input on DatagridColumn is because we need the filter's template to be projected,\n * since it can be anything (not just a text input).\n */\n@Component({\n  selector: 'clr-dg-filter',\n  // We register this component as a CustomFilter, for the parent column to detect it.\n  providers: [{ provide: CustomFilter, useExisting: ClrDatagridFilter }, UNIQUE_ID_PROVIDER],\n  template: `\n      <button class=\"datagrid-filter-toggle\"\n              type=\"button\"\n              #anchor\n              [attr.aria-label]=\"commonStrings.keys.datagridFilterAriaLabel\"\n              [attr.aria-expanded]=\"ariaExpanded\"\n              [attr.aria-controls]=\"popoverId\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [class.datagrid-filter-open]=\"open\"\n              [class.datagrid-filtered]=\"active\">\n          <clr-icon [attr.shape]=\"active ? 'filter-grid-circle': 'filter-grid'\" class=\"is-solid\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-filter\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"datagrid-filter-close-wrapper\">\n              <button type=\"button\" class=\"close\" clrPopoverCloseButton>\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridFilter<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements CustomFilter, OnDestroy {\n  private subs: Subscription[] = [];\n  public ariaExpanded: boolean = false;\n\n  constructor(\n    _filters: FiltersProvider<T>,\n    public commonStrings: ClrCommonStringsService,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    super(_filters);\n    this.subs.push(\n      smartToggleService.openChange.subscribe(change => {\n        this.open = change;\n        this.ariaExpanded = change;\n      })\n    );\n  }\n\n  @ViewChild('anchor', { read: ElementRef })\n  anchor: ElementRef;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  @Input('clrDgFilterOpen')\n  public set open(open: boolean) {\n    open = !!open;\n    if (this.open !== open) {\n      this.smartToggleService.open = open;\n      this.openChange.emit(open);\n      if (!open && isPlatformBrowser(this.platformId)) {\n        this.anchor.nativeElement.focus();\n      }\n      // keep track of the state\n      this._open = open;\n    }\n  }\n\n  @Output('clrDgFilterOpenChange') public openChange = new EventEmitter<boolean>(false);\n\n  @Input('clrDgFilter')\n  public set customFilter(filter: ClrDatagridFilterInterface<T> | RegisteredFilter<T, ClrDatagridFilterInterface<T>>) {\n    this.setFilter(filter);\n  }\n\n  /**\n   * Indicates if the filter is currently active\n   */\n  public get active() {\n    return !!this.filter && this.filter.isActive();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Generic accessor for deep object properties\n * that can be specified as simple dot-separated strings.\n */\nexport class NestedProperty<T = any> {\n  private splitProp: string[];\n\n  constructor(private prop: string) {\n    if (prop.indexOf('.') >= 0) {\n      this.splitProp = prop.split('.');\n    }\n  }\n\n  // Safe getter for a deep object property, will not throw an error but return\n  // undefined if one of the intermediate properties is null or undefined.\n  public getPropValue(item: T): any {\n    if (this.splitProp) {\n      let value = item;\n      for (const nestedProp of this.splitProp) {\n        if (value == null || typeof value === 'undefined' || typeof value[nestedProp] === 'undefined') {\n          return undefined;\n        }\n        value = value[nestedProp];\n      }\n      return value;\n    } else {\n      return item[this.prop];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyStringFilter<T = any> implements ClrDatagridStringFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, search: string): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (typeof propValue === 'undefined') {\n      return false;\n    } else if (this.exact) {\n      return ('' + propValue).toLowerCase() === search;\n    } else {\n      return ('' + propValue).toLowerCase().indexOf(search) >= 0;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { DatagridPropertyStringFilter } from './datagrid-property-string-filter';\n\nexport class DatagridStringFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridStringFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<string>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<string> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Raw input value\n   */\n  private _rawValue: string = '';\n  public get value(): string {\n    return this._rawValue;\n  }\n  /**\n   * Input value converted to lowercase\n   */\n  private _lowerCaseValue: string = '';\n  public get lowerCaseValue() {\n    return this._lowerCaseValue;\n  }\n  /**\n   * Common setter for the input value\n   */\n  public set value(value: string) {\n    if (!value) {\n      value = '';\n    }\n    if (value !== this._rawValue) {\n      this._rawValue = value;\n      this._lowerCaseValue = value.toLowerCase().trim();\n      this._changes.next(value);\n    }\n  }\n\n  /**\n   * Indicates if the filter is currently active, meaning the input is not empty\n   */\n  public isActive(): boolean {\n    return !!this.value;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We always test with the lowercase value of the input, to stay case insensitive\n    return this.filterFn.accepts(item, this.lowerCaseValue);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyStringFilter) {\n      return {\n        property: this.filterFn.prop,\n        value: this.value,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridStringFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyStringFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyStringFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.value === this.value\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\n\nimport { DatagridStringFilterImpl } from './datagrid-string-filter-impl';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-string-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridStringFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input #input type=\"text\" name=\"search\" [(ngModel)]=\"value\" class=\"clr-input\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridStringFilter<T = any> extends DatagridFilterRegistrar<T, DatagridStringFilterImpl<T>>\n  implements CustomFilter, AfterViewInit, OnDestroy {\n  private subs: Subscription[] = [];\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    private smartToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  /**\n   * Customizable filter logic based on a search text\n   */\n  @Input('clrDgStringFilter')\n  set customStringFilter(\n    value: ClrDatagridStringFilterInterface<T> | RegisteredFilter<T, DatagridStringFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridStringFilterImpl(value));\n    }\n    if (this.initFilterValue) {\n      this.value = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subs.push(\n      this.smartToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  private initFilterValue: string;\n\n  /**\n   * Common setter for the input value\n   */\n  public get value() {\n    return this.filter.value;\n  }\n  @Input('clrFilterValue')\n  public set value(value: string) {\n    if (this.filter) {\n      if (!value) {\n        value = '';\n      }\n      if (value !== this.filter.value) {\n        this.filter.value = value;\n        this.filterValueChange.emit(value);\n      }\n    } else {\n      this.initFilterValue = value;\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyNumericFilter<T = any> implements ClrDatagridNumericFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, low: number, high: number): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (low !== null && propValue < low) {\n      return false;\n    }\n    if (high !== null && propValue > high) {\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { DatagridPropertyNumericFilter } from './datagrid-property-numeric-filter';\n\nexport class DatagridNumericFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridNumericFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<[number, number]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<[number, number]> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Internal values and accessor\n   */\n  private _low: number = null;\n  private _high: number = null;\n\n  /**\n   * Common setters for the input values, including individual limits and\n   * both at the same time.  Value is singular to make the interface similar\n   * to the built-in string filter.\n   */\n\n  public get value(): [number, number] {\n    return [this._low, this._high];\n  }\n\n  public set value(vals: [number, number]) {\n    const low = vals[0];\n    const high = vals[1];\n    if (low !== this._low || high !== this._high) {\n      this._low = low;\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set low(low: number) {\n    if (low !== this._low) {\n      this._low = low;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set high(high: number) {\n    if (high !== this._high) {\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public get low() {\n    return this._low;\n  }\n\n  public get high() {\n    return this._high;\n  }\n\n  /**\n   * Indicates if the filter is currently active, (at least one input is set)\n   */\n  public isActive(): boolean {\n    return this._low !== null || this.high !== null;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We have a filter function in case someone wants to implement a numeric\n    // filter that always passes nulls or similar\n    return this.filterFn.accepts(item, this._low, this._high);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyNumericFilter) {\n      return {\n        property: this.filterFn.prop,\n        low: this._low,\n        high: this._high,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridNumericFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyNumericFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyNumericFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.low === this._low &&\n          other.high === this._high\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { DatagridNumericFilterImpl } from './datagrid-numeric-filter-impl';\nimport { ClrCommonStringsService } from '../../../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-numeric-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridNumericFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input class=\"datagrid-numeric-filter-input\" #input_low type=\"number\" name=\"low\" [(ngModel)]=\"low\"\n                   [placeholder]=\"commonStrings.keys.minValue\" [attr.aria-label]=\"commonStrings.keys.minValue\" />\n                <span class=\"datagrid-filter-input-spacer\"></span>\n            <input class=\"datagrid-numeric-filter-input\" #input_high type=\"number\" name=\"high\" [(ngModel)]=\"high\"\n                   [placeholder]=\"commonStrings.keys.maxValue\" [attr.aria-label]=\"commonStrings.keys.maxValue\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridNumericFilter<T = any> extends DatagridFilterRegistrar<T, DatagridNumericFilterImpl<T>>\n  implements CustomFilter, AfterViewInit {\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    public commonStrings: ClrCommonStringsService,\n    private popoverToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  /**\n   * Customizable filter logic based on high and low values\n   */\n  @Input('clrDgNumericFilter')\n  set customNumericFilter(\n    value: ClrDatagridNumericFilterInterface<T> | RegisteredFilter<T, DatagridNumericFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridNumericFilterImpl(value));\n    }\n    if (this.initFilterValues) {\n      this.value = this.initFilterValues;\n      // This initFilterValues should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValues;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input_low') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.popoverToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  private initFilterValues: [number, number];\n  /**\n   * Common setter for the input values\n   */\n  public get value() {\n    return [this.filter.low, this.filter.high];\n  }\n\n  @Input('clrFilterValue')\n  public set value(values: [number, number]) {\n    if (this.filter) {\n      if (values && (values[0] !== this.filter.low || values[1] !== this.filter.high)) {\n        if (typeof values[0] === 'number') {\n          this.filter.low = values[0];\n        } else {\n          this.filter.low = null;\n        }\n        if (typeof values[1] === 'number') {\n          this.filter.high = values[1];\n        } else {\n          this.filter.high = null;\n        }\n        this.filterValueChange.emit(values);\n      }\n    } else {\n      this.initFilterValues = values;\n    }\n  }\n\n  public get low() {\n    if (typeof this.filter.low === 'number' && isFinite(this.filter.low)) {\n      return this.filter.low;\n    } else {\n      // There's not a low limit\n      return null;\n    }\n  }\n\n  public get high() {\n    if (typeof this.filter.high === 'number' && isFinite(this.filter.high)) {\n      return this.filter.high;\n    } else {\n      // There's not a high limit\n      return null;\n    }\n  }\n\n  public set low(low: number | string) {\n    if (typeof low === 'number' && low !== this.filter.low) {\n      this.filter.low = low;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof low !== 'number') {\n      this.filter.low = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  public set high(high: number | string) {\n    if (typeof high === 'number' && high !== this.filter.high) {\n      this.filter.high = high;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof high !== 'number') {\n      this.filter.high = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentChecked, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { WillyWonka } from './willy-wonka';\n\nexport abstract class OompaLoompa implements AfterContentChecked, OnDestroy {\n  // FIXME: Request Injector once we move to Angular 4.2+, it'll allow easier refactors\n  constructor(cdr: ChangeDetectorRef, willyWonka: WillyWonka) {\n    this.subscription = willyWonka.chocolate.subscribe(() => {\n      if (this.latestFlavor !== this.flavor) {\n        willyWonka.disableChocolateCheck = true;\n        cdr.detectChanges();\n        willyWonka.disableChocolateCheck = false;\n      }\n    });\n  }\n\n  private subscription: Subscription;\n\n  private latestFlavor: any;\n\n  abstract get flavor(): any;\n\n  ngAfterContentChecked() {\n    this.latestFlavor = this.flavor;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RowActionService {\n  private actionableCount = 0;\n\n  public register() {\n    this.actionableCount++;\n  }\n\n  public unregister() {\n    this.actionableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   */\n  public get hasActionableRow(): boolean {\n    return this.actionableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewChecked } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * After a conversation with the Angular core team, it turns out we don't have much of a choice for our\n * declarative API, we need to fight against change detection and its one-way flow. This is\n * currently the least dirty solution to do what we want.\n *\n * Do not modify or even use this class unless you know exactly what you're doing.\n * It has the potential to trigger change detection loops or kill app performances.\n */\nexport class WillyWonka implements AfterViewChecked {\n  private _chocolate = new Subject<string>();\n\n  public get chocolate(): Observable<string> {\n    return this._chocolate.asObservable();\n  }\n\n  disableChocolateCheck = false;\n\n  ngAfterViewChecked() {\n    if (!this.disableChocolateCheck) {\n      this._chocolate.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-datagrid' })\nexport class DatagridWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { RowActionService } from '../providers/row-action-service';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ActionableOompaLoompa extends OompaLoompa {\n  private rowActions: RowActionService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: DatagridWillyWonka, rowActions: RowActionService) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.rowActions = rowActions;\n  }\n\n  get flavor() {\n    return this.rowActions.hasActionableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class DetailService {\n  private toggleState = false;\n  private _state: BehaviorSubject<boolean | null> = new BehaviorSubject<boolean>(this.toggleState);\n  private cache: any;\n  private _enabled = false;\n  private button: HTMLButtonElement;\n  public id: string;\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  set enabled(state: boolean) {\n    this._enabled = state;\n  }\n\n  public get stateChange(): Observable<boolean | null> {\n    return this._state.asObservable();\n  }\n\n  close() {\n    this.toggleState = false;\n    this._state.next(this.toggleState);\n    if (this.button) {\n      this.button.focus();\n      this.button = null;\n    }\n  }\n\n  open(item: any, button?: HTMLButtonElement) {\n    this.cache = item;\n    this.button = button;\n    this.toggleState = true;\n    this._state.next(this.toggleState);\n  }\n\n  toggle(item: any, button?: HTMLButtonElement) {\n    if (this.isRowOpen(item) || !item) {\n      this.close();\n    } else {\n      this.open(item, button);\n    }\n  }\n\n  get state() {\n    return this.cache;\n  }\n\n  isRowOpen(item: any) {\n    return !!(this.toggleState && this.cache === item);\n  }\n\n  get isOpen() {\n    return this.toggleState === true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DetailService } from './detail.service';\n\n@Injectable()\nexport class ExpandableRowsCount {\n  constructor(private detailService: DetailService) {}\n\n  private expandableCount = 0;\n\n  public register() {\n    this.expandableCount++;\n  }\n\n  public unregister() {\n    this.expandableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   * check if details are on, and disable rows entirely\n   */\n  public get hasExpandableRow(): boolean {\n    return !this.detailService.enabled && this.expandableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ExpandableRowsCount } from '../providers/global-expandable-rows';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ExpandableOompaLoompa extends OompaLoompa {\n  private expandableCount: ExpandableRowsCount;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: DatagridWillyWonka,\n    expandableCount: ExpandableRowsCount\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.expandableCount = expandableCount;\n  }\n\n  get flavor() {\n    return this.expandableCount.hasExpandableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridComparatorInterface } from '../../interfaces/comparator.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyComparator<T = any> implements ClrDatagridComparatorInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  public compare(a: T, b: T): number {\n    let propA = this.nestedProp.getPropValue(a);\n    let propB = this.nestedProp.getPropValue(b);\n\n    if (typeof propA === 'string') {\n      propA = propA.toLowerCase();\n    }\n\n    if (typeof propB === 'string') {\n      propB = propB.toLowerCase();\n    }\n\n    if (typeof propA === 'undefined' || propA === null) {\n      if (typeof propB === 'undefined' || propB === null) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      if (typeof propB === 'undefined' || propB === null) {\n        return -1;\n      } else if (propA < propB) {\n        return -1;\n      } else if (propA > propB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridDisplayMode {\n  DISPLAY,\n  CALCULATE,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridRenderStep {\n  ALIGN_COLUMNS,\n  CALCULATE_MODE_ON,\n  CALCULATE_MODE_OFF,\n  CLEAR_WIDTHS, // Note this is listened to by both cells and columns\n  COMPUTE_COLUMN_WIDTHS,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridComparatorInterface } from '../interfaces/comparator.interface';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Sort<T = any> {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  /**\n   * Currently active comparator\n   */\n  private _comparator: ClrDatagridComparatorInterface<T>;\n  public get comparator(): ClrDatagridComparatorInterface<T> {\n    return this._comparator;\n  }\n  public set comparator(value: ClrDatagridComparatorInterface<T>) {\n    this.stateDebouncer.changeStart();\n    this._comparator = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Ascending order if false, descending if true\n   */\n  private _reverse: boolean = false;\n  public get reverse(): boolean {\n    return this._reverse;\n  }\n  public set reverse(value: boolean) {\n    this.stateDebouncer.changeStart();\n    this._reverse = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to sort changes\n   */\n  private _change = new Subject<Sort<T>>();\n  private emitChange() {\n    this._change.next(this);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<Sort<T>> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Sets a comparator as the current one, or toggles reverse if the comparator is already used. The\n   * optional forceReverse input parameter allows to override that toggling behavior by sorting in\n   * reverse order if `true`.\n   *\n   * @memberof Sort\n   */\n  public toggle(sortBy: ClrDatagridComparatorInterface<T>, forceReverse?: boolean) {\n    this.stateDebouncer.changeStart();\n    // We modify private properties directly, to batch the change event\n    if (this.comparator === sortBy) {\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse || !this._reverse : !this._reverse;\n    } else {\n      this._comparator = sortBy;\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse : false;\n    }\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Clears the current sorting order\n   */\n  public clear() {\n    this.comparator = null;\n  }\n\n  /**\n   * Compares two objects according to the current comparator\n   */\n  public compare(a: T, b: T): number {\n    return (this.reverse ? -1 : 1) * this.comparator.compare(a, b);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-column',\n  template: `\n        <ng-template #columnPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedColumn implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('columnPortal') templateRef: TemplateRef<void>;\n  columnView: EmbeddedViewRef<void>; // the columns projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.columnView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.columnView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewContainerRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DatagridPropertyComparator } from './built-in/comparators/datagrid-property-comparator';\nimport { DatagridPropertyStringFilter } from './built-in/filters/datagrid-property-string-filter';\nimport { DatagridPropertyNumericFilter } from './built-in/filters/datagrid-property-numeric-filter';\nimport { DatagridStringFilterImpl } from './built-in/filters/datagrid-string-filter-impl';\nimport { DatagridNumericFilterImpl } from './built-in/filters/datagrid-numeric-filter-impl';\nimport { ClrDatagridSortOrder } from './enums/sort-order.enum';\nimport { ClrDatagridComparatorInterface } from './interfaces/comparator.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider } from './providers/filters';\nimport { Sort } from './providers/sort';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { WrappedColumn } from './wrapped-column';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-column',\n  template: `\n      <div class=\"datagrid-column-flex\">\n          <button\n            class=\"datagrid-column-title\"\n            [attr.aria-label]=\"commonStrings.keys.sortColumn\"\n            *ngIf=\"sortable\"\n            (click)=\"sort()\"\n            type=\"button\">\n              <ng-container  *ngTemplateOutlet=\"columnTitle\"></ng-container>\n              <clr-icon\n                      *ngIf=\"sortIcon\"\n                      [attr.shape]=\"sortIcon\"\n                      class=\"sort-icon\"></clr-icon>\n          </button>\n          <!-- I'm really not happy with that select since it's not very scalable -->\n          <ng-content select=\"clr-dg-filter, clr-dg-string-filter, clr-dg-numeric-filter\"></ng-content>\n\n          <clr-dg-string-filter\n                  *ngIf=\"field && !customFilter && (colType=='string')\"\n                  [clrDgStringFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-string-filter>\n\n          <clr-dg-numeric-filter\n                  *ngIf=\"field && !customFilter && (colType=='number')\"\n                  [clrDgNumericFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-numeric-filter>\n\n          <ng-template #columnTitle>\n              <ng-content></ng-content>\n          </ng-template>\n\n\n          <span class=\"datagrid-column-title\" *ngIf=\"!sortable\">\n              <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n          </span>\n\n          <clr-dg-column-separator *ngIf=\"showSeparator\"></clr-dg-column-separator>\n      </div>\n    `,\n  providers: [ClrPopoverPositionService, ClrPopoverEventsService, ClrPopoverToggleService],\n  host: {\n    '[class.datagrid-column]': 'true',\n    '[attr.aria-sort]': 'ariaSort',\n    role: 'columnheader',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrDatagridColumn<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements OnDestroy, OnInit {\n  constructor(\n    private _sort: Sort<T>,\n    filters: FiltersProvider<T>,\n    private vcr: ViewContainerRef,\n    private detailService: DetailService,\n    private changeDetectorRef: ChangeDetectorRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(filters);\n    this.subscriptions.push(this.listenForSortingChanges());\n    this.subscriptions.push(this.listenForDetailPaneChanges());\n  }\n\n  public showSeparator = true;\n\n  /**\n   * Subscription to the sort service changes\n   */\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForDetailPaneChanges() {\n    return this.detailService.stateChange.subscribe(state => {\n      if (this.showSeparator !== !state) {\n        this.showSeparator = !state;\n        // Have to manually change because of OnPush\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n\n  private listenForSortingChanges() {\n    return this._sort.change.subscribe(sort => {\n      // Need to manually mark the component to be checked\n      // for both activating and deactivating sorting\n      this.changeDetectorRef.markForCheck();\n      // We're only listening to make sure we emit an event when the column goes from sorted to unsorted\n      if (this.sortOrder !== ClrDatagridSortOrder.UNSORTED && sort.comparator !== this._sortBy) {\n        this._sortOrder = ClrDatagridSortOrder.UNSORTED;\n        this.sortOrderChange.emit(this._sortOrder);\n        // removes the sortIcon when column becomes unsorted\n        this.sortIcon = null;\n      }\n      // deprecated: to be removed - START\n      if (this.sorted && sort.comparator !== this._sortBy) {\n        this._sorted = false;\n        this.sortedChange.emit(false);\n      }\n      // deprecated: to be removed - END\n    });\n  }\n\n  /*\n     * Simple object property shortcut, activates both sorting and filtering\n     * based on native comparison of the specified property on the items.\n     */\n  private _field: string;\n  public get field() {\n    return this._field;\n  }\n\n  /*\n  * What type is this column?  This defaults to STRING, but can also be\n  * set to NUMBER.  Unsupported types default to STRING. Users can set it\n  * via the [clrDgColType] input by setting it to 'string' or 'number'.\n  */\n\n  private _colType: 'string' | 'number' = 'string';\n\n  get colType() {\n    return this._colType;\n  }\n\n  // TODO: We might want to make this an enum in the future\n  @Input('clrDgColType')\n  set colType(value: 'string' | 'number') {\n    this._colType = value;\n    if (!this.customFilter && !this.filter && this._colType && this._field) {\n      this.setupDefaultFilter(this._field, this._colType);\n    }\n  }\n\n  @Input('clrDgField')\n  public set field(field: string) {\n    if (typeof field === 'string') {\n      this._field = field;\n      if (!this.customFilter && this._colType) {\n        this.setupDefaultFilter(this._field, this._colType);\n      }\n      if (!this._sortBy) {\n        this._sortBy = new DatagridPropertyComparator(this._field);\n      }\n    }\n  }\n\n  private setupDefaultFilter(field: string, colType: 'string' | 'number') {\n    if (colType === 'number') {\n      this.setFilter(new DatagridNumericFilterImpl(new DatagridPropertyNumericFilter(field)));\n    } else if (colType === 'string') {\n      this.setFilter(new DatagridStringFilterImpl(new DatagridPropertyStringFilter(field)));\n    }\n    if (this.filter && this.initFilterValue) {\n      this.updateFilterValue = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this field property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  /**\n   * ClrDatagridComparatorInterface to use when sorting the column\n   */\n\n  private _sortBy: ClrDatagridComparatorInterface<T>;\n\n  public get sortBy() {\n    return this._sortBy;\n  }\n\n  @Input('clrDgSortBy')\n  public set sortBy(comparator: ClrDatagridComparatorInterface<T> | string) {\n    if (typeof comparator === 'string') {\n      this._sortBy = new DatagridPropertyComparator(comparator);\n    } else {\n      if (comparator) {\n        this._sortBy = comparator;\n      } else {\n        if (this._field) {\n          this._sortBy = new DatagridPropertyComparator(this._field);\n        } else {\n          delete this._sortBy;\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicates if the column is sortable\n   */\n  public get sortable(): boolean {\n    return !!this._sortBy;\n  }\n\n  // deprecated: to be removed - START\n  /**\n   * Indicates if the column is currently sorted\n   *\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  private _sorted = false;\n  public get sorted() {\n    return this._sorted;\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Input('clrDgSorted')\n  public set sorted(value: boolean) {\n    if (!value && this.sorted) {\n      this._sorted = false;\n      this._sort.clear();\n    } else if (value && !this.sorted) {\n      this.sort();\n    }\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Output('clrDgSortedChange') public sortedChange = new EventEmitter<boolean>();\n\n  // deprecated: to be removed - END\n\n  /**\n   * Indicates how the column is currently sorted\n   */\n  private _sortOrder: ClrDatagridSortOrder = ClrDatagridSortOrder.UNSORTED;\n  public get sortOrder() {\n    return this._sortOrder;\n  }\n\n  @Input('clrDgSortOrder')\n  public set sortOrder(value: ClrDatagridSortOrder) {\n    if (typeof value === 'undefined') {\n      return;\n    }\n\n    // only if the incoming order is different from the current one\n    if (this._sortOrder === value) {\n      return;\n    }\n\n    switch (value) {\n      // the Unsorted case happens when the current state is either Asc or Desc\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        this._sort.clear();\n        break;\n      case ClrDatagridSortOrder.ASC:\n        this.sort(false);\n        break;\n      case ClrDatagridSortOrder.DESC:\n        this.sort(true);\n        break;\n    }\n  }\n\n  public get ariaSort() {\n    switch (this._sortOrder) {\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        return 'none';\n      case ClrDatagridSortOrder.ASC:\n        return 'ascending';\n      case ClrDatagridSortOrder.DESC:\n        return 'descending';\n    }\n  }\n\n  @Output('clrDgSortOrderChange') public sortOrderChange = new EventEmitter<ClrDatagridSortOrder>();\n\n  public sortIcon: string;\n  /**\n   * Sorts the datagrid based on this column\n   */\n  public sort(reverse?: boolean) {\n    if (!this.sortable) {\n      return;\n    }\n\n    this._sort.toggle(this._sortBy, reverse);\n\n    // setting the private variable to not retrigger the setter logic\n    this._sortOrder = this._sort.reverse ? ClrDatagridSortOrder.DESC : ClrDatagridSortOrder.ASC;\n    // Sets the correct icon for current sort order\n    this.sortIcon = this._sortOrder === ClrDatagridSortOrder.DESC ? 'arrow down' : 'arrow';\n    this.sortOrderChange.emit(this._sortOrder);\n\n    // deprecated: to be removed - START\n    this._sorted = true;\n    this.sortedChange.emit(true);\n    // deprecated: to be removed - END\n  }\n\n  /**\n   * A custom filter for this column that can be provided in the projected content\n   */\n  public customFilter = false;\n\n  @ContentChild(CustomFilter)\n  public set projectedFilter(custom: any) {\n    if (custom) {\n      this.deleteFilter();\n      this.customFilter = true;\n    }\n  }\n\n  // This property holds filter value temporarily while this.filter property is not yet registered\n  // When this.filter is registered, this property value would be used update this.filter.value\n  private initFilterValue: string | [number, number];\n\n  public get filterValue() {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      return this.filter.value;\n    }\n  }\n\n  @Input('clrFilterValue')\n  public set updateFilterValue(newValue: string | [number, number]) {\n    if (this.filter) {\n      if (this.filter instanceof DatagridStringFilterImpl) {\n        if (!newValue || typeof newValue !== 'string') {\n          newValue = '';\n        }\n        if (newValue !== this.filter.value) {\n          this.filter.value = newValue;\n        }\n      } else if (this.filter instanceof DatagridNumericFilterImpl) {\n        if (!newValue || !(newValue instanceof Array)) {\n          newValue = [null, null];\n        }\n        if (newValue.length === 2 && (newValue[0] !== this.filter.value[0] || newValue[1] !== this.filter.value[1])) {\n          this.filter.value = newValue;\n        }\n      }\n    } else {\n      this.initFilterValue = newValue;\n    }\n  }\n\n  public set filterValue(newValue: string | [number, number]) {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      this.updateFilterValue = newValue;\n      this.filterValueChange.emit(this.filter.value);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedColumn, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedColumn, this.vcr).columnView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\n\n@Injectable()\nexport class Items<T = any> {\n  constructor(private _filters: FiltersProvider<T>, private _sort: Sort<T>, private _page: Page) {}\n\n  /**\n   * Indicates if the data is currently loading\n   */\n  public loading = false;\n\n  // TODO: Verify that trackBy is registered for the *ngFor case too\n  /**\n   * Tracking function to identify objects. Default is reference equality.\n   */\n  public trackBy: TrackByFunction<T> = (index: number, item: T) => item;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private _filtersSub: Subscription;\n  private _sortSub: Subscription;\n  private _pageSub: Subscription;\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    if (this._filtersSub) {\n      this._filtersSub.unsubscribe();\n    }\n    if (this._sortSub) {\n      this._sortSub.unsubscribe();\n    }\n    if (this._pageSub) {\n      this._pageSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Whether we should use smart items for this datagrid or let the user handle\n   * everything.\n   */\n  private _smart = false;\n  public get smart(): boolean {\n    return this._smart;\n  }\n  public smartenUp() {\n    this._smart = true;\n    /*\n         * These observers trigger a chain of function: filter -> sort -> paginate\n         * An observer up the chain re-triggers all the operations that follow it.\n         */\n    this._filtersSub = this._filters.change.subscribe(() => this._filterItems());\n    this._sortSub = this._sort.change.subscribe(() => {\n      // Special case, if the datagrid went from sorted to unsorted, we have to re-filter\n      // to get the original order back\n      if (!this._sort.comparator) {\n        this._filterItems();\n      } else {\n        this._sortItems();\n      }\n    });\n    this._pageSub = this._page.change.subscribe(() => this._changePage());\n  }\n\n  /**\n   * List of all items in the datagrid\n   */\n  private _all: T[];\n  public get all() {\n    return this._all;\n  }\n  public set all(items: T[]) {\n    this._all = items;\n    this.emitAllChanges(items);\n    if (this.smart) {\n      this._filterItems();\n    } else {\n      this._displayed = items;\n      this.emitChange();\n    }\n  }\n\n  /**\n   * Manually recompute the list of displayed items\n   */\n  public refresh() {\n    if (this.smart) {\n      this._filterItems();\n    }\n  }\n\n  /**\n   * Internal temporary step, which we preserve to avoid re-filtering or re-sorting if not necessary\n   */\n  private _filtered: T[];\n\n  /**\n   * List of items currently displayed\n   */\n  private _displayed: T[] = [];\n  public get displayed(): T[] {\n    // Ideally we could return an immutable array, but we don't have it in Clarity yet.\n    return this._displayed;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to items changes\n   */\n  private _change = new Subject<T[]>();\n  private emitChange() {\n    this._change.next(this.displayed);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[]> {\n    return this._change.asObservable();\n  }\n\n  private _allChanges = new Subject<T[]>();\n  private emitAllChanges(items: T[]): void {\n    this._allChanges.next(items);\n  }\n\n  public get allChanges(): Observable<T[]> {\n    return this._allChanges.asObservable();\n  }\n\n  /**\n   * Checks if we don't have data to process yet, to abort early operations\n   */\n  private get uninitialized() {\n    return !this._all;\n  }\n\n  /**\n   * FiltersProvider items from the raw list\n   */\n  private _filterItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._filters.hasActiveFilters()) {\n      this._filtered = this._all.filter(item => this._filters.accepts(item));\n    } else {\n      // Work on a shallow copy of the array, to not modify the user's model\n      this._filtered = this._all.slice();\n    }\n    this._page.totalItems = this._filtered.length;\n    this._sortItems();\n  }\n\n  /**\n   * Sorts items in the filtered list\n   */\n  private _sortItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._sort.comparator) {\n      this._filtered.sort((a, b) => this._sort.compare(a, b));\n    }\n    this._changePage();\n  }\n\n  /**\n   * Extracts the current page from the sorted list\n   */\n  private _changePage() {\n    // If we know we have pagination but the page size hasn't been set yet, we wait for it.\n    if (this.uninitialized || (this._page.activated && this._page.size === 0)) {\n      return;\n    }\n    if (this._page.size > 0) {\n      this._displayed = this._filtered.slice(this._page.firstItem, this._page.lastItem + 1);\n    } else {\n      this._displayed = this._filtered;\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgForOf, NgForOfContext } from '@angular/common';\nimport {\n  Directive,\n  DoCheck,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Items } from './providers/items';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrDgItems][clrDgItemsOf]',\n})\nexport class ClrDatagridItems<T> implements DoCheck, OnDestroy {\n  private iterableProxy: NgForOf<T>;\n  private _rawItems: T[];\n  private differ: IterableDiffer<T> | null = null;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrDgItemsOf')\n  public set rawItems(items: T[]) {\n    this._rawItems = items ? items : []; // local copy for ngOnChange diffing\n  }\n\n  @Input('clrDgItemsTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    this.iterableProxy.ngForTrackBy = value;\n  }\n\n  constructor(\n    public template: TemplateRef<NgForOfContext<T>>,\n    private differs: IterableDiffers,\n    private items: Items,\n    private vcr: ViewContainerRef\n  ) {\n    items.smartenUp();\n    this.iterableProxy = new NgForOf<T>(this.vcr, this.template, this.differs);\n    this.subscriptions.push(\n      items.change.subscribe(newItems => {\n        this.iterableProxy.ngForOf = newItems;\n        this.iterableProxy.ngDoCheck();\n      })\n    );\n  }\n\n  ngDoCheck() {\n    if (!this.differ) {\n      this.differ = this.differs.find(this._rawItems).create(this.iterableProxy.ngForTrackBy);\n    }\n    if (this.differ) {\n      const changes = this.differ.diff(this._rawItems);\n      if (changes) {\n        // TODO: not very efficient right now,\n        // but premature optimization is the root of all evil.\n        this.items.all = this._rawItems;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { Items } from './providers/items';\n\n@Component({\n  selector: 'clr-dg-placeholder',\n  template: `\n        <div\n            class=\"datagrid-placeholder\"\n            [class.datagrid-empty]=\"emptyDatagrid\">\n                <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n                <ng-content *ngIf=\"emptyDatagrid\"></ng-content>\n        </div>\n    `,\n  host: { '[class.datagrid-placeholder-container]': 'true' },\n})\nexport class ClrDatagridPlaceholder<T = any> {\n  constructor(private items: Items<T>) {}\n\n  /**\n   * Tests if the datagrid is empty, meaning it doesn't contain any items\n   */\n  public get emptyDatagrid() {\n    return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ElementRef, InjectionToken } from '@angular/core';\n\nexport const POPOVER_HOST_ANCHOR = new InjectionToken<ElementRef>('POPOVER_HOST_ANCHOR');\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SignpostFocusManager {\n  private _triggerEl: HTMLElement;\n\n  set triggerEl(value: HTMLElement) {\n    this._triggerEl = value;\n  }\n\n  focusTrigger() {\n    if (this._triggerEl) {\n      this._triggerEl.focus();\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SignpostIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  setId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, HostListener, Inject, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\n\n@Directive({\n  selector: '[clrSignpostTrigger]',\n  host: {\n    class: 'signpost-trigger',\n    '[attr.aria-label]': 'commonStrings.keys.signpostToggle',\n    '[attr.aria-expanded]': 'ariaExpanded',\n    '[attr.aria-controls]': 'ariaControl',\n    '[class.active]': 'isOpen',\n  },\n})\n\n/*********\n *\n * @description\n * A Directive added to the ClrSignpost Trigger button that will call the ClrSignpost.toggle() function to hide/show the\n * ClrSignpostContent.\n *\n */\nexport class ClrSignpostTrigger implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  public ariaExpanded: boolean;\n  public ariaControl: string;\n  public isOpen: boolean;\n\n  private document: Document;\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(DOCUMENT) document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = document;\n  }\n\n  ngOnInit() {\n    this.signpostFocusManager.triggerEl = this.el.nativeElement;\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe((isOpen: boolean) => {\n        this.ariaExpanded = isOpen;\n\n        const prevIsOpen = this.isOpen;\n        this.isOpen = isOpen;\n\n        // openChange fires false on initialization because signpost starts as closed by default\n        // but we shouldn't focus on that initial false value\n        // we should focus back only if it's closed after being opened\n        if (!this.isOpen && prevIsOpen) {\n          this.focusOnClose();\n        }\n      }),\n      this.signpostIdService.id.subscribe(idChange => (this.ariaControl = idChange))\n    );\n  }\n\n  private focusOnClose() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    // we have to set the focus back on the trigger only if the focus is reset back to the body element\n    // if the focus is on another element, we are not allowed to move that focus back to this trigger again.\n    if (!this.isOpen && this.document.activeElement === this.document.body) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  /**********\n   *\n   * @description\n   * click handler for the ClrSignpost trigger button used to hide/show ClrSignpostContent.\n   */\n  @HostListener('click', ['$event'])\n  onSignpostTriggerClick(event: Event): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, ElementRef } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { ClrSignpostTrigger } from './signpost-trigger';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\n\n@Component({\n  selector: 'clr-signpost',\n  template: `\n        <ng-container *ngIf=\"!useCustomTrigger\">\n            <button\n                type=\"button\"\n                class=\"signpost-action btn btn-small btn-link\"\n                clrSignpostTrigger>\n                <clr-icon shape=\"info\" [attr.title]=\"commonStrings.keys.info\"></clr-icon>\n            </button>\n        </ng-container>\n\n        <ng-content></ng-content>\n    `,\n  host: { '[class.signpost]': 'true' },\n  providers: [\n    ClrPopoverToggleService,\n    SignpostFocusManager,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    SignpostIdService,\n  ],\n})\n\n/*********\n *\n * @class ClrSignpost\n *\n * @description\n * Class used to configure and control the state of a ClrSignpost and its associated ClrSignpostContent.\n * It supports the clrPosition with a 'right-middle' default.\n *\n */\nexport class ClrSignpost {\n  constructor(public commonStrings: ClrCommonStringsService) {}\n\n  /**********\n   * @property useCustomTrigger\n   *\n   * @description\n   * Flag used to determine if we need to use the default trigger or a user supplied trigger element.\n   *\n   */\n  public useCustomTrigger: boolean = false;\n\n  /**********\n   * @property signPostTrigger\n   *\n   * @description\n   * Uses ContentChild to check for a user supplied element with the ClrSignpostTrigger on it.\n   *\n   */\n  @ContentChild(ClrSignpostTrigger)\n  set customTrigger(trigger: ClrSignpostTrigger) {\n    this.useCustomTrigger = !!trigger;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-cell',\n  template: `\n        <ng-template #cellPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedCell implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n  @ViewChild('cellPortal') templateRef: TemplateRef<void>;\n  cellView: EmbeddedViewRef<void>; // the cells projected view\n\n  ngAfterViewInit() {\n    this.cellView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.cellView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChildren, Injector, OnInit, QueryList, ViewContainerRef } from '@angular/core';\n\nimport { ClrSignpost } from '../../popover/signpost/signpost';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { WrappedCell } from './wrapped-cell';\n\n@Component({\n  selector: 'clr-dg-cell',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.datagrid-cell]': 'true',\n    '[class.datagrid-signpost-trigger]': 'signpost.length > 0',\n    role: 'gridcell',\n  },\n})\nexport class ClrDatagridCell implements OnInit {\n  /*********\n   * @property signpost\n   *\n   * @description\n   * @ContentChild is used to detect the presence of a Signpost in the projected content.\n   * On the host, we set the .datagrid-signpost-trigger class on the cell when signpost.length is greater than 0.\n   *\n   */\n  @ContentChildren(ClrSignpost) signpost: QueryList<ClrSignpost>;\n\n  constructor(private vcr: ViewContainerRef) {}\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedCell, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedCell, this.vcr).cellView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum SelectionType {\n  None,\n  Single,\n  Multi,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\n@Injectable()\nexport class DatagridRenderOrganizer {\n  protected _renderStep: Subject<DatagridRenderStep> = new Subject<DatagridRenderStep>();\n  public get renderStep(): Observable<DatagridRenderStep> {\n    return this._renderStep.asObservable();\n  }\n\n  public filterRenderSteps(step: DatagridRenderStep) {\n    return this.renderStep.pipe(filter(testStep => step === testStep));\n  }\n\n  private alreadySized = false;\n\n  public resize() {\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_ON);\n    if (this.alreadySized) {\n      this._renderStep.next(DatagridRenderStep.CLEAR_WIDTHS);\n    }\n    this._renderStep.next(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS);\n    this._renderStep.next(DatagridRenderStep.ALIGN_COLUMNS);\n    this.alreadySized = true;\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_OFF);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridDisplayMode } from '../enums/display-mode.enum';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\n@Injectable()\nexport class DisplayModeService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  protected _view: BehaviorSubject<DatagridDisplayMode> = new BehaviorSubject<DatagridDisplayMode>(\n    DatagridDisplayMode.DISPLAY\n  );\n\n  constructor(renderOrganizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_ON)\n        .subscribe(() => this._view.next(DatagridDisplayMode.CALCULATE))\n    );\n\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_OFF)\n        .subscribe(() => this._view.next(DatagridDisplayMode.DISPLAY))\n    );\n  }\n\n  public get view(): Observable<DatagridDisplayMode> {\n    return this._view.asObservable();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Items } from './items';\nimport { SelectionType } from '../enums/selection-type';\n\nlet nbSelection: number = 0;\n\n@Injectable()\nexport class Selection<T = any> {\n  public id: string;\n  public preserveSelection: boolean = false;\n  private prevSelectionRefs: T[] = []; // Refs of selected items\n  private prevSingleSelectionRef: T; // Ref of single selected item\n  private lockedRefs: T[] = []; // Ref of locked items\n\n  constructor(private _items: Items<T>, private _filters: FiltersProvider<T>) {\n    this.id = 'clr-dg-selection' + nbSelection++;\n\n    this.subscriptions.push(\n      this._filters.change.subscribe(() => {\n        if (!this._selectable || this.preserveSelection) {\n          return;\n        }\n        this.clearSelection();\n      })\n    );\n\n    this.subscriptions.push(\n      this._items.allChanges.subscribe(updatedItems => {\n        // Reset the lockedRefs;\n        const updateLockedRef: T[] = [];\n\n        switch (this.selectionType) {\n          case SelectionType.None: {\n            break;\n          }\n\n          case SelectionType.Single: {\n            let newSingle: any;\n            const trackBy: TrackByFunction<T> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the currentSingle has been set before data was loaded, we look up and save the ref from current data set\n            if (this.currentSingle && !this.prevSingleSelectionRef) {\n              if (this._items.all && this._items.trackBy) {\n                const lookup = this._items.all.findIndex(maybe => maybe === this.currentSingle);\n                this.prevSingleSelectionRef = this._items.trackBy(lookup, this.currentSingle);\n              }\n            }\n\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              // If one of the updated items is the previously selectedSingle, set it as the new one\n              if (this.prevSingleSelectionRef === ref) {\n                newSingle = item;\n                selectionUpdated = true;\n              }\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // If we're using smart datagrids, we expect all items to be present in the updatedItems array.\n            // Therefore, we should delete the currentSingle if it used to be defined but doesn't exist anymore.\n            // No explicit \"delete\" is required, since newSingle would be undefined at this point.\n            // Marking it as selectionUpdated here will set currentSingle to undefined below in the setTimeout.\n            if (this._items.smart && !newSingle) {\n              selectionUpdated = true;\n            }\n\n            // TODO: Discussed this with Eudes and this is fine for now.\n            // But we need to figure out a different pattern for the\n            // child triggering the parent change detection problem.\n            // Using setTimeout for now to fix this.\n            setTimeout(() => {\n              if (selectionUpdated) {\n                this.currentSingle = newSingle;\n              }\n            }, 0);\n            break;\n          }\n\n          case SelectionType.Multi: {\n            let leftOver: any[] = this.current.slice();\n            const trackBy: TrackByFunction<any> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the current has been set before data was loaded, we look up and save the ref from current data set\n            if (this.current.length > 0 && this.prevSelectionRefs.length !== this.current.length) {\n              if (this._items.all && this._items.trackBy) {\n                this.prevSelectionRefs = [];\n                this.current.forEach(item => {\n                  const lookup = this._items.all.findIndex(maybe => maybe === item);\n                  this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n                });\n              }\n            }\n\n            // Duplicate loop, when the issue is issue#2342 is revisited keep in mind that\n            // we need to go over every updated item and check to see if there are valid to be\n            // locked or not and update it. When only add items that are found in the lockedRefs back.\n            //\n            // The both loops below that goes over updatedItems could be combined into one.\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // TODO: revisit this when we work on https://github.com/vmware/clarity/issues/2342\n            // currently, the selection is cleared when filter is applied, so the logic inside\n            // the if statement below results in broken behavior.\n            if (leftOver.length > 0) {\n              updatedItems.forEach((item, index) => {\n                const ref = trackBy(index, item);\n                // Look in current selected refs array if item is selected, and update actual value\n                const selectedIndex = this.prevSelectionRefs.indexOf(ref);\n                if (selectedIndex > -1) {\n                  leftOver[selectedIndex] = item;\n                  selectionUpdated = true;\n                }\n              });\n\n              // Filter out any unmatched items if we're using smart datagrids where we expect all items to be\n              // present\n              if (this._items.smart) {\n                leftOver = leftOver.filter(selected => updatedItems.indexOf(selected) > -1);\n                if (this.current.length !== leftOver.length) {\n                  selectionUpdated = true;\n                }\n              }\n\n              // TODO: Discussed this with Eudes and this is fine for now.\n              // But we need to figure out a different pattern for the\n              // child triggering the parent change detection problem.\n              // Using setTimeout for now to fix this.\n              setTimeout(() => {\n                if (selectionUpdated) {\n                  this.current = leftOver;\n                }\n              }, 0);\n            }\n            break;\n          }\n\n          default: {\n            break;\n          }\n        }\n        // Sync locked items\n        this.lockedRefs = updateLockedRef;\n      })\n    );\n  }\n\n  public clearSelection(): void {\n    this.current.length = 0;\n    this.prevSelectionRefs = [];\n    this._currentSingle = null;\n    this.prevSingleSelectionRef = null;\n    this.emitChange();\n  }\n\n  private _selectionType: SelectionType = SelectionType.None;\n  public get selectionType(): SelectionType {\n    return this._selectionType;\n  }\n  public set selectionType(value: SelectionType) {\n    if (value === this.selectionType) {\n      return;\n    }\n    this._selectionType = value;\n    if (value === SelectionType.None) {\n      delete this.current;\n    } else {\n      this.updateCurrent([], false);\n    }\n  }\n\n  /** @deprecated since 2.0, remove in 3.0 */\n  public rowSelectionMode: boolean = false;\n\n  private get _selectable(): boolean {\n    return this._selectionType === SelectionType.Multi || this._selectionType === SelectionType.Single;\n  }\n  /**\n   * Ignore items changes in the same change detection cycle.\n   */\n  // tslint:disable-next-line\n  private debounce: boolean = false;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * The current selection in single selection type\n   */\n  private _currentSingle: T;\n  public get currentSingle(): T {\n    return this._currentSingle;\n  }\n  public set currentSingle(value: T) {\n    if (value === this._currentSingle) {\n      return;\n    }\n\n    this._currentSingle = value;\n    if (this._items.all && this._items.trackBy && value) {\n      const lookup = this._items.all.findIndex(maybe => maybe === value);\n      this.prevSingleSelectionRef = this._items.trackBy(lookup, value);\n    }\n    this.emitChange();\n    // Ignore items changes in the same change detection cycle.\n    // @TODO This can likely be removed!\n    this.debounce = true;\n    setTimeout(() => (this.debounce = false));\n  }\n\n  /**\n   * The current selection\n   */\n  private _current: T[];\n  public get current(): T[] {\n    return this._current;\n  }\n  public set current(value: T[]) {\n    this.updateCurrent(value, true);\n  }\n\n  public updateCurrent(value: T[], emit: boolean) {\n    this._current = value;\n    if (emit) {\n      this.emitChange();\n      // Ignore items changes in the same change detection cycle.\n      // @TODO This can likely be removed!\n      this.debounce = true;\n      setTimeout(() => (this.debounce = false));\n    }\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to selection changes\n   */\n  private _change = new Subject<T[] | T>();\n  private emitChange() {\n    if (this._selectionType === SelectionType.Single) {\n      this._change.next(this.currentSingle);\n    } else if (this._selectionType === SelectionType.Multi) {\n      this._change.next(this.current);\n    }\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[] | T> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Checks if an item is currently selected\n   */\n  public isSelected(item: T): boolean {\n    if (this._selectionType === SelectionType.Single) {\n      return this.currentSingle === item;\n    } else if (this._selectionType === SelectionType.Multi) {\n      return this.current.indexOf(item) >= 0;\n    }\n    return false;\n  }\n\n  /**\n   * Selects an item\n   */\n  private selectItem(item: T): void {\n    this.current.push(item);\n    if (this._items.trackBy) {\n      // Push selected ref onto array\n      const lookup = this._items.all.findIndex(maybe => maybe === item);\n      this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n    }\n  }\n\n  /**\n   * Deselects an item\n   */\n  private deselectItem(indexOfItem: number): void {\n    this.current.splice(indexOfItem, 1);\n    if (this._items.trackBy && indexOfItem < this.prevSelectionRefs.length) {\n      // Keep selected refs array in sync\n      const removedItems = this.prevSelectionRefs.splice(indexOfItem, 1);\n      // locked reference is no longer needed (if any)\n      this.lockedRefs = this.lockedRefs.filter(locked => locked !== removedItems[0]);\n    }\n  }\n\n  /**\n   * Selects or deselects an item\n   */\n  public setSelected(item: T, selected: boolean) {\n    switch (this._selectionType) {\n      case SelectionType.None:\n        break;\n      case SelectionType.Single:\n        // in single selection, set currentSingle method should be used\n        break;\n      case SelectionType.Multi:\n        const index = this.current.indexOf(item);\n        if (index >= 0 && !selected) {\n          this.deselectItem(index);\n          this.emitChange();\n        } else if (index < 0 && selected) {\n          this.selectItem(item);\n          this.emitChange();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Checks if all currently displayed items are selected\n   */\n  public isAllSelected(): boolean {\n    if (this._selectionType !== SelectionType.Multi || !this._items.displayed) {\n      return false;\n    }\n    // make sure to exclude the locked items from the list when counting\n    const displayedItems: T[] = this._items.displayed.filter(item => {\n      return this.isLocked(item) === false;\n    });\n\n    const nbDisplayed = displayedItems.length;\n    if (nbDisplayed < 1) {\n      return false;\n    }\n    const temp: T[] = displayedItems.filter(item => this.current.indexOf(item) > -1);\n    return temp.length === displayedItems.length;\n  }\n\n  private canItBeLocked() {\n    // We depend on the trackBy and all so there are part of the requirment of is item could be locked\n    return this._selectionType !== SelectionType.None;\n  }\n\n  /**\n   * Lock and unlock item\n   */\n  public lockItem(item: T, lock: boolean) {\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(this._items.all.findIndex(maybe => maybe === item), item);\n      if (lock === true) {\n        // Add to lockedRef\n        this.lockedRefs.push(ref);\n      } else {\n        // Remove from lockedRef\n        this.lockedRefs = this.lockedRefs.filter(lockedItem => ref !== lockedItem);\n      }\n    }\n  }\n\n  /**\n   * Check is item locked or not by searcing into lockedRefs for entry\n   */\n  public isLocked(item: T): boolean {\n    /**\n     * The check for selectionType will boost the performence by NOT searching\n     * into the array when there is no need for that.\n     */\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(this._items.all.findIndex(maybe => maybe === item), item);\n      return this.lockedRefs.indexOf(ref) > -1;\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects or deselects all currently displayed items\n   */\n  public toggleAll() {\n    if (this._selectionType === SelectionType.None || this._selectionType === SelectionType.Single) {\n      return;\n    }\n    /**\n     * If every currently displayed item is already selected, we clear them.\n     * If at least one item isn't selected, we select every currently displayed item.\n     */\n    if (this.isAllSelected()) {\n      this._items.displayed.forEach(item => {\n        const currentIndex = this.current.indexOf(item);\n        if (currentIndex > -1 && this.isLocked(item) === false) {\n          this.deselectItem(currentIndex);\n        }\n      });\n    } else {\n      this._items.displayed.forEach(item => {\n        if (this.current.indexOf(item) < 0 && this.isLocked(item) === false) {\n          this.selectItem(item);\n        }\n      });\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridColumnChanges {\n  WIDTH,\n  HIDDEN,\n}\n\nexport const ALL_COLUMN_CHANGES: DatagridColumnChanges[] = Object.keys(DatagridColumnChanges)\n  .map(key => DatagridColumnChanges[key])\n  .filter(key => key === parseInt(key, 10)); // extracts only integer keys\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-row',\n  template: `\n        <ng-template #rowPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedRow implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('rowPortal') templateRef: TemplateRef<void>;\n  rowView: EmbeddedViewRef<void>; // the rows projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.rowView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.rowView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { ClrLoadingState } from '../../utils/loading/loading';\n\n@Injectable()\nexport class DatagridIfExpandService extends IfExpandService {\n  // due to the es5 spec if the set is overridden on base class the getter must also be overridden\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._animate.next();\n      this._expandChange.next(value);\n    }\n  }\n\n  loadingStateChange(state: ClrLoadingState) {\n    super.loadingStateChange(state);\n    if (state !== ClrLoadingState.LOADING) {\n      this._animate.next();\n    }\n  }\n\n  private _replace: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get replace(): Observable<boolean> {\n    return this._replace.asObservable();\n  }\n\n  setReplace(replaceValue: boolean) {\n    this._replace.next(replaceValue);\n  }\n\n  private _animate: Subject<boolean> = new Subject<boolean>();\n  get animate(): Observable<boolean> {\n    return this._animate.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { WrappedRow } from './wrapped-row';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrExpandableAnimation } from '../../utils/animations/expandable-animation/expandable-animation';\nimport { DetailService } from './providers/detail.service';\n\nlet nbRow: number = 0;\n\n@Component({\n  selector: 'clr-dg-row',\n  templateUrl: './datagrid-row.html',\n  host: {\n    '[class.datagrid-row]': 'true',\n    '[class.datagrid-selected]': 'selected',\n    '[attr.aria-owns]': 'id',\n    role: 'rowgroup',\n  },\n  providers: [\n    DatagridIfExpandService,\n    { provide: IfExpandService, useExisting: DatagridIfExpandService },\n    { provide: LoadingListener, useExisting: DatagridIfExpandService },\n  ],\n})\nexport class ClrDatagridRow<T = any> implements AfterContentInit, AfterViewInit {\n  public id: string;\n  public radioId: string;\n  public checkboxId: string;\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ViewChild(ClrExpandableAnimation) expandAnimation: ClrExpandableAnimation;\n\n  /**\n   * Model of the row, to use for selection\n   */\n  @Input('clrDgItem') item: T;\n\n  public replaced;\n\n  public expandAnimationTrigger: boolean = false;\n\n  constructor(\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    public globalExpandable: ExpandableRowsCount,\n    public expand: DatagridIfExpandService,\n    public detailService: DetailService,\n    private displayMode: DisplayModeService,\n    private vcr: ViewContainerRef,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    nbRow++;\n    this.id = 'clr-dg-row' + nbRow;\n    this.radioId = 'clr-dg-row-rd' + nbRow;\n    this.checkboxId = 'clr-dg-row-cb' + nbRow;\n\n    this.subscriptions.push(\n      combineLatest(this.expand.replace, this.expand.expandChange).subscribe(\n        ([expandReplaceValue, expandChangeValue]) => {\n          if (expandReplaceValue && expandChangeValue) {\n            // replaced and expanding\n            this.replaced = true;\n            this.renderer.addClass(this.el.nativeElement, 'datagrid-row-replaced');\n          } else {\n            this.replaced = false;\n            // Handles these cases: not replaced and collapsing & replaced and\n            // collapsing and not replaced and expanding.\n            this.renderer.removeClass(this.el.nativeElement, 'datagrid-row-replaced');\n          }\n        }\n      )\n    );\n  }\n\n  private _selected = false;\n  /**\n   * Indicates if the row is selected\n   */\n  public get selected() {\n    if (this.selection.selectionType === SelectionType.None) {\n      return this._selected;\n    } else {\n      return this.selection.isSelected(this.item);\n    }\n  }\n\n  @Input('clrDgSelected')\n  public set selected(value: boolean) {\n    if (this.selection.selectionType === SelectionType.None) {\n      this._selected = value;\n    } else {\n      this.selection.setSelected(this.item, value);\n    }\n  }\n\n  // By default every item is selectable\n  @Input('clrDgSelectable')\n  public set clrDgSelectable(value: boolean) {\n    this.selection.lockItem(this.item, value === false);\n  }\n\n  public get clrDgSelectable() {\n    return !this.selection.isLocked(this.item);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<boolean>(false);\n\n  public toggle(selected = !this.selected) {\n    if (selected !== this.selected) {\n      this.selected = selected;\n      this.selectedChanged.emit(selected);\n    }\n  }\n\n  public get expanded() {\n    return this.expand.expanded;\n  }\n\n  @Input('clrDgExpanded')\n  public set expanded(value: boolean) {\n    this.expand.expanded = value;\n  }\n\n  @Output('clrDgExpandedChange') expandedChange = new EventEmitter<boolean>(false);\n\n  public toggleExpand() {\n    if (this.expand.expandable) {\n      this.expandAnimation.updateStartHeight();\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  @ViewChild('detailButton') detailButton;\n\n  private _detailOpenLabel = '';\n  @Input()\n  set clrDgDetailOpenLabel(label: string) {\n    this._detailOpenLabel = label;\n  }\n  get clrDgDetailOpenLabel(): string {\n    return this._detailOpenLabel ? this._detailOpenLabel : this.commonStrings.keys.open;\n  }\n  private _detailCloseLabel = '';\n  @Input()\n  set clrDgDetailCloseLabel(label: string) {\n    this._detailCloseLabel = label;\n  }\n  get clrDgDetailCloseLabel(): string {\n    return this._detailCloseLabel ? this._detailCloseLabel : this.commonStrings.keys.close;\n  }\n\n  /*****\n   * property dgCells\n   *\n   * @description\n   * A Query List of the ClrDatagrid cells in this row.\n   *\n   */\n  @ContentChildren(ClrDatagridCell) dgCells: QueryList<ClrDatagridCell>;\n\n  ngAfterContentInit() {\n    this.dgCells.changes.subscribe(() => {\n      this.dgCells.forEach(cell => {\n        this._scrollableCells.insert(cell._view);\n      });\n    });\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.displayMode.view.subscribe(viewChange => {\n        // Listen for view changes and move cells around depending on the current displayType\n        // remove cell views from display view\n        for (let i = this._scrollableCells.length; i > 0; i--) {\n          this._scrollableCells.detach();\n        }\n        // remove cell views from calculated view\n        for (let i = this._calculatedCells.length; i > 0; i--) {\n          this._calculatedCells.detach();\n        }\n        if (viewChange === DatagridDisplayMode.CALCULATE) {\n          this.displayCells = false;\n          this.dgCells.forEach(cell => {\n            this._calculatedCells.insert(cell._view);\n          });\n        } else {\n          this.displayCells = true;\n          this.dgCells.forEach(cell => {\n            this._scrollableCells.insert(cell._view);\n          });\n        }\n      }),\n      this.expand.animate.subscribe(() => {\n        this.expandAnimationTrigger = !this.expandAnimationTrigger;\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  public displayCells = false;\n\n  @ViewChild('stickyCells', { read: ViewContainerRef })\n  _stickyCells: ViewContainerRef;\n  @ViewChild('scrollableCells', { read: ViewContainerRef })\n  _scrollableCells: ViewContainerRef;\n  @ViewChild('calculatedCells', { read: ViewContainerRef })\n  _calculatedCells: ViewContainerRef;\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedRow, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedRow, this.vcr).rowView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DatagridPropertyComparator } from '../built-in/comparators/datagrid-property-comparator';\nimport { ClrDatagridStateInterface } from '../interfaces/state.interface';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n/**\n * This provider aggregates state changes from the various providers of the Datagrid\n */\n@Injectable()\nexport class StateProvider<T> {\n  constructor(\n    private filters: FiltersProvider<T>,\n    private sort: Sort<T>,\n    private page: Page,\n    private debouncer: StateDebouncer\n  ) {}\n\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  change: Observable<ClrDatagridStateInterface<T>> = this.debouncer.change.pipe(map(() => this.state));\n\n  /*\n     * By making this a getter, we open the possibility for a setter in the future.\n     * It's been requested a couple times.\n     */\n  get state(): ClrDatagridStateInterface<T> {\n    const state: ClrDatagridStateInterface<T> = {};\n    if (this.page.size > 0) {\n      state.page = {\n        from: this.page.firstItem,\n        to: this.page.lastItem,\n        size: this.page.size,\n        current: this.page.current,\n      };\n    }\n    if (this.sort.comparator) {\n      if (this.sort.comparator instanceof DatagridPropertyComparator) {\n        /*\n                 * Special case for the default object property comparator,\n                 * we give the property name instead of the actual comparator.\n                 */\n        state.sort = { by: (<DatagridPropertyComparator<T>>this.sort.comparator).prop, reverse: this.sort.reverse };\n      } else {\n        state.sort = { by: this.sort.comparator, reverse: this.sort.reverse };\n      }\n    }\n\n    const activeFilters = this.filters.getActiveFilters();\n    if (activeFilters.length > 0) {\n      state.filters = [];\n      for (const filter of activeFilters) {\n        if (filter.state) {\n          state.filters.push(filter.state);\n        } else {\n          state.filters.push(filter);\n        }\n      }\n    }\n    return state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n/**\n * @description\n * Internal datagrid service that holds a reference to the clr-dg-table element and exposes a method to get height.\n */\n@Injectable()\nexport class TableSizeService {\n  private _tableRef: HTMLElement;\n\n  public get tableRef(): HTMLElement {\n    return this._tableRef;\n  }\n\n  public set tableRef(element: HTMLElement) {\n    this._tableRef = element;\n  }\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n  public set table(table: ElementRef) {\n    if (isPlatformBrowser(this.platformId) && table.nativeElement) {\n      this.tableRef = table.nativeElement.querySelector('.datagrid-table');\n    }\n  }\n\n  // Used when resizing columns to show the column border being dragged.\n  getColumnDragHeight(): string {\n    if (!this.tableRef) {\n      return;\n    }\n    return `${this.tableRef.clientHeight}px`;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnStateDiff, ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES } from '../enums/column-changes.enum';\n\n@Injectable()\nexport class ColumnsService {\n  columns: BehaviorSubject<ColumnState>[] = [];\n  private _cache: ColumnState[] = [];\n\n  cache() {\n    this._cache = this.columns.map(subject => {\n      const value = { ...subject.value };\n      delete value.changes;\n      return value;\n    });\n  }\n\n  hasCache() {\n    return !!this._cache.length;\n  }\n\n  resetToLastCache() {\n    this._cache.forEach((state, index) => {\n      // Just emit the exact value from the cache\n      this.columns[index].next({ ...state, changes: ALL_COLUMN_CHANGES });\n    });\n    this._cache = [];\n  }\n\n  get columnStates(): ColumnState[] {\n    return this.columns.map(column => column.value);\n  }\n\n  get hasHideableColumns(): boolean {\n    return this.columnStates.filter(state => state.hideable).length > 0;\n  }\n\n  // Helper method to emit a change to a column only when there is an actual diff to process for that column\n  emitStateChangeAt(columnIndex: number, diff: ColumnStateDiff) {\n    if (!this.columns[columnIndex]) {\n      return;\n    }\n    this.emitStateChange(this.columns[columnIndex], diff);\n  }\n\n  emitStateChange(column: BehaviorSubject<ColumnState>, diff: ColumnStateDiff) {\n    column.next({ ...column.value, ...diff });\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { ClrDatagridStateInterface } from './interfaces/state.interface';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { FiltersProvider } from './providers/filters';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { Items } from './providers/items';\nimport { Page } from './providers/page';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { Sort } from './providers/sort';\nimport { StateDebouncer } from './providers/state-debouncer.provider';\nimport { StateProvider } from './providers/state.provider';\nimport { TableSizeService } from './providers/table-size.service';\nimport { DatagridRenderOrganizer } from './render/render-organizer';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-datagrid',\n  templateUrl: './datagrid.html',\n  providers: [\n    Selection,\n    Sort,\n    FiltersProvider,\n    Page,\n    Items,\n    DatagridRenderOrganizer,\n    RowActionService,\n    ExpandableRowsCount,\n    StateDebouncer,\n    DetailService,\n    UNIQUE_ID_PROVIDER,\n    StateProvider,\n    TableSizeService,\n    ColumnsService,\n    DisplayModeService,\n  ],\n  host: {\n    '[class.datagrid-host]': 'true',\n    '[class.datagrid-detail-open]': 'detailService.isOpen',\n  },\n})\nexport class ClrDatagrid<T = any> implements AfterContentInit, AfterViewInit, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    public items: Items<T>,\n    public expandableRows: ExpandableRowsCount,\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    private stateProvider: StateProvider<T>,\n    private displayMode: DisplayModeService,\n    private renderer: Renderer2,\n    public detailService: DetailService,\n    @Inject(UNIQUE_ID) datagridId: string,\n    private el: ElementRef,\n    private page: Page,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this.detailService.id = datagridId;\n  }\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  /**\n   * Freezes the datagrid while data is loading\n   */\n  public get loading(): boolean {\n    return this.items.loading;\n  }\n\n  @Input('clrDgLoading')\n  public set loading(value: boolean) {\n    this.items.loading = value;\n  }\n\n  /**\n   * Output emitted whenever the data needs to be refreshed, based on user action or external ones\n   */\n  @Output('clrDgRefresh') public refresh = new EventEmitter<ClrDatagridStateInterface<T>>(false);\n\n  /**\n   * Public method to re-trigger the computation of displayed items manually\n   */\n  public dataChanged() {\n    this.items.refresh();\n  }\n\n  /**\n   * We grab the smart iterator from projected content\n   */\n  @ContentChild(ClrDatagridItems) public iterator: ClrDatagridItems<T>;\n\n  /**\n   * Array of all selected items\n   */\n  @Input('clrDgSelected')\n  set selected(value: T[]) {\n    if (value) {\n      this.selection.selectionType = SelectionType.Multi;\n    } else {\n      this.selection.selectionType = SelectionType.None;\n    }\n    this.selection.updateCurrent(value, false);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<T[]>(false);\n\n  /**\n   * Selected item in single-select mode\n   */\n  @Input('clrDgSingleSelected')\n  set singleSelected(value: T) {\n    this.selection.selectionType = SelectionType.Single;\n    // the clrDgSingleSelected is updated in one of two cases:\n    // 1. an explicit value is passed\n    // 2. is being set to null or undefined, where previously it had a value\n    if (value) {\n      this.selection.currentSingle = value;\n    } else if (this.selection.currentSingle) {\n      this.selection.currentSingle = null;\n    }\n  }\n\n  @Output('clrDgSingleSelectedChange') singleSelectedChanged = new EventEmitter<T>(false);\n\n  @Input() clrDgSingleSelectionAriaLabel: string = this.commonStrings.keys.singleSelectionAriaLabel;\n  @Input() clrDgSingleActionableAriaLabel: string = this.commonStrings.keys.singleActionableAriaLabel;\n  @Input() clrDetailExpandableAriaLabel: string = this.commonStrings.keys.detailExpandableAriaLabel;\n\n  @Input()\n  set clrDgPreserveSelection(state: boolean) {\n    this.selection.preserveSelection = state;\n  }\n  /**\n   * @deprecated since 2.0, remove in 3.0\n   *\n   * Selection/Deselection on row click mode\n   */\n  @Input('clrDgRowSelection')\n  set rowSelectionMode(value: boolean) {\n    this.selection.rowSelectionMode = value;\n  }\n\n  /**\n   * Indicates if all currently displayed items are selected\n   */\n  public get allSelected() {\n    return this.selection.isAllSelected();\n  }\n\n  /**\n   * Selects/deselects all currently displayed items\n   * @param value\n   */\n  public set allSelected(value: boolean) {\n    /**\n     * This is a setter but we ignore the value.\n     * It's strange, but it lets us have an indeterminate state where only\n     * some of the items are selected.\n     */\n    this.selection.toggleAll();\n  }\n\n  /**\n   * Custom placeholder detection\n   */\n  @ContentChild(ClrDatagridPlaceholder) public placeholder: ClrDatagridPlaceholder<T>;\n\n  /**\n   * Hideable Column data source / detection.\n   */\n  @ContentChildren(ClrDatagridColumn) public columns: QueryList<ClrDatagridColumn<T>>;\n\n  /**\n   * When the datagrid is user-managed without the smart iterator, we get the items displayed\n   * by querying the projected content. This is needed to keep track of the models currently\n   * displayed, typically for selection.\n   */\n\n  @ContentChildren(ClrDatagridRow) rows: QueryList<ClrDatagridRow<T>>;\n  @ViewChild('scrollableColumns', { read: ViewContainerRef })\n  scrollableColumns: ViewContainerRef;\n\n  @ViewChild('datagridTable', { read: ElementRef })\n  datagridTable: ElementRef;\n\n  ngAfterContentInit() {\n    if (!this.items.smart) {\n      this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n    }\n\n    this._subscriptions.push(\n      this.rows.changes.subscribe(() => {\n        if (!this.items.smart) {\n          this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n        }\n        this.rows.forEach(row => {\n          this._displayedRows.insert(row._view);\n        });\n      })\n    );\n  }\n\n  /**\n   * Our setup happens in the view of some of our components, so we wait for it to be done before starting\n   */\n  ngAfterViewInit() {\n    // TODO: determine if we can get rid of provider wiring in view init so that subscriptions can be done earlier\n    this.refresh.emit(this.stateProvider.state);\n    this._subscriptions.push(\n      this.stateProvider.change.subscribe(state => this.refresh.emit(state)),\n      this.selection.change.subscribe(s => {\n        if (this.selection.selectionType === SelectionType.Single) {\n          this.singleSelectedChanged.emit(<T>s);\n        } else if (this.selection.selectionType === SelectionType.Multi) {\n          this.selectedChanged.emit(<T[]>s);\n        }\n      }),\n      this.page.change.subscribe(() => {\n        this.datagridTable.nativeElement.focus();\n      }),\n      // A subscription that listens for displayMode changes on the datagrid\n      this.displayMode.view.subscribe(viewChange => {\n        // Remove any projected columns from the projectedDisplayColumns container\n        for (let i = this._projectedDisplayColumns.length; i > 0; i--) {\n          this._projectedDisplayColumns.detach();\n        }\n        // Remove any projected columns from the projectedCalculationColumns container\n        for (let i = this._projectedCalculationColumns.length; i > 0; i--) {\n          this._projectedCalculationColumns.detach();\n        }\n        // Remove any projected rows from the calculationRows container\n        for (let i = this._calculationRows.length; i > 0; i--) {\n          this._calculationRows.detach();\n        }\n        // Remove any projected rows from the displayedRows container\n        for (let i = this._displayedRows.length; i > 0; i--) {\n          this._displayedRows.detach();\n        }\n        if (viewChange === DatagridDisplayMode.DISPLAY) {\n          // Set state, style for the datagrid to DISPLAY and insert row & columns into containers\n          this.renderer.removeClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedDisplayColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._displayedRows.insert(row._view);\n          });\n        } else {\n          // Set state, style for the datagrid to CALCULATE and insert row & columns into containers\n          this.renderer.addClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedCalculationColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._calculationRows.insert(row._view);\n          });\n        }\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  resize(): void {\n    this.organizer.resize();\n  }\n\n  @ViewChild('projectedDisplayColumns', { read: ViewContainerRef })\n  _projectedDisplayColumns: ViewContainerRef;\n  @ViewChild('projectedCalculationColumns', { read: ViewContainerRef })\n  _projectedCalculationColumns: ViewContainerRef;\n  @ViewChild('displayedRows', { read: ViewContainerRef })\n  _displayedRows: ViewContainerRef;\n  @ViewChild('calculationRows', { read: ViewContainerRef })\n  _calculationRows: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-action-bar',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: { '[class.datagrid-action-bar]': 'true' },\n})\nexport class ClrDatagridActionBar {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Inject, Input, OnDestroy, Output, NgZone, PLATFORM_ID } from '@angular/core';\n\nimport { RowActionService } from './providers/row-action-service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { Subscription } from 'rxjs';\n\nlet clrDgActionId = 0;\n\n@Component({\n  selector: 'clr-dg-action-overflow',\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverToggleService, ClrPopoverEventsService, ClrPopoverPositionService],\n  template: `\n      <button class=\"datagrid-action-toggle\"\n              type=\"button\"\n              role=\"button\"\n              aria-haspopup=\"true\"\n              #anchor\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-expanded]=\"open\"\n              [attr.aria-label]=\"commonStrings.keys.rowActions\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton>\n          <clr-icon shape=\"ellipsis-vertical\" [attr.title]=\"commonStrings.keys.rowActions\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-action-overflow\"\n           role=\"menu\"\n           [id]=\"popoverId\"\n           [attr.aria-hidden]=\"!open\"\n           [attr.id]=\"popoverId\"\n           clrFocusTrap\n           (click)=\"closeOverflowContent($event)\"\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridActionOverflow implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.CENTER,\n  };\n\n  constructor(\n    private rowActionService: RowActionService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    this.rowActionService.register();\n    this.subscriptions.push(\n      this.smartToggleService.openChange.subscribe(openState => {\n        this.open = openState;\n        if (openState) {\n          this.focusFirstButton();\n        }\n      })\n    );\n    this.popoverId = 'clr-action-menu' + clrDgActionId++;\n  }\n\n  ngOnDestroy() {\n    this.rowActionService.unregister();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  closeOverflowContent(event): void {\n    this.smartToggleService.toggleWithEvent(event);\n  }\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  private focusFirstButton(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          const firstButton: HTMLButtonElement = document.querySelector('button.action-item');\n          if (firstButton) {\n            firstButton.focus();\n          }\n        });\n      });\n    }\n  }\n\n  @Input('clrDgActionOverflowOpen')\n  public set open(open: boolean) {\n    const openState = !!open;\n    if (!!openState !== this.open) {\n      // prevents chocolate mess\n      this.smartToggleService.open = openState;\n      this.openChange.emit(openState);\n      this._open = openState;\n    }\n  }\n\n  @Output('clrDgActionOverflowOpenChange') public openChange = new EventEmitter<boolean>(false);\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ElementRef, Injectable } from '@angular/core';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../../../utils/drag-and-drop/drag-event';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\nconst MIN_COLUMN_WIDTH = 96;\n\n// This service allows DatagridHeaderRenderer and ClrDatagridColumnSeparator\n// to share column resize data with each other.\n\n@Injectable()\nexport class ColumnResizerService {\n  constructor(private el: ElementRef, private domAdapter: DomAdapter, private organizer: DatagridRenderOrganizer) {}\n\n  private widthBeforeResize: number;\n\n  private _resizedBy: number = 0;\n\n  public get resizedBy() {\n    return this._resizedBy;\n  }\n\n  // is it within the maximum resize range to the left\n  public isWithinMaxResizeRange: boolean;\n\n  public get minColumnWidth() {\n    return this.domAdapter.minWidth(this.el.nativeElement) || MIN_COLUMN_WIDTH;\n  }\n\n  public get maxResizeRange() {\n    return this.widthBeforeResize - this.minColumnWidth;\n  }\n\n  public startResize(): void {\n    this._resizedBy = 0;\n    this.isWithinMaxResizeRange = true;\n    this.widthBeforeResize = this.domAdapter.clientRect(this.el.nativeElement).width;\n  }\n\n  public endResize(): void {\n    this.organizer.resize();\n  }\n\n  public get widthAfterResize(): number {\n    return this.widthBeforeResize + this._resizedBy;\n  }\n\n  public calculateResize(event: ClrDragEvent<any>): void {\n    const moveX = event.dragPosition.moveX;\n    // returns the resize amount within the allowed range\n    if (moveX < -this.maxResizeRange) {\n      this._resizedBy = -this.maxResizeRange;\n      this.isWithinMaxResizeRange = false;\n    } else {\n      this._resizedBy = moveX;\n      this.isWithinMaxResizeRange = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Renderer2 } from '@angular/core';\n\nimport { ClrDragEvent } from '../../utils/drag-and-drop/drag-event';\nimport { ColumnResizerService } from './providers/column-resizer.service';\nimport { TableSizeService } from './providers/table-size.service';\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-dg-column-separator',\n  template: `\n    <div class=\"datagrid-column-handle\" aria-hidden=\"true\"\n      clrDraggable \n      [clrGroup]=\"columnSeparatorId\" \n      (clrDragStart)=\"showTracker(resizeTrackerEl)\" \n      (clrDragMove)=\"moveTracker($event, resizeTrackerEl)\" \n      (clrDragEnd)=\"hideTracker(resizeTrackerEl)\"></div>\n    <div class=\"datagrid-column-resize-tracker\" #resizeTrackerEl></div>\n    `,\n  host: {\n    '[class.datagrid-column-separator]': 'true',\n  },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrDatagridColumnSeparator {\n  // Every column draggable separator should have its own unique ID\n  // in order to not conflict with other draggables/droppables.\n  constructor(\n    private columnResizerService: ColumnResizerService,\n    private renderer: Renderer2,\n    private tableSizeService: TableSizeService,\n    @Inject(DOCUMENT) private document: any,\n    @Inject(UNIQUE_ID) public columnSeparatorId: string\n  ) {}\n\n  public showTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.startResize();\n    const tableHeight = this.tableSizeService.getColumnDragHeight();\n    this.renderer.setStyle(resizeTrackerEl, 'height', tableHeight);\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'block');\n  }\n\n  public moveTracker(event: ClrDragEvent<any>, resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.calculateResize(event);\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(${this.columnResizerService.resizedBy}px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'col-resize');\n    this.redFlagTracker(resizeTrackerEl);\n  }\n\n  public hideTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.endResize();\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'none');\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(0px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'auto');\n  }\n\n  private redFlagTracker(resizeTrackerEl: HTMLElement) {\n    let isWithinMaxResizeRange: boolean;\n    // @TODO(JEREMY) Review this, it will always be true because above is always null\n    if (isWithinMaxResizeRange !== this.columnResizerService.isWithinMaxResizeRange) {\n      isWithinMaxResizeRange = this.columnResizerService.isWithinMaxResizeRange;\n      if (!isWithinMaxResizeRange) {\n        this.renderer.addClass(resizeTrackerEl, 'exceeded-max');\n      } else {\n        this.renderer.removeClass(resizeTrackerEl, 'exceeded-max');\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-column-toggle-title',\n  template: `<ng-content></ng-content>`,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\n\n@Component({\n  selector: 'clr-dg-column-toggle-button',\n  template: `\n    <button class=\"btn btn-sm btn-link switch-button\"\n            (click)=\"selectAll()\"\n            [disabled]=\"allHideablesVisible\"\n            type=\"button\">\n      <ng-content></ng-content>\n    </button>\n  `,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleButton {\n  constructor(private columnsService: ColumnsService) {}\n\n  private allSelected: Subject<boolean> = new EventEmitter();\n\n  @Output('clrAllSelected')\n  get clrAllSelected(): Observable<boolean> {\n    return this.allSelected.asObservable();\n  }\n\n  private hideableColumns(): BehaviorSubject<ColumnState>[] {\n    return this.columnsService.columns.filter(column => column.value.hideable);\n  }\n\n  get allHideablesVisible() {\n    return this.hideableColumns().filter(column => column.value.hidden).length === 0;\n  }\n\n  selectAll() {\n    this.hideableColumns().forEach(hideableColumn =>\n      this.columnsService.emitStateChange(hideableColumn, {\n        hidden: false,\n        changes: [DatagridColumnChanges.HIDDEN],\n      })\n    );\n    this.allSelected.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Inject, ContentChild, ElementRef, NgZone, PLATFORM_ID, ViewChild } from '@angular/core';\n\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\n\n@Component({\n  selector: 'clr-dg-column-toggle',\n  template: `    \n      <button\n              role=\"button\"\n              type=\"button\"\n              class=\"btn btn-sm btn-link column-toggle--action\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-owns]=\"popoverId\">\n          <clr-icon shape=\"view-columns\" [attr.title]=\"commonStrings.keys.pickColumns\"></clr-icon>\n      </button>\n      <div class=\"column-switch\"\n           role=\"dialog\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"openState at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"switch-header\">\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #menuDescription>{{commonStrings.keys.showColumnsMenuDescription}}</div>\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #allSelected>{{commonStrings.keys.allColumnsSelected}}</div>\n              <ng-container *ngIf=\"!customToggleTitle\">{{commonStrings.keys.showColumns}}</ng-container>\n              <ng-content select=\"clr-dg-column-toggle-title\"></ng-content>\n              <button class=\"btn btn-sm btn-link toggle-switch-close-button\"\n                      clrPopoverCloseButton\n                      type=\"button\"\n                      [attr.aria-label]=\"commonStrings.keys.close\">\n                  <clr-icon shape=\"close\" \n                            [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n          <ul class=\"switch-content list-unstyled\">\n              <li *ngFor=\"let columnState of hideableColumnStates;trackBy: trackByFn\">\n                  <clr-checkbox-wrapper>\n                      <input clrCheckbox type=\"checkbox\"\n                             [disabled]=\"hasOnlyOneVisibleColumn && !columnState.hidden\"\n                             [ngModel]=\"!columnState.hidden\"\n                             (ngModelChange)=\"toggleColumnState(columnState, !$event)\">\n                      <label>\n                          <ng-template [ngTemplateOutlet]=\"columnState.titleTemplateRef\"></ng-template>\n                      </label>\n                  </clr-checkbox-wrapper>\n              </li>\n          </ul>\n          <div class=\"switch-footer\">\n              <ng-content select=\"clr-dg-column-toggle-button\"></ng-content>\n              <clr-dg-column-toggle-button *ngIf=\"!customToggleButton\" (clrAllSelected)=\"allColumnsSelected()\">\n                  {{commonStrings.keys.selectAll}}\n              </clr-dg-column-toggle-button>\n          </div>\n      </div>\n  `,\n  host: { '[class.column-switch-wrapper]': 'true', '[class.active]': 'openState' },\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverEventsService, ClrPopoverPositionService, ClrPopoverToggleService],\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggle {\n  private _allColumnsVisible: boolean;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n  public openState;\n\n  @ContentChild(ClrDatagridColumnToggleTitle) customToggleTitle: ClrDatagridColumnToggleTitle;\n  @ContentChild(ClrDatagridColumnToggleButton) customToggleButton: ClrDatagridColumnToggleButton;\n  @ViewChild('menuDescription', { read: ElementRef })\n  private menuDescriptionElement: ElementRef<HTMLElement>;\n  @ViewChild('allSelected', { read: ElementRef })\n  private allSelectedElement: ElementRef<HTMLElement>;\n\n  public get allColumnsVisible(): boolean {\n    return this._allColumnsVisible;\n  }\n\n  public set allColumnsVisible(value: boolean) {\n    this._allColumnsVisible = value;\n  }\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private columnsService: ColumnsService,\n    @Inject(UNIQUE_ID) public columnSwitchId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {}\n\n  get hideableColumnStates(): ColumnState[] {\n    const hideables = this.columnsService.columns.filter(column => column.value.hideable);\n    return hideables.map(column => column.value);\n  }\n\n  get hasOnlyOneVisibleColumn(): boolean {\n    const nbNonHideableColumns = this.columnsService.columns.length - this.hideableColumnStates.length;\n    // this should only return true when there is no non-hideable columns.\n    return (\n      nbNonHideableColumns === 0 && this.hideableColumnStates.filter(columnState => !columnState.hidden).length === 1\n    );\n  }\n\n  toggleColumnState(columnState: ColumnState, event: boolean) {\n    const columnToToggle = this.columnsService.columns.filter(column => column.value === columnState)[0];\n    this.columnsService.emitStateChange(columnToToggle, {\n      hidden: event,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  toggleSwitchPanel() {\n    this.openState = !this.openState;\n    if (this.openState && isPlatformBrowser(this.platformId) && this.menuDescriptionElement) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.menuDescriptionElement.nativeElement.focus();\n        });\n      });\n    }\n  }\n\n  allColumnsSelected() {\n    this.allSelectedElement.nativeElement.focus();\n  }\n\n  // Without tracking the checkboxes get rerendered on model update, which leads\n  // to loss of focus after checkbox toggle.\n  trackByFn(index) {\n    return index;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Optional } from '@angular/core';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\n\n/*\n * I don't think this deserves to be in IfExpanded itself,\n * so I'm adding a second directive on the same selector for now just for the datagrid\n */\n@Directive({ selector: '[clrIfExpanded]' })\nexport class DatagridDetailRegisterer {\n  constructor(@Optional() private expandableRowsCount: ExpandableRowsCount) {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.register();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.unregister();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-dg-detail-header',\n  host: {\n    '[class.datagrid-detail-header]': 'true',\n  },\n  template: `\n    <div class=\"datagrid-detail-header-title\" clrFocusOnViewInit [id]=\"titleId\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"datagrid-detail-pane-close\">\n      <button type=\"button\" \n              class=\"btn btn-link\" \n              (click)=\"detailService.close()\" \n              [attr.aria-label]=\"commonStrings.keys.close\">\n        <clr-icon size=\"24\" shape=\"times\"></clr-icon>\n      </button>\n    </div>\n  `,\n})\nexport class ClrDatagridDetailHeader {\n  get titleId() {\n    return `${this.detailService.id}-title`;\n  }\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, HostListener } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\n\n@Component({\n  selector: 'clr-dg-detail',\n  host: {\n    '[class.datagrid-detail-pane]': 'true',\n  },\n  // We put the *ngIf on the clrFocusTrap so it doesn't always exist on the page\n  // have to test for presence of header for aria-describedby because it was causing unit tests to crash\n  template: `\n    <div [clrFocusTrap]=\"{strict: false}\" class=\"datagrid-detail-pane-content\" *ngIf=\"detailService.isOpen\" role=\"dialog\"\n         [id]=\"detailService.id\" aria-modal=\"true\" [attr.aria-describedby]=\"header ? header.titleId : ''\">\n    <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneStart}}</div>\n      <ng-content></ng-content>\n      <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneEnd}}</div>\n    </div>\n    `,\n})\nexport class ClrDatagridDetail {\n  @ContentChild(ClrDatagridDetailHeader) public header: ClrDatagridDetailHeader;\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n\n  @HostListener('document:keyup.esc')\n  closeCheck(): void {\n    this.detailService.close();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DetailService } from './providers/detail.service';\n\n@Directive({\n  selector: '[clrIfDetail]',\n})\nexport class ClrIfDetail implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  private skip = false; // This keeps us from resetting the input and calling the toggle twice\n\n  @Input('clrIfDetail')\n  set state(model) {\n    if (!this.skip) {\n      this.detailService.toggle(model);\n    }\n    this.skip = false;\n  }\n\n  @Output('clrIfDetailChange') public stateChange = new EventEmitter<any>(null);\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private detailService: DetailService\n  ) {\n    this.detailService.enabled = true;\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.detailService.stateChange.subscribe(state => {\n        if (state === true) {\n          this.togglePanel(true);\n        } else {\n          this.togglePanel(false);\n        }\n      })\n    );\n  }\n\n  private togglePanel(showPanel: boolean) {\n    let stateChangeParams = null;\n    this.viewContainer.clear();\n    if (showPanel === true) {\n      this.viewContainer.createEmbeddedView(this.templateRef, { $implicit: this.detailService.state });\n      this.skip = true;\n      stateChangeParams = this.detailService.state;\n    }\n\n    this.stateChange.emit(stateChangeParams);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-detail-body',\n  template: `\n    <div class=\"clr-dg-detail-body-wrapper\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.datagrid-detail-body]': 'true',\n  },\n})\nexport class ClrDatagridDetailBody {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild } from '@angular/core';\n\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-footer',\n  template: `\n        <ng-container\n            *ngIf=\"(selection.selectionType === SELECTION_TYPE.Multi) && (selection.current.length > 0)\">\n          <div class=\"clr-form-control-disabled\">\n              <clr-checkbox-wrapper class=\"datagrid-footer-select\">\n                <input clrCheckbox type=\"checkbox\" checked=\"checked\" disabled>\n                <label>{{selection.current.length}}</label>\n            </clr-checkbox-wrapper>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!detailService.isOpen\">\n          <ng-content select=\"clr-dg-column-toggle\"></ng-content>\n          <clr-dg-column-toggle *ngIf=\"hasHideableColumns && !toggle\"></clr-dg-column-toggle>\n          <div class=\"datagrid-footer-description\">\n              <ng-content></ng-content>\n          </div>\n        </ng-container>\n        <ng-content select=\"clr-dg-pagination\"></ng-content>\n    `,\n  host: {\n    '[class.datagrid-footer]': 'true',\n  },\n})\nexport class ClrDatagridFooter<T = any> {\n  constructor(\n    public selection: Selection<T>,\n    public detailService: DetailService,\n    private columnsService: ColumnsService\n  ) {}\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ContentChild(ClrDatagridColumnToggle) toggle: ClrDatagridColumnToggle;\n\n  get hasHideableColumns(): boolean {\n    return this.columnsService.hasHideableColumns;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnState } from '../interfaces/column-state.interface';\n\nexport const COLUMN_STATE = new InjectionToken<ColumnState>('COLUMN_STATE');\n\nexport function columnStateFactory() {\n  return new BehaviorSubject<ColumnState>({\n    changes: [],\n  });\n}\n\nexport const COLUMN_STATE_PROVIDER = {\n  provide: COLUMN_STATE,\n  useFactory: columnStateFactory,\n};\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// TODO: I'd like this to be a CheckedState enum for the checkboxes in the future.\nexport enum ClrSelectedState {\n  // WARNING! Unselected has the value 0,\n  // so it's actually the only one that will evaluate to false if cast to a boolean.\n  // Don't mess with the order!\n  UNSELECTED = 0,\n  SELECTED,\n  INDETERMINATE,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { COLUMN_STATE } from './providers/column-state.provider';\n\n@Directive({ selector: '[clrDgHideableColumn]' })\n\n/**\n *\n * @description\n * A structural directive meant to be used inside a clr-dg-column component.\n *\n * <clr-dg-column>\n *       <ng-container *clrDgHideableColumn=\"{ hidden: true }\">\n *           User ID\n *       </ng-container>\n *   </clr-dg-column>\n *\n * It sets up state and properties so that columns can be manges for hide/show by a service and an internal\n * datagrid toggle component.\n *\n */\nexport class ClrDatagridHideableColumn implements OnDestroy {\n  /**\n   *\n   * @description\n   * Used to initialize the column with either hidden or visible state.\n   *\n   */\n  private _hidden: boolean;\n\n  /**\n   *\n   * @description\n   * Setter fn for the @Input with the same name as this structural directive.\n   * It allows the user to pre-configure the column's hide/show state. { hidden: true }\n   * It's more verbose but has more Clarity.\n   *\n   *\n   * @example\n   * *clrDgHideableColumn\n   * *clrDgHideableColumn={hidden: false}\n   * *clrDgHideableColumn={hidden: true}\n   *\n   */\n  @Input('clrDgHideableColumn')\n  set clrDgHideableColumn(value: { hidden: boolean }) {\n    this.clrDgHidden = value && value.hidden ? value.hidden : false;\n  }\n\n  @Input('clrDgHidden')\n  set clrDgHidden(hidden: boolean) {\n    this._hidden = hidden ? hidden : false;\n    this.columnsService.emitStateChange(this.columnState, {\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  @Output('clrDgHiddenChange') public hiddenChange = new EventEmitter<boolean>();\n\n  constructor(\n    private titleTemplateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private columnsService: ColumnsService,\n    @Optional()\n    @Inject(COLUMN_STATE)\n    private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.viewContainerRef.createEmbeddedView(this.titleTemplateRef);\n\n    if (!this.columnState) {\n      throw new Error('The *clrDgHideableColumn directive can only be used inside of a clr-dg-column component.');\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnInit() {\n    this.columnsService.emitStateChange(this.columnState, {\n      hideable: true,\n      titleTemplateRef: this.titleTemplateRef,\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n\n    this.subscriptions.push(\n      this.columnState.subscribe((state: ColumnState) => {\n        if (state.changes && state.changes.indexOf(DatagridColumnChanges.HIDDEN) > -1) {\n          this.hiddenChange.emit(state.hidden); // Can emit through @Output when desugared syntax is used\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TrackByFunction } from '@angular/core';\n\nimport { Items } from './providers/items';\n\n@Directive({\n  selector: '[ngForTrackBy]',\n})\nexport class ClrDatagridItemsTrackBy<T = any> {\n  constructor(@Optional() private _items: Items<T>) {}\n\n  @Input('ngForTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    if (this._items) {\n      this._items.trackBy = value;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input } from '@angular/core';\nimport { Page } from './providers/page';\n\n@Component({\n  selector: 'clr-dg-page-size',\n  template: `\n    <ng-content></ng-content>\n    <div class=\"clr-select-wrapper\">\n      <select [class.clr-page-size-select]=\"true\" [(ngModel)]=\"page.size\">\n        <option *ngFor=\"let option of pageSizeOptions\" [ngValue]=\"option\">{{option}}</option>\n      </select>\n    </div>\n  `,\n})\nexport class ClrDatagridPageSize {\n  @Input('clrPageSizeOptions') pageSizeOptions: number[];\n\n  constructor(public page: Page) {}\n\n  ngOnInit() {\n    if (!this.pageSizeOptions || this.pageSizeOptions.length === 0) {\n      this.pageSizeOptions = [this.page.size];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Page } from './providers/page';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-pagination',\n  template: `\n  <ng-container *ngIf=\"!detailService.isOpen\">\n    <div class=\"pagination-size\" *ngIf=\"_pageSizeComponent\">\n      <ng-content select=\"clr-dg-page-size\"></ng-content>\n    </div>\n    <div class=\"pagination-description\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"pagination-list\" *ngIf=\"page.last > 1\">\n      <button\n        type=\"button\" \n        class=\"pagination-first\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = 1\"\n        [attr.aria-label]=\"commonStrings.keys.firstPage\"\n        >\n        <clr-icon shape=\"step-forward-2 down\"></clr-icon>\n      </button>\n      <button \n        type=\"button\"\n        class=\"pagination-previous\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = page.current - 1\"\n        [attr.aria-label]=\"commonStrings.keys.previousPage\"\n        >\n        <clr-icon shape=\"angle left\"></clr-icon>\n      </button>\n        <input\n          *ngIf=\"!disableCurrentPageInput; else readOnly\"\n          #currentPageInput \n          type=\"text\" \n          class=\"pagination-current clr-input\" \n          [size]=\"page.last.toString().length\" \n          [value]=\"page.current\"\n          (keydown.enter)=\"updateCurrentPage($event)\" \n          (blur)=\"updateCurrentPage($event)\"\n          [attr.aria-label]=\"commonStrings.keys.currentPage\"\n          />\n          <ng-template #readOnly>\n            <span>{{ page.current }}</span>\n          </ng-template>\n\n          &nbsp;/&nbsp;<span [attr.aria-label]=\"commonStrings.keys.totalPages\">{{page.last}}</span>\n      <button \n        type=\"button\"\n        class=\"pagination-next\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.current + 1\"\n        [attr.aria-label]=\"commonStrings.keys.nextPage\"\n        >\n        <clr-icon shape=\"angle right\"></clr-icon>\n      </button>\n      <button \n        type=\"button\" \n        class=\"pagination-last\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.last\"\n        [attr.aria-label]=\"commonStrings.keys.lastPage\"\n        >\n        <clr-icon shape=\"step-forward-2 up\"></clr-icon>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"detailService.isOpen\">\n      <div class=\"pagination-description-compact\">\n          {{page.firstItem + 1}}-{{page.lastItem + 1}} / {{page.totalItems}}\n      </div>\n      <div class=\"pagination-list\">\n          <button\n                  type=\"button\"\n                  class=\"pagination-previous\"\n                  [disabled]=\"page.current <= 1\"\n                  (click)=\"page.current = page.current - 1\"\n                  [attr.aria-label]=\"commonStrings.keys.previousPage\"\n          >\n              <clr-icon shape=\"angle left\"></clr-icon>\n          </button>\n          <span>{{page.current}}</span>\n          <button\n                  type=\"button\"\n                  class=\"pagination-next\"\n                  [disabled]=\"page.current >= page.last\"\n                  (click)=\"page.current = page.current + 1\"\n                  [attr.aria-label]=\"commonStrings.keys.nextPage\"\n          >\n              <clr-icon shape=\"angle right\"></clr-icon>\n          </button>\n      </div>\n  </ng-container>\n\n  `,\n  host: { '[class.pagination]': 'true' },\n})\nexport class ClrDatagridPagination implements OnDestroy, OnInit {\n  @ContentChild(ClrDatagridPageSize) _pageSizeComponent: ClrDatagridPageSize;\n  @ViewChild('currentPageInput') currentPageInputRef: ElementRef;\n\n  constructor(public page: Page, public commonStrings: ClrCommonStringsService, public detailService: DetailService) {\n    this.page.activated = true;\n  }\n\n  /**********\n   * Subscription to the Page service for page changes.\n   * Note: this only emits after the datagrid is initialized/stabalized and the page changes.\n   */\n  ngOnInit() {\n    /*\n     * Default page size is 10.\n     * The reason we set it here and not in the provider itself is because\n     * we don't want pagination if this component isn't present in the datagrid.\n     */\n    if (!this.page.size) {\n      this.page.size = 10;\n    }\n    this._pageSubscription = this.page.change.subscribe(current => this.currentChanged.emit(current));\n  }\n\n  /**\n   * Subscription to the page service changes\n   */\n  private _pageSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.page.resetPageSize(true);\n    if (this._pageSubscription) {\n      this._pageSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Page size\n   */\n  public get pageSize(): number {\n    return this.page.size;\n  }\n\n  @Input('clrDgPageInputDisabled') public disableCurrentPageInput: boolean;\n\n  @Input('clrDgPageSize')\n  public set pageSize(size: number) {\n    if (typeof size === 'number') {\n      this.page.size = size;\n    }\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  public get totalItems(): number {\n    return this.page.totalItems;\n  }\n\n  @Input('clrDgTotalItems')\n  public set totalItems(total: number) {\n    if (typeof total === 'number') {\n      this.page.totalItems = total;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  public get lastPage(): number {\n    return this.page.last;\n  }\n\n  @Input('clrDgLastPage')\n  public set lastPage(last: number) {\n    if (typeof last === 'number') {\n      this.page.last = last;\n    }\n  }\n\n  /**\n   * Current page\n   */\n  public get currentPage(): number {\n    return this.page.current;\n  }\n\n  @Input('clrDgPage')\n  public set currentPage(page: number) {\n    if (typeof page === 'number') {\n      this.page.current = page;\n    }\n  }\n\n  @Output('clrDgPageChange') currentChanged = new EventEmitter<number>(false);\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    this.page.previous();\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    this.page.next();\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    return this.page.firstItem;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    return this.page.lastItem;\n  }\n\n  /**\n   * Conditionally adds page numbers before and after the current page\n   */\n  public get middlePages(): number[] {\n    const middlePages: number[] = [];\n    if (this.page.current > 1) {\n      middlePages.push(this.page.current - 1);\n    }\n    middlePages.push(this.page.current);\n    if (this.page.current < this.page.last) {\n      middlePages.push(this.page.current + 1);\n    }\n    return middlePages;\n  }\n\n  /**\n   * We only update the pagination's current page on blur of the input field, or\n   * when they press enter.\n   */\n  public updateCurrentPage(event: any): void {\n    const parsed = parseInt(event.target.value, 10);\n\n    // if the input value, is not a number, we don't update the page\n    if (!isNaN(parsed)) {\n      if (parsed < 1) {\n        this.page.current = 1;\n      } else if (parsed > this.page.last) {\n        this.page.current = this.page.last;\n      } else {\n        this.page.current = parsed;\n      }\n    }\n\n    /**\n     * Set the input's value to the new current page. This is needed because the code\n     * above may have changed the value from what the user entered in.\n     */\n    this.currentPageInputRef.nativeElement.value = this.page.current;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, Component, ContentChildren, Input, OnDestroy, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\n\n/**\n * Generic bland container serving various purposes for Datagrid.\n * For instance, it can help span a text over multiple rows in detail view.\n */\n@Component({\n  selector: 'clr-dg-row-detail',\n  template: `  \n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.datagrid-row-flex]': 'true',\n    '[class.datagrid-row-detail]': 'true',\n    '[class.datagrid-container]': 'cells.length === 0',\n  },\n})\nexport class ClrDatagridRowDetail<T = any> implements AfterContentInit, OnDestroy {\n  /* reference to the enum so that template can access it */\n  public SELECTION_TYPE = SelectionType;\n\n  constructor(\n    public selection: Selection,\n    public rowActionService: RowActionService,\n    public expand: DatagridIfExpandService,\n    public expandableRows: ExpandableRowsCount\n  ) {}\n\n  @ContentChildren(ClrDatagridCell) cells: QueryList<ClrDatagridCell>;\n\n  @Input('clrDgReplace')\n  set replace(value: boolean) {\n    this.expand.setReplace(!!value);\n  }\n  private subscriptions: Subscription[] = [];\n  public replacedRow = false;\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.expand.replace.subscribe(replaceChange => {\n        this.replacedRow = replaceChange;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES, DatagridColumnChanges } from '../enums/column-changes.enum';\n\n@Directive({ selector: 'clr-dg-cell' })\nexport class DatagridCellRenderer implements OnDestroy {\n  private stateSubscription: Subscription;\n\n  private runAllChanges: DatagridColumnChanges[];\n\n  // @TODO(JEREMY) Work out how to dedupe some of this code between header and cell renderers\n  set columnState(columnState: BehaviorSubject<ColumnState>) {\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n\n    this.runAllChanges = ALL_COLUMN_CHANGES;\n    this.stateSubscription = columnState.subscribe(state => this.stateChanges(state));\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (this.runAllChanges) {\n      state.changes = this.runAllChanges;\n      delete this.runAllChanges;\n    }\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    this.renderer.setStyle(this.el.nativeElement, 'width', null);\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n    this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO The top two are not used now, which is probably a performance drag that was broken along the way.\n// There was a previous pattern to hide everything to do computation then display, for Firefox, needs revisiting.\nexport const NO_LAYOUT_CLASS = 'datagrid-no-layout';\nexport const COMPUTE_WIDTH_CLASS = 'datagrid-computing-columns-width';\nexport const STRICT_WIDTH_CLASS = 'datagrid-fixed-width';\nexport const HIDDEN_COLUMN_CLASS = 'datagrid-hidden-column';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Inject, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { ColumnResizerService } from '../providers/column-resizer.service';\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { COLUMN_STATE, COLUMN_STATE_PROVIDER } from '../providers/column-state.provider';\nimport { ColumnsService } from '../providers/columns.service';\n\n@Directive({ selector: 'clr-dg-column', providers: [ColumnResizerService, COLUMN_STATE_PROVIDER] })\nexport class DatagridHeaderRenderer implements OnDestroy {\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private organizer: DatagridRenderOrganizer,\n    private domAdapter: DomAdapter,\n    private columnResizerService: ColumnResizerService,\n    private columnsService: ColumnsService,\n    @Inject(COLUMN_STATE) private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.subscriptions.push(\n      this.organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n\n    this.subscriptions.push(columnState.subscribe(state => this.stateChanges(state)));\n  }\n\n  @Output('clrDgColumnResize') resizeEmitter: EventEmitter<number> = new EventEmitter();\n\n  /**\n   * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n   */\n  private widthSet: boolean = false;\n  private autoSet: boolean = false;\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    // remove the width only if we set it, and it is not changed by dragging.\n    if (this.widthSet && !this.columnResizerService.resizedBy) {\n      this.renderer.setStyle(this.el.nativeElement, 'width', null);\n    }\n    if (this.autoSet) {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n  }\n\n  private detectStrictWidth(): number {\n    if (this.columnResizerService.resizedBy) {\n      return this.columnResizerService.widthAfterResize;\n    } else if (this.autoSet) {\n      return 0;\n    } else {\n      return this.domAdapter.userDefinedWidth(this.el.nativeElement);\n    }\n  }\n\n  private computeWidth(strictWidth: number): number {\n    let width: number = strictWidth;\n    if (!width) {\n      width = this.domAdapter.scrollWidth(this.el.nativeElement);\n    }\n    return width;\n  }\n\n  public getColumnWidthState(): Partial<ColumnState> {\n    const strictWidth = this.detectStrictWidth();\n    return {\n      width: this.computeWidth(strictWidth),\n      strictWidth: strictWidth,\n    };\n  }\n\n  public setColumnState(index: number) {\n    this.columnsService.columns[index] = this.columnState;\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      if (this.columnResizerService.resizedBy) {\n        this.resizeEmitter.emit(state.width);\n        this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n        this.widthSet = false;\n      }\n      // Don't set width if there is a user-defined one. Just add the strict width class.\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.autoSet = false;\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n      this.widthSet = true;\n      this.autoSet = true;\n    }\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * This version of the DomAdapter is for use on non-browser platforms, where there are no\n * nativeElements to use for calculations.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\n\n@Injectable()\nexport class NoopDomAdapter implements DomAdapter {\n  userDefinedWidth(element: any): number {\n    return 0;\n  }\n\n  scrollBarWidth(element: any) {\n    return 0;\n  }\n\n  scrollWidth(element: any) {\n    return 0;\n  }\n\n  computedHeight(element: any): number {\n    return 0;\n  }\n\n  clientRect(element: any): ClientRect {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  minWidth(element: any): number {\n    return 0;\n  }\n\n  focus(element: any): void {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, QueryList } from '@angular/core';\n\nimport { DatagridCellRenderer } from './cell-renderer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({ selector: 'clr-dg-row, clr-dg-row-detail' })\nexport class DatagridRowRenderer implements AfterContentInit, OnDestroy {\n  @ContentChildren(DatagridCellRenderer) private cells: QueryList<DatagridCellRenderer>;\n\n  constructor(private columnsService: ColumnsService) {}\n\n  ngAfterContentInit() {\n    this.setColumnState(); // case #3 and #4\n    this.subscriptions.push(\n      this.cells.changes.subscribe(() => {\n        this.setColumnState(); // case #2\n        // Note on case #2: In the case of dynamic columns, when one column (header/cell together) gets deleted,\n        // this.cells.changes emits before this.columnsService.columns gets updated in MainRenderer\n        // when this.headers.changes emits as well. So that means there will be n+1 column state providers\n        // when this.cells.changes emits. Hence, we should quit earlier there. But this method will be called\n        // right after again when this.headers.changes emits. By then, there will be the same number of column state\n        // providers as column headers.\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  public setColumnState() {\n    // This method runs in four cases:\n    // 1. When the initial rows appear on the first page.\n    //    In this case, the method will be called in DatagridMainRenderer.\n    // 2. When columns (corresponding header/cells) get added and deleted.\n    //    In this case, the method will be called in DatagridMainRenderer. (Read the note on this case above).\n    // 3. When rows load asynchronously.\n    //    In this case, the method will be called in this class.\n    // 4. When rows load after switching pages.\n    //    In this case, the method will be called in this class (Basically, same as the case 3).\n    if (this.cells.length === this.columnsService.columns.length) {\n      this.cells.forEach((cell, index) => {\n        if (this.columnsService.columns[index]) {\n          cell.columnState = this.columnsService.columns[index];\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { Items } from '../providers/items';\nimport { Page } from '../providers/page';\nimport { TableSizeService } from '../providers/table-size.service';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridHeaderRenderer } from './header-renderer';\nimport { NoopDomAdapter } from './noop-dom-adapter';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { DatagridRowRenderer } from './row-renderer';\nimport { ColumnStateDiff } from '../interfaces/column-state.interface';\nimport { DetailService } from '../providers/detail.service';\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\nexport const domAdapterFactory = (platformId: Object) => {\n  if (isPlatformBrowser(platformId)) {\n    return new DomAdapter();\n  } else {\n    return new NoopDomAdapter();\n  }\n};\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\n@Directive({\n  selector: 'clr-datagrid',\n  providers: [{ provide: DomAdapter, useFactory: domAdapterFactory, deps: [PLATFORM_ID] }],\n})\nexport class DatagridMainRenderer<T = any> implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    private items: Items,\n    private page: Page,\n    private domAdapter: DomAdapter,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private detailService: DetailService,\n    private tableSizeService: TableSizeService,\n    private columnsService: ColumnsService\n  ) {\n    this.subscriptions.push(\n      this.organizer\n        .filterRenderSteps(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS)\n        .subscribe(() => this.computeHeadersWidth())\n    );\n\n    this.subscriptions.push(\n      this.page.sizeChange.subscribe(() => {\n        if (this._heightSet) {\n          this.resetDatagridHeight();\n        }\n      })\n    );\n    this.subscriptions.push(this.detailService.stateChange.subscribe(state => this.toggleDetailPane(state)));\n    this.subscriptions.push(this.items.change.subscribe(() => (this.shouldStabilizeColumns = true)));\n  }\n\n  @ContentChildren(DatagridHeaderRenderer) private headers: QueryList<DatagridHeaderRenderer>;\n  @ContentChildren(DatagridRowRenderer, { descendants: true })\n  private rows: QueryList<DatagridRowRenderer>; // if expandable row is expanded initially, query its cells too.\n\n  ngAfterContentInit() {\n    this.setupColumns();\n\n    this.subscriptions.push(\n      this.headers.changes.subscribe(() => {\n        // TODO: only re-stabilize if a column was added or removed. Reordering is fine.\n        // Need to setup columns before stabalizing them\n        this.setupColumns();\n        this.columnsSizesStable = false;\n        this.stabilizeColumns();\n      })\n    );\n  }\n\n  // Initialize and set Table width for horizontal scrolling here.\n  ngAfterViewInit() {\n    this.tableSizeService.table = this.el;\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldStabilizeColumns) {\n      this.stabilizeColumns();\n    }\n    if (this.shouldComputeHeight()) {\n      setTimeout(() => {\n        this.computeDatagridHeight();\n      });\n    }\n  }\n\n  private setupColumns() {\n    this.headers.forEach((header, index) => header.setColumnState(index));\n    this.columnsService.columns.splice(this.headers.length); // Trim any old columns\n    this.rows.forEach(row => row.setColumnState());\n  }\n\n  private _heightSet: boolean = false;\n\n  private shouldComputeHeight(): boolean {\n    if (!this._heightSet && this.page.size > 0) {\n      if (this.items.displayed.length === this.page.size) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public toggleDetailPane(state: boolean) {\n    if (this.headers) {\n      if (state && !this.columnsService.hasCache()) {\n        this.columnsService.cache();\n        this.headers.forEach((header, index) => {\n          if (index > 0) {\n            this.columnsService.emitStateChangeAt(index, {\n              changes: [DatagridColumnChanges.HIDDEN],\n              hidden: state,\n            });\n          }\n        });\n      } else if (!state) {\n        this.columnsService.resetToLastCache();\n      }\n    }\n  }\n\n  /**\n   * Computes the height of the datagrid.\n   *\n   * NOTE: We had to choose to set the height instead of the min-height because\n   * IE 11 requires the height on the parent for the children flex grow/shrink properties to work.\n   * When we used min-height, 1 1 auto doesn't used to work in IE11 :-(\n   * But this doesn't affect the fix. It works in both fixed & variable height datagrids.\n   *\n   * Refer: http://stackoverflow.com/questions/24396205/flex-grow-not-working-in-internet-explorer-11-0\n   */\n  private computeDatagridHeight() {\n    // IE doesn't return correct value for getComputedStyle(element).getPropertyValue(\"height\")\n    const value: number = this.domAdapter.clientRect(this.el.nativeElement).height;\n    this.renderer.setStyle(this.el.nativeElement, 'height', value + 'px');\n    this._heightSet = true;\n  }\n\n  private resetDatagridHeight() {\n    this.renderer.setStyle(this.el.nativeElement, 'height', '');\n    this._heightSet = false;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Makes each header compute its width.\n   */\n  private computeHeadersWidth() {\n    const nbColumns: number = this.headers.length;\n    let allStrict = true;\n    this.headers.forEach((header, index) => {\n      // On the last header column check whether all columns have strict widths.\n      // If all columns have strict widths, remove the strict width from the last column and make it the column's\n      // minimum width so that when all previous columns shrink, it will get a flexible width and cover the empty\n      // gap in the Datagrid.\n      const state: ColumnStateDiff = {\n        changes: [DatagridColumnChanges.WIDTH],\n        ...header.getColumnWidthState(),\n      };\n\n      if (!state.strictWidth) {\n        allStrict = false;\n      }\n\n      if (nbColumns === index + 1 && allStrict) {\n        state.strictWidth = 0;\n      }\n\n      this.columnsService.emitStateChangeAt(index, state);\n    });\n  }\n\n  /**\n   * Indicates if we want to re-compute columns width. This should only happen:\n   * 1) When headers change, with columns being added or removed\n   * 2) When rows are lazily loaded for the first time\n   */\n  private columnsSizesStable = false;\n\n  private shouldStabilizeColumns = true;\n\n  /**\n   * Triggers a whole re-rendring cycle to set column sizes, if needed.\n   */\n  private stabilizeColumns() {\n    this.shouldStabilizeColumns = false;\n    if (this.columnsSizesStable) {\n      // Nothing to do.\n      return;\n    }\n    // Resize when the rows are loaded.\n    if (this.items.displayed.length > 0) {\n      this.organizer.resize();\n      this.columnsSizesStable = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrFormsModule } from '../../forms/forms.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrOutsideClickModule } from '../../utils/outside-click/outside-click.module';\nimport { ClrDragAndDropModule } from '../../utils/drag-and-drop/drag-and-drop.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrSpinnerModule } from '../../progress/spinner/spinner.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { DatagridStringFilter } from './built-in/filters/datagrid-string-filter';\nimport { DatagridNumericFilter } from './built-in/filters/datagrid-numeric-filter';\nimport { ActionableOompaLoompa } from './chocolate/actionable-oompa-loompa';\nimport { DatagridWillyWonka } from './chocolate/datagrid-willy-wonka';\nimport { ExpandableOompaLoompa } from './chocolate/expandable-oompa-loompa';\nimport { ClrDatagrid } from './datagrid';\nimport { ClrDatagridActionBar } from './datagrid-action-bar';\nimport { ClrDatagridActionOverflow } from './datagrid-action-overflow';\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridColumnSeparator } from './datagrid-column-separator';\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { DatagridDetailRegisterer } from './datagrid-detail-registerer';\nimport { ClrDatagridDetail } from './datagrid-detail';\nimport { ClrIfDetail } from './datagrid-if-detail';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\nimport { ClrDatagridDetailBody } from './datagrid-detail-body';\nimport { ClrDatagridFilter } from './datagrid-filter';\nimport { ClrDatagridFooter } from './datagrid-footer';\nimport { ClrDatagridHideableColumn } from './datagrid-hideable-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridItemsTrackBy } from './datagrid-items-trackby';\nimport { ClrDatagridPagination } from './datagrid-pagination';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { ClrDatagridRowDetail } from './datagrid-row-detail';\nimport { DatagridCellRenderer } from './render/cell-renderer';\nimport { DatagridHeaderRenderer } from './render/header-renderer';\nimport { DatagridMainRenderer } from './render/main-renderer';\nimport { DatagridRowRenderer } from './render/row-renderer';\nimport { WrappedCell } from './wrapped-cell';\nimport { WrappedColumn } from './wrapped-column';\nimport { WrappedRow } from './wrapped-row';\n\nexport const CLR_DATAGRID_DIRECTIVES: Type<any>[] = [\n  // Core\n  ClrDatagrid,\n  ClrDatagridActionBar,\n  ClrDatagridActionOverflow,\n  ClrDatagridColumn,\n  ClrDatagridColumnSeparator,\n  ClrDatagridColumnToggle,\n  ClrDatagridHideableColumn,\n  ClrDatagridFilter,\n  ClrDatagridItems,\n  ClrDatagridItemsTrackBy,\n  ClrDatagridRow,\n  ClrDatagridRowDetail,\n  DatagridDetailRegisterer,\n  ClrDatagridCell,\n  ClrDatagridFooter,\n  ClrDatagridPagination,\n  ClrDatagridPageSize,\n  ClrDatagridPlaceholder,\n  ClrDatagridColumnToggleButton,\n  ClrDatagridColumnToggleTitle,\n  ClrDatagridDetail,\n  ClrIfDetail,\n  ClrDatagridDetailHeader,\n  ClrDatagridDetailBody,\n  WrappedCell,\n  WrappedColumn,\n  WrappedRow,\n\n  // Renderers\n  DatagridMainRenderer,\n  DatagridHeaderRenderer,\n  DatagridRowRenderer,\n  DatagridCellRenderer,\n\n  // Chocolate\n  DatagridWillyWonka,\n  ActionableOompaLoompa,\n  ExpandableOompaLoompa,\n\n  // Built-in shortcuts\n  DatagridStringFilter,\n  DatagridNumericFilter,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrIconModule,\n    ClrFormsModule,\n    FormsModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrOutsideClickModule,\n    ClrExpandableAnimationModule,\n    ClrDragAndDropModule,\n    ClrSpinnerModule,\n    ClrPopoverModuleNext,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n  ],\n  declarations: [CLR_DATAGRID_DIRECTIVES],\n  exports: [CLR_DATAGRID_DIRECTIVES],\n  entryComponents: [WrappedCell, WrappedColumn, WrappedRow],\n})\nexport class ClrDatagridModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, HostBinding, Inject, Input, OnInit, Optional, Output, SkipSelf } from '@angular/core';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-stack-block',\n  template: `\n    <div class=\"stack-block-label\"\n        (click)=\"toggleExpand()\"\n        (keyup.enter)=\"toggleExpand()\"\n        (keyup.space)=\"toggleExpand()\"\n        (focus)=\"focused = true\"\n        (blur)=\"focused = false\"\n        [id]=\"uniqueId\"\n        [attr.role]=\"role\"\n        [attr.tabindex]=\"tabIndex\"\n        [attr.aria-expanded]=\"ariaExpanded\"\n        [attr.aria-controls]=\"getStackChildrenId()\"\n        [attr.aria-posinset]=\"ariaPosinset\"\n        [attr.aria-level]=\"ariaLevel\"\n        [attr.aria-setsize]=\"ariaSetsize\"\n        >\n      <clr-icon shape=\"caret\"\n                class=\"stack-block-caret\"\n                *ngIf=\"expandable\"\n                [attr.dir]=\"caretDirection\"\n                [attr.title]=\"caretTitle\"></clr-icon>\n      <span class=\"clr-sr-only\" *ngIf=\"getChangedValue\">{{commonStrings.keys.stackViewChanged}}</span>\n      <div class=\"stack-view-key\">\n        <!-- This structure changed to fix #3567 and the a11y request was to move away from dl's -->\n        <!-- I added the key class to update css targets for the original component style -->\n        <ng-content select=\"clr-stack-label\"></ng-content>\n      </div>\n      <div class=\"stack-block-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n\n    <clr-expandable-animation [clrExpandTrigger]=\"expanded\" class=\"stack-children\" [attr.id]=\"getStackChildrenId()\">\n      <div [style.height]=\"expanded ? 'auto' : 0\" role=\"region\">\n        <ng-content select=\"clr-stack-block\"></ng-content>\n      </div>\n    </clr-expandable-animation>\n  `,\n  // Custom elements are inline by default\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  // Make sure the host has the proper class for styling purposes\n  host: { '[class.stack-block]': 'true' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrStackBlock implements OnInit {\n  @HostBinding('class.stack-block-expanded')\n  @Input('clrSbExpanded')\n  expanded: boolean = false;\n  @Output('clrSbExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @HostBinding('class.stack-block-expandable')\n  @Input('clrSbExpandable')\n  expandable: boolean = false;\n\n  focused: boolean = false;\n  private _changedChildren: number = 0;\n  private _fullyInitialized: boolean = false;\n  private _changed: boolean = false;\n\n  @HostBinding('class.stack-block-changed')\n  get getChangedValue(): boolean {\n    return this._changed || (this._changedChildren > 0 && !this.expanded);\n  }\n\n  @Input('clrSbNotifyChange')\n  set setChangedValue(value: boolean) {\n    this._changed = value;\n\n    if (this.parent && this._fullyInitialized) {\n      if (value) {\n        this.parent._changedChildren++;\n      } else {\n        this.parent._changedChildren--;\n      }\n    }\n  }\n\n  /**\n   * Depth of the stack view starting from 1 for first level\n   */\n  @Input('clrStackViewLevel') ariaLevel: number;\n\n  /**\n   * Total number of rows in a given group\n   */\n  @Input('clrStackViewSetsize') ariaSetsize: number;\n\n  /**\n   * The position of the row inside the grouped by level rows\n   */\n  @Input('clrStackViewPosinset') ariaPosinset: number;\n\n  /*\n   * This would be more efficient with @ContentChildren, with the parent ClrStackBlock\n   * querying for children StackBlocks, but this feature is not available when downgrading\n   * the component for Angular 1.\n   */\n  constructor(\n    @SkipSelf()\n    @Optional()\n    private parent: ClrStackBlock,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    if (parent) {\n      parent.addChild();\n    }\n  }\n\n  ngOnInit(): void {\n    // in order to access the parent ClrStackBlock's properties,\n    // the child ClrStackBlock has to be fully initialized at first.\n    this._fullyInitialized = true;\n  }\n\n  addChild(): void {\n    this.expandable = true;\n  }\n\n  toggleExpand(): void {\n    if (this.expandable) {\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  get caretDirection(): string {\n    return this.expanded ? 'down' : 'right';\n  }\n\n  get caretTitle(): string {\n    return this.expanded ? this.commonStrings.keys.collapse : this.commonStrings.keys.expand;\n  }\n\n  get role(): string {\n    return this.expandable ? 'button' : null;\n  }\n\n  get tabIndex(): string {\n    return this.expandable ? '0' : null;\n  }\n\n  @HostBinding('class.on-focus')\n  get onStackLabelFocus(): boolean {\n    return this.expandable && !this.expanded && this.focused;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.expandable) {\n      return null;\n    } else {\n      return this.expanded ? 'true' : 'false';\n    }\n  }\n\n  getStackChildrenId() {\n    return this.expanded ? `clr-stack-children-${this.uniqueId}` : null;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'clr-stack-view',\n  template: `\n        <ng-content select=\"clr-stack-header\"></ng-content>\n        <div class=\"stack-view\"><ng-content></ng-content></div>\n    `,\n  // Custom elements are inline by default.\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackView {\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  editable: boolean = false;\n\n  @Output('clrStackSave') save: EventEmitter<void> = new EventEmitter<void>(false);\n\n  private _editMode: boolean = false;\n\n  editingChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  get editing(): boolean {\n    return this.editable && this._editMode;\n  }\n\n  set editing(value: boolean) {\n    if (this.editable) {\n      this._editMode = value;\n      this.editingChange.emit(value);\n      if (!value) {\n        this.save.emit(null);\n      }\n    }\n  }\n  /**\n   * End of undocumented experimental feature.\n   */\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-header',\n  template: `\n        <h4 class=\"stack-header\">\n            <span class=\"stack-title\"><ng-content></ng-content></span>\n            \n            <span class=\"stack-actions\">\n                <ng-content select=\".stack-action\"></ng-content>\n                <!-- Undocumented experimental feature: inline editing. -->\n                <button *ngIf=\"stackView.editable\" class=\"stack-action btn btn-sm btn-link\" \n                        (click)=\"stackView.editing = !stackView.editing\" type=\"button\">\n                        Edit\n                </button>\n                <!-- End of undocumented experimental feature. -->\n            </span>\n        </h4>\n    `,\n  // Custom elements are inline by default\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackHeader {\n  constructor(public stackView: ClrStackView) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\nexport class StackControl {\n  model: any;\n  modelChange: EventEmitter<any> = new EventEmitter<any>(false);\n\n  constructor(protected stackView: ClrStackView) {\n    // Make the ClrStackView editable, since it contains a StackControl\n    this.stackView.editable = true;\n    this.stackView.editingChange.subscribe((editing: boolean) => {\n      // Edit mode was closed\n      if (!editing) {\n        this.modelChange.emit(this.model);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: support more types of inputs: checkbox, radio, ...\n * TODO: Mirror input attributes from the host to the actual input: size, min, max, placeholder, ...\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-input',\n  inputs: ['model: clrModel', 'type'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <input [type]=\"type\" *ngIf=\"stackView.editing\" [(ngModel)]=\"model\"/>\n    `,\n})\nexport class ClrStackInput extends StackControl {\n  type: string = 'text';\n\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: Offer a a way to customize the value displayed, plain value may be unreadable.\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-select',\n  inputs: ['model: clrModel'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <div class=\"select\" *ngIf=\"stackView.editing\" >\n            <select [(ngModel)]=\"model\">\n                <ng-content></ng-content>\n            </select>\n        </div>\n    `,\n})\nexport class ClrStackSelect extends StackControl {\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-stack-label, clr-stack-content' })\nexport class ClrStackViewCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Inject } from '@angular/core';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Directive({\n  selector: '[clrStackInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.aria-labelledby]': 'uniqueId',\n  },\n})\nexport class ClrStackContentInput {\n  constructor(@Inject(UNIQUE_ID) public uniqueId: string) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrStackBlock } from './stack-block';\nimport { ClrStackHeader } from './stack-header';\nimport { ClrStackInput } from './stack-input';\nimport { ClrStackSelect } from './stack-select';\nimport { ClrStackView } from './stack-view';\nimport { ClrStackViewCustomTags } from './stack-view-custom-tags';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrStackContentInput } from './stack-content-input';\n\nexport const CLR_STACK_VIEW_DIRECTIVES: Type<any>[] = [\n  ClrStackView,\n  ClrStackHeader,\n  ClrStackBlock,\n  ClrStackContentInput,\n  ClrStackViewCustomTags,\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  ClrStackInput,\n  ClrStackSelect,\n  /**\n   * End of undocumented experimental feature.\n   */\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrExpandableAnimationModule],\n  declarations: [CLR_STACK_VIEW_DIRECTIVES],\n  exports: [CLR_STACK_VIEW_DIRECTIVES],\n})\nexport class ClrStackViewModule {}\n","/*\n* Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { KeyCodes, IEKeyCodes } from '@clr/core/common';\n\nexport function keyValidator(key: string) {\n  if (key === KeyCodes.ArrowUp || key === IEKeyCodes.ArrowUp) {\n    return KeyCodes.ArrowUp;\n  } else if (key === KeyCodes.ArrowDown || key === IEKeyCodes.ArrowDown) {\n    return KeyCodes.ArrowDown;\n  } else if (key === KeyCodes.ArrowRight || key === IEKeyCodes.ArrowRight) {\n    return KeyCodes.ArrowRight;\n  } else if (key === KeyCodes.ArrowLeft || key === IEKeyCodes.ArrowLeft) {\n    return KeyCodes.ArrowLeft;\n  } else if (key === KeyCodes.Space || key === IEKeyCodes.Space) {\n    return KeyCodes.Space;\n  } else if (key === KeyCodes.Escape || key === IEKeyCodes.Escape) {\n    return KeyCodes.Escape;\n  } else {\n    return key;\n  }\n}\n\nexport function preventArrowKeyScroll(event: KeyboardEvent) {\n  const validKey = keyValidator(event.key);\n\n  if (\n    validKey === KeyCodes.ArrowUp ||\n    validKey === KeyCodes.ArrowDown ||\n    validKey === KeyCodes.ArrowLeft ||\n    validKey === KeyCodes.ArrowRight\n  ) {\n    // prevent element container scroll\n    // MDN references this is really the only way to prevent native browser interactions\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets\n    event.preventDefault();\n  }\n}\n\nexport function getKeyCodes(event: KeyboardEvent) {\n  // IE does not properly follow the spec for `event.key` so we need to return a different enum for the key events\n  // We use `event.key` for optimal browser support, to detect IE/Edge check if `event.code` is undefined\n  const isIEKeyboardEvent = event.code === undefined;\n  return isIEKeyboardEvent ? IEKeyCodes : KeyCodes;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrSelectedState } from './selected-state.enum';\nimport { BehaviorSubject } from 'rxjs';\n\nexport abstract class TreeNodeModel<T> {\n  nodeId: string;\n  expanded: boolean;\n  selected = new BehaviorSubject<ClrSelectedState>(ClrSelectedState.UNSELECTED);\n  model: T | null;\n  /*\n   * Ideally, I would like to use a polymorphic this type here to ensure homogeneity of the tree, something like:\n   * abstract parent: this<T> | null;\n   * abstract children: this<T>[];\n   * But I'm hitting limitations on typescript not allowing that type in constructors or static methods.\n   * So I'm resorting to forcing override with more precise types by marking these abstract.\n   */\n  abstract parent: TreeNodeModel<T> | null;\n  abstract children: TreeNodeModel<T>[];\n\n  /*\n   * Being able to push this down to the RecursiveTreeNodeModel would require too much work on the angular components\n   * right now for them to know which kind of model they are using. So I'm lifting the public properties to this\n   * abstract parent class for now and we can revisit it later, when we're not facing such a close deadline.\n   */\n  loading = false;\n\n  destroy() {\n    // Just to be safe\n    this.selected.complete();\n  }\n\n  // Propagate by default when eager, don't propagate in the lazy-loaded tree.\n  setSelected(state: ClrSelectedState, propagateUp: boolean, propagateDown: boolean) {\n    if (state === this.selected.value) {\n      return;\n    }\n    this.selected.next(state);\n    if (propagateDown && state !== ClrSelectedState.INDETERMINATE && this.children) {\n      this.children.forEach(child => child.setSelected(state, false, true));\n    }\n    if (propagateUp && this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n\n  toggleSelection(propagate: boolean) {\n    // Both unselected and indeterminate toggle to selected\n    const newState =\n      this.selected.value === ClrSelectedState.SELECTED ? ClrSelectedState.UNSELECTED : ClrSelectedState.SELECTED;\n    // NOTE: we always propagate selection up in this method because it is only called when the user takes an action.\n    // It should never be called from lifecycle hooks or app-provided inputs.\n    this.setSelected(newState, true, propagate);\n  }\n\n  private computeSelectionStateFromChildren() {\n    let oneSelected = false;\n    let oneUnselected = false;\n    // Using a good old for loop to exit as soon as we can tell, for better performance on large trees.\n    for (const child of this.children) {\n      switch (child.selected.value) {\n        case ClrSelectedState.INDETERMINATE:\n          return ClrSelectedState.INDETERMINATE;\n        case ClrSelectedState.SELECTED:\n          oneSelected = true;\n          if (oneUnselected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n        case ClrSelectedState.UNSELECTED:\n        default:\n          // Default is the same as unselected, in case an undefined somehow made it all the way here.\n          oneUnselected = true;\n          if (oneSelected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n      }\n    }\n    if (!oneSelected) {\n      return ClrSelectedState.UNSELECTED;\n    } else if (!oneUnselected) {\n      return ClrSelectedState.SELECTED;\n    }\n  }\n\n  /*\n   * Internal, but needs to be called by other nodes\n   */\n  _updateSelectionFromChildren() {\n    const newState = this.computeSelectionStateFromChildren();\n    if (newState === this.selected.value) {\n      return;\n    }\n    this.selected.next(newState);\n    if (this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { TreeNodeModel } from './tree-node.model';\n\n/*\n * A declarative model is built by traversing the Angular component tree.\n * Declarative = Tree node components dictate the model\n */\nexport class DeclarativeTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(parent: DeclarativeTreeNodeModel<T> | null) {\n    super();\n    this.parent = parent;\n    if (parent) {\n      parent._addChild(this);\n    }\n    this.children = [];\n  }\n\n  // Override for a more precise type\n  parent: DeclarativeTreeNodeModel<T> | null;\n  children: DeclarativeTreeNodeModel<T>[];\n\n  _addChild(child: DeclarativeTreeNodeModel<T>) {\n    this.children.push(child);\n  }\n\n  _removeChild(child: DeclarativeTreeNodeModel<T>) {\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  destroy() {\n    if (this.parent) {\n      this.parent._removeChild(this);\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf, TemplateRef } from '@angular/core';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TreeFeaturesService<T> {\n  selectable = false;\n  eager = true;\n  recursion: {\n    template: TemplateRef<ClrRecursiveForOfContext<T>>;\n    root: RecursiveTreeNodeModel<T>[];\n  };\n  childrenFetched: Subject<void> = new Subject();\n}\n\nexport function treeFeaturesFactory<T>(existing: TreeFeaturesService<T>) {\n  return existing || new TreeFeaturesService();\n}\n\nexport const TREE_FEATURES_PROVIDER = {\n  provide: TreeFeaturesService,\n  useFactory: treeFeaturesFactory,\n  /*\n   * The Optional + SkipSelf pattern ensures that in case of nested components, only the root one will\n   * instantiate a new service and all its children will reuse the root's instance.\n   * If there are several roots (in this case, several independent trees on a page), each root will instantiate\n   * its own service so they won't interfere with one another.\n   *\n   * TL;DR - Optional + SkipSelf = 1 instance of TreeFeaturesService per tree.\n   */\n  deps: [[new Optional(), new SkipSelf(), TreeFeaturesService]],\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { TreeNodeModel } from './models/tree-node.model';\n\n@Injectable()\nexport class TreeFocusManagerService<T> {\n  public rootNodeModels: TreeNodeModel<T>[];\n\n  private focusedNodeId: string;\n\n  private _focusRequest: Subject<string> = new Subject();\n\n  private _focusChange: Subject<string> = new Subject();\n\n  get focusRequest(): Observable<string> {\n    return this._focusRequest.asObservable();\n  }\n\n  get focusChange(): Observable<string> {\n    return this._focusChange.asObservable();\n  }\n\n  private findSiblings(model: TreeNodeModel<T>): TreeNodeModel<T>[] {\n    // the method will return not only sibling models but also itself among them\n    if (model.parent) {\n      return model.parent.children;\n    } else {\n      return this.rootNodeModels;\n    }\n  }\n\n  private findLastVisibleInNode(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    // the method will traverse through until it finds the last visible node from the given node\n    if (!model) {\n      return;\n    }\n    if (model.expanded && model.children.length > 0) {\n      const children = model.children;\n      const lastChild = children[children.length - 1];\n      return this.findLastVisibleInNode(lastChild);\n    } else {\n      return model;\n    }\n  }\n\n  private findNextFocusable(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex < siblings.length - 1) {\n      return siblings[selfIndex + 1];\n    } else if (selfIndex === siblings.length - 1) {\n      return this.findNextFocusable(model.parent);\n    }\n  }\n\n  private findLastVisibleInTree(): TreeNodeModel<T> {\n    const lastRootNode =\n      this.rootNodeModels && this.rootNodeModels.length && this.rootNodeModels[this.rootNodeModels.length - 1];\n    return this.findLastVisibleInNode(lastRootNode);\n  }\n\n  private findNodeAbove(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex === 0) {\n      return model.parent;\n    } else if (selfIndex > 0) {\n      return this.findLastVisibleInNode(siblings[selfIndex - 1]);\n    }\n  }\n\n  private findNodeBelow(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    if (model.expanded && model.children.length > 0) {\n      return model.children[0];\n    } else {\n      return this.findNextFocusable(model);\n    }\n  }\n\n  focusNode(model: TreeNodeModel<T>): void {\n    if (model) {\n      this._focusRequest.next(model.nodeId);\n    }\n  }\n\n  broadcastFocusedNode(nodeId: string): void {\n    if (this.focusedNodeId !== nodeId) {\n      this.focusedNodeId = nodeId;\n      this._focusChange.next(nodeId);\n    }\n  }\n\n  focusParent(model: TreeNodeModel<T>): void {\n    if (model) {\n      this.focusNode(model.parent);\n    }\n  }\n\n  focusFirstVisibleNode(): void {\n    const focusModel = this.rootNodeModels && this.rootNodeModels[0];\n    this.focusNode(focusModel);\n  }\n\n  focusLastVisibleNode(): void {\n    this.focusNode(this.findLastVisibleInTree());\n  }\n\n  focusNodeAbove(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeAbove(model));\n  }\n\n  focusNodeBelow(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeBelow(model));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '.clr-treenode-link',\n})\nexport class ClrTreeNodeLink {\n  constructor(private el: ElementRef) {}\n\n  activate() {\n    if (this.el.nativeElement && this.el.nativeElement.click) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger, state } from '@angular/animations';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { KeyCodes } from '@clr/core/common';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { keyValidator, preventArrowKeyScroll } from '../../utils/focus/key-focus/util';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { DeclarativeTreeNodeModel } from './models/declarative-tree-node.model';\nimport { ClrSelectedState } from './models/selected-state.enum';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nconst LVIEW_CONTEXT_INDEX = 8;\n\n@Component({\n  selector: 'clr-tree-node',\n  templateUrl: './tree-node.html',\n  providers: [\n    UNIQUE_ID_PROVIDER,\n    TREE_FEATURES_PROVIDER,\n    IfExpandService,\n    { provide: LoadingListener, useExisting: IfExpandService },\n  ],\n  animations: [\n    trigger('toggleChildrenAnim', [\n      transition('collapsed => expanded', [style({ height: 0 }), animate(200, style({ height: '*' }))]),\n      transition('expanded => collapsed', [style({ height: '*' }), animate(200, style({ height: 0 }))]),\n      state('expanded', style({ height: '*', 'overflow-y': 'visible' })),\n      state('collapsed', style({ height: 0 })),\n    ]),\n  ],\n  host: {\n    '[attr.role]': '\"treeitem\"',\n    '[class.clr-tree-node]': 'true',\n  },\n})\nexport class ClrTreeNode<T> implements OnInit, OnDestroy {\n  STATES = ClrSelectedState;\n  private skipEmitChange = false;\n\n  constructor(\n    @Inject(UNIQUE_ID) public nodeId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional()\n    @SkipSelf()\n    parent: ClrTreeNode<T>,\n    public featuresService: TreeFeaturesService<T>,\n    public expandService: IfExpandService,\n    public commonStrings: ClrCommonStringsService,\n    private focusManager: TreeFocusManagerService<T>,\n    injector: Injector\n  ) {\n    if (this.featuresService.recursion) {\n      // I'm completely stuck, we have to hack into private properties until either\n      // https://github.com/angular/angular/issues/14935 or https://github.com/angular/angular/issues/15998\n      // are fixed\n      // This is for non-ivy implementations\n      if ((<any>injector).view) {\n        this._model = (<any>injector).view.context.clrModel;\n      } else {\n        // Ivy puts this on a specific index of a _lView property\n        // tslint:disable-next-line\n        this._model = (<any>injector)._lView[LVIEW_CONTEXT_INDEX].clrModel;\n      }\n    } else {\n      // Force cast for now, not sure how to tie the correct type here to featuresService.recursion\n      this._model = new DeclarativeTreeNodeModel(parent ? <DeclarativeTreeNodeModel<T>>parent._model : null);\n    }\n    this._model.nodeId = this.nodeId;\n  }\n\n  _model: TreeNodeModel<T>;\n\n  isExpandable() {\n    if (typeof this.expandable !== 'undefined') {\n      return this.expandable;\n    }\n    return !!this.expandService.expandable || (this._model.children && this._model.children.length > 0);\n  }\n\n  @Input('clrSelected')\n  get selected(): ClrSelectedState | boolean {\n    return this._model.selected.value;\n  }\n  set selected(value: ClrSelectedState | boolean) {\n    this.featuresService.selectable = true;\n    // Gracefully handle falsy states like null or undefined because it's just easier than answering questions.\n    // This shouldn't happen with strict typing on the app's side, but it's not up to us.\n    if (value === null || typeof value === 'undefined') {\n      value = ClrSelectedState.UNSELECTED;\n    }\n    // We match booleans to the corresponding ClrSelectedState\n    if (typeof value === 'boolean') {\n      value = value ? ClrSelectedState.SELECTED : ClrSelectedState.UNSELECTED;\n    }\n    // We propagate only if the tree is in smart mode, and skip emitting the output when we set the input\n    // See https://github.com/vmware/clarity/issues/3073\n    this.skipEmitChange = true;\n    this._model.setSelected(value, this.featuresService.eager, this.featuresService.eager);\n    this.skipEmitChange = false;\n  }\n\n  @Output('clrSelectedChange') selectedChange = new EventEmitter<ClrSelectedState>(false);\n\n  get ariaSelected(): boolean {\n    return this.featuresService.selectable ? this._model.selected.value === ClrSelectedState.SELECTED : null;\n  }\n\n  // Allows the consumer to override our logic deciding if a node is expandable.\n  // Useful for recursive trees that don't want to pre-load one level ahead just to know which nodes are expandable.\n  @Input('clrExpandable') expandable: boolean | undefined;\n\n  // I'm caving on this, for tree nodes I think we can tolerate having a two-way binding on the component\n  // rather than enforce the clrIfExpanded structural directive for dynamic cases. Mostly because for the smart\n  // case, you can't use a structural directive, it would need to go on an ng-container.\n  @Input('clrExpanded')\n  get expanded(): boolean {\n    return this.expandService.expanded;\n  }\n  set expanded(value: boolean) {\n    this.expandService.expanded = value;\n  }\n\n  @Output('clrExpandedChange') expandedChange = new EventEmitter<boolean>();\n\n  private subscriptions: Subscription[] = [];\n\n  contentContainerTabindex = -1;\n  @ViewChild('contentContainer', { read: ElementRef, static: true })\n  private contentContainer: ElementRef;\n\n  ngOnInit() {\n    this._model.expanded = this.expanded;\n    this.subscriptions.push(\n      this._model.selected.pipe(filter(() => !this.skipEmitChange)).subscribe(value => {\n        this.selectedChange.emit(value);\n      })\n    );\n    this.subscriptions.push(\n      this.expandService.expandChange.subscribe(value => {\n        this.expandedChange.emit(value);\n        this._model.expanded = value;\n      })\n    );\n    this.subscriptions.push(\n      this.focusManager.focusRequest.subscribe(nodeId => {\n        if (this.nodeId === nodeId) {\n          this.focusTreeNode();\n        }\n      }),\n      this.focusManager.focusChange.subscribe(nodeId => {\n        this.checkTabIndex(nodeId);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this._model.destroy();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  // @ContentChild would have been more succinct\n  // but it doesn't offer a way to query only an immediate child\n  @ContentChildren(ClrTreeNodeLink, { descendants: false })\n  private treeNodeLinkList: QueryList<ClrTreeNodeLink>;\n\n  get treeNodeLink() {\n    return this.treeNodeLinkList && this.treeNodeLinkList.first;\n  }\n\n  private setTabIndex(value: number) {\n    this.contentContainerTabindex = value;\n    this.contentContainer.nativeElement.setAttribute('tabindex', value);\n  }\n\n  private checkTabIndex(nodeId: string): void {\n    if (isPlatformBrowser(this.platformId) && this.nodeId !== nodeId && this.contentContainerTabindex !== -1) {\n      this.setTabIndex(-1);\n    }\n  }\n\n  focusTreeNode(): void {\n    if (isPlatformBrowser(this.platformId) && document.activeElement !== this.contentContainer.nativeElement) {\n      this.setTabIndex(0);\n      this.contentContainer.nativeElement.focus();\n    }\n  }\n\n  broadcastFocusOnContainer() {\n    this.focusManager.broadcastFocusedNode(this.nodeId);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // Two reasons to prevent default behavior:\n    // 1. to prevent scrolling on arrow keys\n    // 2. Assistive Technology focus differs from Keyboard focus behavior.\n    //    By default, pressing arrow key makes AT focus go into the nested content of the item.\n    preventArrowKeyScroll(event);\n\n    // https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-22\n    switch (keyValidator(event.key)) {\n      case KeyCodes.ArrowUp:\n        this.focusManager.focusNodeAbove(this._model);\n        break;\n      case KeyCodes.ArrowDown:\n        this.focusManager.focusNodeBelow(this._model);\n        break;\n      case KeyCodes.ArrowRight:\n        this.expandOrFocusFirstChild();\n        break;\n      case KeyCodes.ArrowLeft:\n        this.collapseOrFocusParent();\n        break;\n      case KeyCodes.Home:\n        this.focusManager.focusFirstVisibleNode();\n        break;\n      case KeyCodes.End:\n        this.focusManager.focusLastVisibleNode();\n        break;\n      case KeyCodes.Enter:\n        this.triggerDefaultAction();\n        break;\n      case KeyCodes.Space:\n        // to prevent scrolling on space key in this specific case\n        event.preventDefault();\n        this.triggerDefaultAction();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private expandOrFocusFirstChild() {\n    if (this.expanded) {\n      // if the node is already expanded and has children, focus its very first child\n      if (this._model.children.length > 0) {\n        this.focusManager.focusNodeBelow(this._model);\n      }\n    } else {\n      // we must check if the node is expandable, in order to set .expanded to true from false\n      // because we shouldn't set .expanded to true if it's not expandable node\n      if (this.isExpandable()) {\n        this.expandService.expanded = true;\n      }\n    }\n  }\n\n  private collapseOrFocusParent() {\n    if (this.expanded) {\n      this.expandService.expanded = false;\n    } else {\n      this.focusManager.focusParent(this._model);\n    }\n  }\n\n  private triggerDefaultAction() {\n    if (this.treeNodeLink) {\n      this.treeNodeLink.activate();\n    } else {\n      if (this.featuresService.selectable) {\n        this._model.toggleSelection(this.featuresService.eager);\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { ClrTreeNode } from './tree-node';\n\n@Component({\n  selector: 'clr-tree',\n  template: `\n    <ng-content></ng-content>\n    <clr-recursive-children *ngIf=\"featuresService.recursion\"\n                            [children]=\"featuresService.recursion.root\"></clr-recursive-children>\n  `,\n  providers: [TREE_FEATURES_PROVIDER, TreeFocusManagerService],\n  host: {\n    '[attr.tabindex]': 'tabindex',\n    '[attr.role]': '\"tree\"',\n    '[attr.aria-multiselectable]': 'isMultiSelectable',\n  },\n})\nexport class ClrTree<T> implements AfterContentInit, OnDestroy {\n  constructor(\n    public featuresService: TreeFeaturesService<T>,\n    private focusManagerService: TreeFocusManagerService<T>,\n    private el: ElementRef\n  ) {}\n\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrLazy')\n  set lazy(value: boolean) {\n    this.featuresService.eager = !value;\n  }\n\n  tabindex = 0;\n\n  get isMultiSelectable() {\n    return this.featuresService.selectable && this.rootNodes.length > 0;\n  }\n\n  @HostListener('focusin', ['$event'])\n  onFocusIn(event: FocusEvent) {\n    if (event.target === this.el.nativeElement) {\n      // After discussing with the team, I've made it so that when the tree receives focus, the first visible node will be focused.\n      // This will prevent from the page scrolling abruptly to the first selected node if it exist in a deeply nested tree.\n      this.focusManagerService.focusFirstVisibleNode();\n\n      // when the first child gets focus,\n      // tree should no longer have tabindex of 0;\n      delete this.tabindex;\n    }\n  }\n\n  @ContentChildren(ClrTreeNode) private rootNodes: QueryList<ClrTreeNode<T>>;\n\n  ngAfterContentInit() {\n    this.setRootNodes();\n    this.subscriptions.push(\n      this.rootNodes.changes.subscribe(() => {\n        this.setRootNodes();\n      })\n    );\n  }\n\n  private setRootNodes(): void {\n    // if node has no parent, it's a root node\n    // for recursive tree, this.rootNodes registers also nested children\n    // so we have to use filter to extract the ones that are truly root nodes\n    this.focusManagerService.rootNodeModels = this.rootNodes.map(node => node._model).filter(node => !node.parent);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isObservable, Subscription } from 'rxjs';\n\nimport { TreeNodeModel } from './tree-node.model';\nimport { AsyncArray, isPromise } from './async-array';\nimport { TreeFeaturesService } from '../tree-features.service';\n\n/*\n * A recursive model is built received from the app and traversed to create the corresponding components.\n * Recursive = Model dictates the tree node components\n */\nexport class RecursiveTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(\n    model: T,\n    parent: RecursiveTreeNodeModel<T> | null,\n    private getChildren: (node: T) => AsyncArray<T> | undefined,\n    private featuresService: TreeFeaturesService<T> | undefined\n  ) {\n    super();\n    this.model = model;\n    this.parent = parent;\n  }\n\n  parent: RecursiveTreeNodeModel<T> | null;\n\n  private childrenFetched = false;\n\n  clearChildren() {\n    this._children.forEach(child => child.destroy());\n    delete this._children;\n    this.childrenFetched = false;\n  }\n\n  fetchChildren() {\n    if (this.childrenFetched) {\n      return;\n    }\n\n    const asyncChildren = this.getChildren(this.model);\n    if (isPromise(asyncChildren)) {\n      this.loading = true;\n      asyncChildren.then(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (isObservable(asyncChildren)) {\n      this.loading = true;\n      this.subscription = asyncChildren.subscribe(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (asyncChildren) {\n      // Synchronous case\n      this._children = this.wrapChildren(asyncChildren);\n    } else {\n      this._children = [];\n    }\n    this.childrenFetched = true;\n    if (this.featuresService) {\n      this.featuresService.childrenFetched.next();\n    }\n  }\n\n  private wrapChildren(rawModels: T[]) {\n    return rawModels.map(m => new RecursiveTreeNodeModel(m, this, this.getChildren, this.featuresService));\n  }\n\n  private _children: RecursiveTreeNodeModel<T>[] = [];\n  get children(): RecursiveTreeNodeModel<T>[] {\n    this.fetchChildren();\n    return this._children;\n  }\n  set children(value: RecursiveTreeNodeModel<T>[]) {\n    this._children = value;\n  }\n\n  private subscription: Subscription;\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ArrowKeyDirection {\n  UP = 'up',\n  DOWN = 'down',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// We need to make sure people can give us null or undefined children even if they run strict type checking.\nimport { Observable } from 'rxjs';\n\nexport type AsyncArray<T> =\n  | T[]\n  | null\n  | undefined\n  | Promise<T[] | null | undefined>\n  | Observable<T[] | null | undefined>;\n\nexport function isPromise<T>(o: AsyncArray<T>): o is Promise<T[]> {\n  // Shamelessly copied from every open-source project out there.\n  return o && typeof (<any>o).then === 'function';\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Input, OnChanges, OnDestroy, TemplateRef } from '@angular/core';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { AsyncArray } from './models/async-array';\nimport { Subscription } from 'rxjs';\n\nexport interface ClrRecursiveForOfContext<T> {\n  $implicit: T;\n  clrModel: TreeNodeModel<T>;\n}\n\n@Directive({ selector: '[clrRecursiveFor][clrRecursiveForOf]' })\nexport class ClrRecursiveForOf<T> implements OnChanges, OnDestroy {\n  constructor(\n    private template: TemplateRef<ClrRecursiveForOfContext<T>>,\n    private featuresService: TreeFeaturesService<T>,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  // TODO: accept NgIterable<T>\n  @Input('clrRecursiveForOf') nodes: T | T[];\n\n  // TODO: accept NgIterable<T> return type\n  @Input('clrRecursiveForGetChildren') getChildren: (node: T) => AsyncArray<T>;\n\n  private childrenFetchSubscription: Subscription;\n\n  // I'm using OnChanges instead of OnInit to easily keep up to date with dynamic trees. Maybe optimizable later.\n  ngOnChanges() {\n    let wrapped: RecursiveTreeNodeModel<T>[];\n    if (Array.isArray(this.nodes)) {\n      wrapped = this.nodes.map(node => new RecursiveTreeNodeModel(node, null, this.getChildren, this.featuresService));\n    } else {\n      wrapped = [new RecursiveTreeNodeModel(this.nodes, null, this.getChildren, this.featuresService)];\n    }\n    if (!this.childrenFetchSubscription) {\n      this.childrenFetchSubscription = this.featuresService.childrenFetched.subscribe(() => {\n        this.cdr.detectChanges();\n      });\n    }\n\n    this.featuresService.recursion = {\n      template: this.template,\n      root: wrapped,\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.childrenFetchSubscription) {\n      this.childrenFetchSubscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\n\n@Component({\n  selector: 'clr-recursive-children',\n  template: `\n    <ng-container *ngIf=\"shouldRender()\">\n      <ng-container *ngFor=\"let child of parent?.children || children\">\n        <ng-container *ngTemplateOutlet=\"featuresService.recursion.template; context: getContext(child)\"></ng-container>\n      </ng-container>\n    </ng-container>\n  `,\n  host: {\n    '[attr.role]': '\"group\"', // Safari + VO needs direct relationship between treeitem and group; no element should exist between them\n  },\n})\n/**\n * Internal component, do not export!\n * This is part of the hack to get around https://github.com/angular/angular/issues/15998\n */\nexport class RecursiveChildren<T> {\n  constructor(public featuresService: TreeFeaturesService<T>, @Optional() private expandService: IfExpandService) {\n    if (expandService) {\n      this.subscription = this.expandService.expandChange.subscribe(value => {\n        if (!value && this.parent && !this.featuresService.eager && this.featuresService.recursion) {\n          // In the case of lazy-loading recursive trees, we clear the children on collapse.\n          // This is better in case they change between two user interaction, and that way\n          // the app itself can decide whether to cache them or not.\n          (<RecursiveTreeNodeModel<T>>this.parent).clearChildren();\n        }\n      });\n    }\n  }\n\n  shouldRender() {\n    return (\n      this.featuresService.recursion &&\n      // In the smart case, we eagerly render all the recursive children\n      // to make sure two-way bindings for selection are available.\n      // They will be hidden with CSS by the parent.\n      (this.featuresService.eager || !this.expandService || this.expandService.expanded)\n    );\n  }\n\n  // Offering the option to either give the parent node to recurse potentially lazily,\n  // or directly the list of children to display.\n  @Input('parent') parent: TreeNodeModel<T>;\n  @Input('children') children: TreeNodeModel<T>[];\n\n  getContext(node: TreeNodeModel<T>): ClrRecursiveForOfContext<T> {\n    return {\n      $implicit: node.model,\n      clrModel: node,\n    };\n  }\n\n  subscription: Subscription;\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrTreeNode } from './tree-node';\nimport { ClrTree } from './tree';\nimport { ClrRecursiveForOf } from './recursive-for-of';\nimport { RecursiveChildren } from './recursive-children';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nexport const CLR_TREE_VIEW_DIRECTIVES: Type<any>[] = [ClrTree, ClrTreeNode, ClrRecursiveForOf, ClrTreeNodeLink];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrLoadingModule],\n  declarations: [CLR_TREE_VIEW_DIRECTIVES, RecursiveChildren],\n  exports: [CLR_TREE_VIEW_DIRECTIVES],\n})\nexport class ClrTreeViewModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrDatagridModule } from './datagrid/datagrid.module';\nimport { ClrStackViewModule } from './stack-view/stack-view.module';\nimport { ClrTreeViewModule } from './tree-view/tree-view.module';\n\n@NgModule({ exports: [ClrDatagridModule, ClrStackViewModule, ClrTreeViewModule] })\nexport class ClrDataModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\n\nexport abstract class FocusableItem {\n  id: string;\n  disabled?: boolean;\n\n  abstract focus(): void;\n  abstract blur(): void;\n  abstract activate?(): void;\n\n  up?: FocusableItem | Observable<FocusableItem>;\n  down?: FocusableItem | Observable<FocusableItem>;\n  left?: FocusableItem | Observable<FocusableItem>;\n  right?: FocusableItem | Observable<FocusableItem>;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Type } from '@angular/core';\nimport { UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\nexport function customFocusableItemProvider<T>(implementation: Type<T>) {\n  return [\n    UNIQUE_ID_PROVIDER,\n    implementation,\n    {\n      provide: FocusableItem,\n      useExisting: implementation,\n    },\n  ];\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { isObservable, of } from 'rxjs';\n\nimport { ArrowKeyDirection } from './arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item/focusable-item';\n\n@Injectable()\nexport class FocusService {\n  constructor(private renderer: Renderer2) {}\n\n  private _unlistenFuncs = [];\n  private _current: FocusableItem;\n  public get current() {\n    return this._current;\n  }\n\n  reset(first: FocusableItem) {\n    this._current = first;\n  }\n\n  listenToArrowKeys(el: HTMLElement) {\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowup', event => !this.move(ArrowKeyDirection.UP)));\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowdown', event => !this.move(ArrowKeyDirection.DOWN))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowleft', event => !this.move(ArrowKeyDirection.LEFT))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowright', event => !this.move(ArrowKeyDirection.RIGHT))\n    );\n  }\n\n  registerContainer(el: HTMLElement) {\n    this.renderer.setAttribute(el, 'tabindex', '0');\n    this.listenToArrowKeys(el);\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.space', () => !this.activateCurrent()));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.enter', () => !this.activateCurrent()));\n  }\n\n  moveTo(item: FocusableItem) {\n    /**\n     * Make sure that item is not undefined,\n     * This is safety net in the case that someone sometime decide to\n     * call this method without having FocusableItem.\n     */\n    if (item === undefined) {\n      return;\n    }\n\n    if (this.current) {\n      this.current.blur();\n    }\n    item.focus();\n    this._current = item;\n  }\n\n  move(direction: ArrowKeyDirection): boolean {\n    let moved = false;\n    if (this.current) {\n      const next = this.current[direction];\n      if (next) {\n        // Turning the value into an Observable isn't great, but it's the fastest way to avoid code duplication.\n        // If performance ever matters for this, we can refactor using additional private methods.\n        const nextObs = isObservable(next) ? next : of(next);\n        nextObs.subscribe(item => {\n          if (item) {\n            this.moveTo(item);\n            moved = true;\n          }\n        });\n      }\n    }\n    return moved;\n  }\n\n  activateCurrent() {\n    if (this.current && this.current.activate) {\n      this.current.activate();\n      return true;\n    }\n    return false;\n  }\n\n  public detachListeners() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n  }\n}\n\nexport function clrFocusServiceFactory(existing: FocusService, renderer: Renderer2) {\n  return existing || new FocusService(renderer);\n}\n\nexport const FOCUS_SERVICE_PROVIDER = {\n  provide: FocusService,\n  useFactory: clrFocusServiceFactory,\n  deps: [[new Optional(), new SkipSelf(), FocusService], Renderer2],\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\nimport { ArrowKeyDirection } from '../arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item';\n\nexport class Linkers {\n  /**\n   * Links a set of focusable items to a parent along one direction\n   */\n  static linkParent(\n    items: FocusableItem[],\n    parent: FocusableItem | Observable<FocusableItem>,\n    direction: ArrowKeyDirection\n  ) {\n    items.forEach(item => (item[direction] = parent));\n  }\n\n  /**\n   * Double-links a set of focusable items vertically, possibly looping\n   */\n  static linkVertical(items: FocusableItem[], loop = true) {\n    items.forEach((item, index) => {\n      if (index > 0) {\n        item.up = items[index - 1];\n      }\n      if (index < items.length - 1) {\n        item.down = items[index + 1];\n      }\n    });\n    if (loop && items.length > 1) {\n      items[0].up = items[items.length - 1];\n      items[items.length - 1].down = items[0];\n    }\n  }\n}\n\n// Right now I only need the two linkers above, but we can easily add more linkers. A couple examples:\n// export function linkHorizontal(items: FocusableItem[], loop = true);\n// export function linkTable(items: FocusableItem[][]);\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable, Observer } from 'rxjs';\n\nexport function wrapObservable<T>(\n  observable: Observable<T>,\n  onSubscribe?: (observer: Observer<T>) => void,\n  onUnsubscribe?: (observer: Observer<T>) => void\n): Observable<T> {\n  return Observable.create((observer: Observer<T>) => {\n    onSubscribe(observer);\n    const subscription = observable.subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n      if (onUnsubscribe) {\n        onUnsubscribe(observer);\n      }\n    };\n  });\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID, Renderer2, SkipSelf } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ClrPopoverToggleService } from '../../../utils/popover/providers/popover-toggle.service';\nimport { customFocusableItemProvider } from '../../../utils/focus/focusable-item/custom-focusable-item-provider';\nimport { UNIQUE_ID } from '../../../utils/id-generator/id-generator.service';\nimport { ArrowKeyDirection } from '../../../utils/focus/arrow-key-direction.enum';\nimport { FocusService } from '../../../utils/focus/focus.service';\nimport { FocusableItem } from '../../../utils/focus/focusable-item/focusable-item';\nimport { Linkers } from '../../../utils/focus/focusable-item/linkers';\nimport { wrapObservable } from '../../../utils/focus/wrap-observable';\n\n@Injectable()\nexport class DropdownFocusHandler implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private renderer: Renderer2,\n    @SkipSelf()\n    @Optional()\n    private parent: DropdownFocusHandler,\n    private toggleService: ClrPopoverToggleService,\n    private focusService: FocusService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.resetChildren();\n    this.moveToFirstItemWhenOpen();\n    if (!this.parent) {\n      this.handleRootFocus();\n    }\n  }\n\n  private _unlistenFuncs = [];\n\n  /**\n   * If the dropdown was opened by clicking on the trigger, we automatically move to the first item\n   */\n  moveToFirstItemWhenOpen() {\n    this.toggleService.openChange.subscribe(open => {\n      if (open && this.toggleService.originalEvent) {\n        // Even if we properly waited for ngAfterViewInit, the container still wouldn't be attached to the DOM.\n        // So setTimeout is the only way to wait for the container to be ready to move focus to first item.\n        setTimeout(() => {\n          this.focusService.moveTo(this);\n          if (this.parent) {\n            this.focusService.move(ArrowKeyDirection.RIGHT);\n          } else {\n            this.focusService.move(ArrowKeyDirection.DOWN);\n          }\n        });\n      }\n    });\n  }\n\n  private focusBackOnTrigger = false;\n\n  /**\n   * Focus on the menu when it opens, and focus back on the root trigger when the whole dropdown becomes closed\n   */\n  handleRootFocus() {\n    this.toggleService.openChange.subscribe(open => {\n      if (!open) {\n        // We reset the state of the focus service both on initialization and when closing.\n        this.focusService.reset(this);\n        // But we only actively focus the trigger when closing, not on initialization.\n        if (this.focusBackOnTrigger) {\n          this.focus();\n        }\n      }\n      this.focusBackOnTrigger = open;\n    });\n  }\n\n  private _trigger: HTMLElement;\n  get trigger() {\n    return this._trigger;\n  }\n  set trigger(el: HTMLElement) {\n    this._trigger = el;\n\n    if (this.parent) {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowright', event => this.toggleService.toggleWithEvent(event))\n      );\n    } else {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowup', event => this.toggleService.toggleWithEvent(event))\n      );\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowdown', event => this.toggleService.toggleWithEvent(event))\n      );\n      this.focusService.listenToArrowKeys(el);\n    }\n  }\n\n  private _container: HTMLElement;\n  get container() {\n    return this._container;\n  }\n  set container(el: HTMLElement) {\n    this._container = el;\n\n    // whether root container or not, tab key should always toggle (i.e. close) the container\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.tab', event => this.toggleService.toggleWithEvent(event))\n    );\n\n    if (this.parent) {\n      // if it's a nested container, pressing esc has the same effect as pressing left key, which closes the current\n      // popup and moves up to its parent. Here, we stop propagation so that the parent container\n      // doesn't receive the esc keydown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => {\n          this.focusService.move(ArrowKeyDirection.LEFT);\n          event.stopPropagation();\n        })\n      );\n    } else {\n      // The root container is the only one we register to the focus service, others do not need focus\n      this.focusService.registerContainer(el);\n\n      // The root container will simply close the container when esc key is pressed\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => this.toggleService.toggleWithEvent(event))\n      );\n\n      // When the user moves focus outside of the menu, we close the dropdown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'blur', event => {\n          // we clear out any existing focus on the items\n          this.children.pipe(take(1)).subscribe(items => items.forEach(item => item.blur()));\n\n          // event.relatedTarget is null in IE11. In that case we use document.activeElement which correctly points\n          // to the element we want to check. Note that other browsers might point document.activeElement to the\n          // wrong element. This is ok, because all the other browsers we support relies on event.relatedTarget.\n          const target = event.relatedTarget || document.activeElement;\n\n          // If the user clicks on an item which triggers the blur, we don't want to close it since it may open a submenu.\n          // In the case of needing to close it (i.e. user selected an item and the dropdown menu is set to close on\n          // selection), dropdown-item.ts handles it.\n          if (target && isPlatformBrowser(this.platformId)) {\n            if (el.contains(target) || target === this.trigger) {\n              return;\n            }\n          }\n          // We let the user move focus to where the want, we don't force the focus back on the trigger\n          this.focusBackOnTrigger = false;\n          this.toggleService.open = false;\n        })\n      );\n    }\n  }\n\n  focus() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.focus();\n    }\n  }\n  blur() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.trigger.click();\n    }\n  }\n\n  private children: ReplaySubject<FocusableItem[]>;\n  right?: Observable<FocusableItem>;\n  down?: Observable<FocusableItem>;\n  up?: Observable<FocusableItem>;\n\n  private openAndGetChildren() {\n    return wrapObservable(this.children, () => (this.toggleService.open = true));\n  }\n  private closeAndGetThis() {\n    return wrapObservable(of(this), () => (this.toggleService.open = false));\n  }\n\n  resetChildren() {\n    this.children = new ReplaySubject<FocusableItem[]>(1);\n    if (this.parent) {\n      this.right = this.openAndGetChildren().pipe(map(all => all[0]));\n    } else {\n      this.down = this.openAndGetChildren().pipe(map(all => all[0]));\n      this.up = this.openAndGetChildren().pipe(map(all => all[all.length - 1]));\n    }\n  }\n\n  addChildren(children: FocusableItem[]) {\n    Linkers.linkVertical(children);\n    if (this.parent) {\n      Linkers.linkParent(children, this.closeAndGetThis(), ArrowKeyDirection.LEFT);\n    }\n    this.children.next(children);\n  }\n\n  ngOnDestroy() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n    this.focusService.detachListeners();\n  }\n}\n\nexport const DROPDOWN_FOCUS_HANDLER_PROVIDER = customFocusableItemProvider(DropdownFocusHandler);\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class RootDropdownService {\n  private _changes: Subject<boolean> = new Subject<boolean>();\n\n  get changes(): Observable<boolean> {\n    return this._changes.asObservable();\n  }\n\n  closeMenus(): void {\n    this._changes.next(false);\n  }\n}\n\nexport function clrRootDropdownFactory(existing: RootDropdownService) {\n  return existing || new RootDropdownService();\n}\n\nexport const ROOT_DROPDOWN_PROVIDER = {\n  provide: RootDropdownService,\n  useFactory: clrRootDropdownFactory,\n  deps: [[new Optional(), new SkipSelf(), RootDropdownService]],\n};\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Do NOT Angular this up. It assumes we're in the DOM, plays with native elements, ...\n * It could potentially be used as part of @clr/ui as a vanilla Javascript helper.\n */\n\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { PopoverOptions } from './popover-options.interface';\nexport enum Point {\n  RIGHT_CENTER,\n  RIGHT_TOP,\n  RIGHT_BOTTOM,\n  TOP_CENTER,\n  TOP_RIGHT,\n  TOP_LEFT,\n  BOTTOM_CENTER,\n  BOTTOM_RIGHT,\n  BOTTOM_LEFT,\n  LEFT_CENTER,\n  LEFT_TOP,\n  LEFT_BOTTOM,\n}\n\nconst POSITION_RELATIVE = 'relative';\nconst POSITION_ABSOLUTE = 'absolute';\nconst POSITION_FIXED = 'fixed';\n\nconst OVERFLOW_SCROLL = 'scroll';\nconst OVERFLOW_AUTO = 'auto';\n\nexport class Popover {\n  private _scroll: Subject<void>;\n\n  constructor(private element: any) {\n    // Browsers don't agree with what to do if some of these are not specified, so we set them all to be safe.\n    element.style.position = POSITION_ABSOLUTE;\n    element.style.top = 0;\n    element.style.bottom = 'auto';\n    element.style.left = 0;\n    element.style.right = 'auto';\n  }\n\n  // TODO: need a way to account for parameters that change dynamically (positioning).\n  public anchor(\n    anchor: any,\n    anchorAlign: Point,\n    popoverAlign: Point,\n    { offsetX = 0, offsetY = 0, useAnchorParent = false }: PopoverOptions = {}\n  ): Observable<any> {\n    // TODO: we are assuming here that the popover is inside or next to the anchor.\n    // We'd need to go up the popover tree too otherwise\n\n    this.addScrollEventListeners(anchor);\n    if (useAnchorParent) {\n      anchor = anchor.parentNode;\n    }\n    // explicitly override anchor's style to static\n    anchor.style.position = 'static';\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const popoverRect = this.element.getBoundingClientRect();\n\n    // position of left top corner of anchor + the offset\n    let leftDiff: number = anchorRect.left - popoverRect.left + offsetX;\n    let topDiff: number = anchorRect.top - popoverRect.top + offsetY;\n\n    // first, adjust positioning based on anchor's align point\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += anchorRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += anchorRect.height / 2;\n        leftDiff += anchorRect.width;\n        break;\n      default:\n    }\n\n    // second, adjust positioning based on popover's align point\n    switch (popoverAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        leftDiff -= popoverRect.width;\n        break;\n      default:\n    }\n\n    // Third, adjust with popover's margins based on the two align points.\n    // Here, we make an assumption that popover is primarily positioned outside the\n    // anchor with minor offset. Without this assumption, it's impossible to apply\n    // the popover's margins in a predictable way. For example, assume that a popover\n    // and its anchor are exactly the same size. if a popover is positioned inside the\n    // anchor (which is technically possible), then it becomes impossible to know what to do\n    // if the popover has a non-zero margin value all around (because applying the margin in\n    // all four directions will result in no margin visually, which isn't what we want).\n    // Therefore, our logic makes assumptions about margins of interest given the points,\n    // and only covers the cases where popover is outside the anchor.\n\n    const popoverComputedStyle = getComputedStyle(this.element);\n    const marginLeft = parseInt(popoverComputedStyle.marginLeft, 10);\n    const marginRight = parseInt(popoverComputedStyle.marginRight, 10);\n    const marginTop = parseInt(popoverComputedStyle.marginTop, 10);\n    const marginBottom = parseInt(popoverComputedStyle.marginBottom, 10);\n\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n      case Point.TOP_RIGHT:\n      case Point.RIGHT_TOP:\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.LEFT_BOTTOM:\n      case Point.BOTTOM_LEFT:\n      case Point.BOTTOM_RIGHT:\n      case Point.RIGHT_BOTTOM:\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.TOP_CENTER:\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += marginTop;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff -= marginRight;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        break;\n      default:\n    }\n\n    this.element.style.transform = `translateX(${Math.round(leftDiff)}px) translateY(${Math.round(topDiff)}px)`;\n    return this._scroll.asObservable();\n  }\n\n  public release() {\n    this.element.style.transform = '';\n    this.removeScrollEventListeners();\n  }\n\n  private isPositioned(container: any) {\n    const position = getComputedStyle(container).position;\n    return position === POSITION_RELATIVE || position === POSITION_ABSOLUTE || position === POSITION_FIXED;\n  }\n\n  /*\n   * Containers up to the first positioned one will have an event on scroll\n   */\n\n  private scrollableElements: HTMLElement[] = [];\n\n  private emitScrollEvent() {\n    this._scroll.next();\n  }\n\n  private boundOnScrollListener: any = this.emitScrollEvent.bind(this);\n\n  private addScrollEventListeners(e: any) {\n    this._scroll = new Subject<void>();\n    const anchor: any = e;\n    let current: any = e;\n    while (current && current !== document) {\n      if (this.scrolls(current)) {\n        current.addEventListener('scroll', this.boundOnScrollListener);\n        this.scrollableElements.push(current);\n      }\n      if (current !== anchor && this.isPositioned(current)) {\n        break;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  private removeScrollEventListeners() {\n    for (const elem of this.scrollableElements) {\n      elem.removeEventListener('scroll', this.boundOnScrollListener);\n    }\n    this.scrollableElements.length = 0;\n    if (this._scroll) {\n      this._scroll.complete();\n      delete this._scroll;\n    }\n  }\n\n  private scrolls(container: any): boolean {\n    const computedStyles = getComputedStyle(container);\n    return (\n      computedStyles.overflowX === OVERFLOW_SCROLL ||\n      computedStyles.overflowX === OVERFLOW_AUTO ||\n      computedStyles.overflowY === OVERFLOW_SCROLL ||\n      computedStyles.overflowY === OVERFLOW_AUTO\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DROPDOWN_FOCUS_HANDLER_PROVIDER } from './providers/dropdown-focus-handler.service';\nimport { FOCUS_SERVICE_PROVIDER } from '../../utils/focus/focus.service';\n\nimport { ROOT_DROPDOWN_PROVIDER, RootDropdownService } from './providers/dropdown.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dropdown',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[class.dropdown]': 'true',\n    '[class.open]': 'toggleService.open',\n  },\n  providers: [\n    ROOT_DROPDOWN_PROVIDER,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    FOCUS_SERVICE_PROVIDER,\n    ClrPopoverToggleService,\n    DROPDOWN_FOCUS_HANDLER_PROVIDER,\n  ],\n})\nexport class ClrDropdown implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public parent: ClrDropdown,\n    public toggleService: ClrPopoverToggleService,\n    private cdr: ChangeDetectorRef,\n    dropdownService: RootDropdownService\n  ) {\n    this.subscriptions.push(dropdownService.changes.subscribe(value => (this.toggleService.open = value)));\n    this.subscriptions.push(toggleService.openChange.subscribe(value => this.cdr.markForCheck()));\n  }\n\n  @Input('clrCloseMenuOnItemClick') isMenuClosable: boolean = true;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\n@Injectable()\nexport class BasicFocusableItem implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private el: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    renderer.setAttribute(el.nativeElement, 'id', id);\n    renderer.setAttribute(el.nativeElement, 'tabindex', '-1');\n  }\n\n  disabled = false;\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n      this.el.nativeElement.focus();\n    }\n  }\n  blur() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n      this.el.nativeElement.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n\nexport const BASIC_FOCUSABLE_ITEM_PROVIDER = [\n  UNIQUE_ID_PROVIDER,\n  {\n    provide: FocusableItem,\n    useClass: BasicFocusableItem,\n  },\n];\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\nimport { ClrDropdown } from './dropdown';\nimport { BASIC_FOCUSABLE_ITEM_PROVIDER } from '../../utils/focus/focusable-item/basic-focusable-item.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\nimport { RootDropdownService } from './providers/dropdown.service';\n\n@Directive({\n  selector: '[clrDropdownItem]',\n  host: {\n    '[class.disabled]': 'disabled',\n    '[class.dropdown-item]': 'true',\n    '[attr.role]': '\"menuitem\"',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.disabled]': \"(disabled && setByDeprecatedDisabled)? '' : null\",\n    '[attr.id]': 'dropdownItemId',\n  },\n  providers: [BASIC_FOCUSABLE_ITEM_PROVIDER],\n})\nexport class ClrDropdownItem implements AfterViewInit {\n  constructor(\n    private dropdown: ClrDropdown,\n    private el: ElementRef<HTMLElement>,\n    private _dropdownService: RootDropdownService,\n    private renderer: Renderer2,\n    private focusableItem: FocusableItem\n  ) {}\n\n  private unlisten;\n  public setByDeprecatedDisabled: boolean = false;\n\n  @Input('clrDisabled')\n  set disabled(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n  }\n\n  get disabled() {\n    return this.focusableItem.disabled;\n  }\n\n  /*\n   * @deprecated since 3.0, remove in 4.0. the presence of this attribute makes it not-focusable in IE11. Use [clrDisabled] input instead.\n   */\n  @Input('disabled')\n  set disabledDeprecated(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n    this.setByDeprecatedDisabled = true;\n  }\n\n  get disabledDeprecated() {\n    return this.focusableItem.disabled;\n  }\n\n  /**\n   * Let you overwrite the focusable auto increment id.\n   */\n  @Input('id')\n  set dropdownItemId(value: string) {\n    this.focusableItem.id = value;\n  }\n  get dropdownItemId() {\n    return this.focusableItem.id;\n  }\n\n  ngAfterViewInit() {\n    this.unlisten = this.renderer.listen(this.el.nativeElement, 'click', () => this.onDropdownItemClick());\n  }\n\n  onDropdownItemClick(): void {\n    if (this.dropdown.isMenuClosable && !this.el.nativeElement.classList.contains('disabled')) {\n      this._dropdownService.closeMenus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unlisten();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum TabsLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterViewChecked,\n  ElementRef,\n  HostBinding,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { Point, Popover } from './popover';\nimport { PopoverOptions } from './popover-options.interface';\n\n// Literally any annotation would work here, but writing our own @HoneyBadger annotation feels overkill.\n@Injectable()\nexport abstract class AbstractPopover implements AfterViewChecked, OnDestroy {\n  constructor(injector: Injector, @SkipSelf() protected parentHost: ElementRef) {\n    this.el = injector.get(ElementRef);\n    this.toggleService = injector.get(ClrPopoverToggleService);\n    this.renderer = injector.get(Renderer2);\n    // Default anchor is the parent host\n    this.anchorElem = parentHost.nativeElement;\n\n    this.popoverInstance = new Popover(this.el.nativeElement);\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      if (change) {\n        this.anchor();\n        this.attachESCListener();\n      } else {\n        this.release();\n        this.detachESCListener();\n      }\n    });\n    if (this.toggleService.open) {\n      this.anchor();\n      this.attachESCListener();\n    }\n  }\n\n  protected el: ElementRef;\n  protected toggleService: ClrPopoverToggleService;\n  protected renderer: Renderer2;\n\n  private popoverInstance: Popover;\n  private subscription: Subscription;\n\n  private updateAnchor = false;\n\n  protected anchorElem: any;\n  protected anchorPoint: Point;\n  protected popoverPoint: Point;\n  protected popoverOptions: PopoverOptions = {};\n\n  protected ignoredElement: any;\n\n  protected anchor() {\n    this.updateAnchor = true;\n    // Ugh\n    this.ignore = this.toggleService.originalEvent;\n  }\n\n  protected release() {\n    this.detachOutsideClickListener();\n    this.popoverInstance.release();\n  }\n\n  ngAfterViewChecked() {\n    if (this.updateAnchor) {\n      this.updateAnchor = false;\n      this.popoverInstance\n        .anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n        .subscribe(() => {\n          // if a scroll event is detected, close the popover\n          this.toggleService.open = false;\n        });\n      this.attachOutsideClickListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this.release();\n    this.detachESCListener();\n    this.subscription.unsubscribe();\n  }\n\n  /*\n     * Fallback to hide when *clrIfOpen is not being used\n     */\n\n  @HostBinding('class.is-off-screen')\n  get isOffScreen() {\n    return this.toggleService.open ? false : true;\n  }\n\n  /*\n     * Until https://github.com/angular/angular/issues/8785 is supported, we don't have any way to instantiate\n     * a separate directive on the host. So let's do dirty but performant for now.\n     */\n  public closeOnOutsideClick = false;\n  private hostClickListener: () => void;\n  private documentClickListener: () => void;\n  private documentESCListener: () => void;\n  private ignoredElementClickListener: () => void;\n  private ignore: any;\n\n  private attachESCListener(): void {\n    if (!this.popoverOptions.ignoreGlobalESCListener) {\n      this.documentESCListener = this.renderer.listen('document', 'keydown', event => {\n        if (event && event.key) {\n          if (event.key === 'Escape' || event.key === 'Esc') {\n            this.toggleService.open = false;\n          }\n        }\n      });\n    }\n  }\n\n  private detachESCListener(): void {\n    if (this.documentESCListener) {\n      this.documentESCListener();\n      delete this.documentESCListener;\n    }\n  }\n\n  private attachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      this.hostClickListener = this.renderer.listen(this.el.nativeElement, 'click', event => (this.ignore = event));\n      if (this.ignoredElement) {\n        this.ignoredElementClickListener = this.renderer.listen(\n          this.ignoredElement,\n          'click',\n          event => (this.ignore = event)\n        );\n      }\n      this.documentClickListener = this.renderer.listen('document', 'click', event => {\n        if (event === this.ignore) {\n          delete this.ignore;\n        } else {\n          this.toggleService.open = false;\n        }\n      });\n    }\n  }\n\n  private detachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      if (this.hostClickListener) {\n        this.hostClickListener();\n        delete this.hostClickListener;\n      }\n      if (this.ignoredElementClickListener) {\n        this.ignoredElementClickListener();\n        delete this.ignoredElementClickListener;\n      }\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList,\n  SkipSelf,\n} from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\n\n@Component({\n  selector: 'clr-dropdown-menu',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[attr.role]': '\"menu\"',\n  },\n})\nexport class ClrDropdownMenu extends AbstractPopover implements AfterContentInit, OnDestroy {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef<HTMLElement>,\n    @Optional()\n    @SkipSelf()\n    nested: ClrDropdownMenu,\n    focusHandler: DropdownFocusHandler\n  ) {\n    if (!parentHost) {\n      throw new Error('clr-dropdown-menu should only be used inside of a clr-dropdown');\n    }\n    super(injector, parentHost);\n    if (!nested) {\n      // Default positioning for normal dropdown is bottom-left\n      this.anchorPoint = Point.BOTTOM_LEFT;\n      this.popoverPoint = Point.LEFT_TOP;\n    } else {\n      // Default positioning for nested dropdown is right-top\n      this.anchorPoint = Point.RIGHT_TOP;\n      this.popoverPoint = Point.LEFT_TOP;\n    }\n    this.popoverOptions.allowMultipleOpen = true;\n    this.popoverOptions.ignoreGlobalESCListener = true;\n    this.closeOnOutsideClick = true;\n    this.focusHandler = focusHandler;\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // set the popover values based on menu position\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_RIGHT;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_LEFT;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-top':\n        this.anchorPoint = Point.RIGHT_TOP;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-bottom':\n        this.anchorPoint = Point.RIGHT_BOTTOM;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'left-top':\n        this.anchorPoint = Point.LEFT_TOP;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'left-bottom':\n        this.anchorPoint = Point.LEFT_BOTTOM;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      default:\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private focusHandler: DropdownFocusHandler;\n  @ContentChildren(FocusableItem) items: QueryList<FocusableItem>;\n\n  ngAfterContentInit() {\n    this.focusHandler.container = this.el.nativeElement;\n    this.items.changes.subscribe(() => this.focusHandler.addChildren(this.items.toArray()));\n    // I saw this on GitHub as a solution to avoid code duplication because of missed QueryList changes\n    this.items.notifyOnChanges();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.focusHandler.resetChildren();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { ClrDropdown } from './dropdown';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\n\n@Directive({\n  // We support both selectors for legacy reasons\n  selector: '[clrDropdownTrigger],[clrDropdownToggle]',\n  host: {\n    '[class.dropdown-toggle]': 'isRootLevelToggle',\n    '[class.dropdown-item]': '!isRootLevelToggle',\n    '[class.expandable]': '!isRootLevelToggle',\n    '[class.active]': 'active',\n    '[attr.aria-haspopup]': '\"menu\"',\n    '[attr.aria-expanded]': 'active',\n  },\n})\nexport class ClrDropdownTrigger {\n  public isRootLevelToggle: boolean = true;\n\n  constructor(\n    dropdown: ClrDropdown,\n    private toggleService: ClrPopoverToggleService,\n    el: ElementRef<HTMLElement>,\n    focusHandler: DropdownFocusHandler\n  ) {\n    // if the containing dropdown has a parent, then this is not the root level one\n    if (dropdown.parent) {\n      this.isRootLevelToggle = false;\n    }\n    focusHandler.trigger = el.nativeElement;\n  }\n\n  get active(): boolean {\n    return this.toggleService.open;\n  }\n\n  @HostListener('click', ['$event'])\n  onDropdownTriggerClick(event: any): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrDropdown } from './dropdown';\nimport { ClrDropdownItem } from './dropdown-item';\nimport { ClrDropdownMenu } from './dropdown-menu';\nimport { ClrDropdownTrigger } from './dropdown-trigger';\n\nexport const CLR_DROPDOWN_DIRECTIVES: Type<any>[] = [ClrDropdown, ClrDropdownMenu, ClrDropdownTrigger, ClrDropdownItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DROPDOWN_DIRECTIVES],\n  exports: [CLR_DROPDOWN_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrDropdownModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO Make this an enum\nexport const ALERT_TYPES: string[] = ['info', 'warning', 'danger', 'success'];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { AlertInfoObject } from '../utils/alert-info-object';\nimport { ALERT_TYPES } from '../utils/alert-types';\nimport { ClrCommonStringsService } from '../../../utils/i18n/common-strings.service';\n\n@Injectable()\nexport class AlertIconAndTypesService {\n  constructor(private commonStrings: ClrCommonStringsService) {}\n\n  private defaultIconShape = 'info-circle';\n  private _alertIconShape = '';\n  private _alertType = 'info';\n\n  get alertType(): string {\n    return this._alertType;\n  }\n  set alertType(val: string) {\n    if (ALERT_TYPES.indexOf(val) > -1) {\n      this._alertType = val;\n    }\n  }\n\n  get alertIconShape(): string {\n    if ('' === this._alertIconShape) {\n      return this.iconInfoFromType(this._alertType).shape;\n    }\n    return this._alertIconShape;\n  }\n  set alertIconShape(val: string) {\n    if (!val) {\n      this._alertIconShape = '';\n    } else if (val !== this._alertIconShape) {\n      this._alertIconShape = val;\n    }\n  }\n\n  get alertIconTitle(): string {\n    return this.iconInfoFromType(this._alertType).title;\n  }\n\n  public iconInfoFromType(type: string): AlertInfoObject {\n    const returnObj = { shape: '', cssClass: '', title: '' };\n\n    switch (type) {\n      case 'warning':\n        returnObj.shape = 'exclamation-triangle';\n        returnObj.cssClass = 'alert-warning';\n        returnObj.title = this.commonStrings.keys.warning;\n        break;\n      case 'danger':\n        returnObj.shape = 'exclamation-circle';\n        returnObj.cssClass = 'alert-danger';\n        returnObj.title = this.commonStrings.keys.danger;\n        break;\n      case 'success':\n        returnObj.shape = 'check-circle';\n        returnObj.cssClass = 'alert-success';\n        returnObj.title = this.commonStrings.keys.success;\n        break;\n      default:\n        returnObj.shape = this.defaultIconShape;\n        returnObj.cssClass = 'alert-info';\n        returnObj.title = this.commonStrings.keys.info;\n        break;\n    }\n\n    return returnObj;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { ClrAlert } from '../alert';\n\n@Injectable()\nexport class MultiAlertService {\n  private subscription: Subscription;\n\n  private allAlerts: QueryList<ClrAlert>;\n\n  /**\n   * The Observable that lets other classes subscribe to changes\n   */\n  private _change = new Subject<number>();\n  public get changes(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _current: number;\n\n  get current() {\n    return this._current;\n  }\n  set current(index: number) {\n    if (index !== this._current) {\n      this._current = index;\n      this._change.next(index);\n    }\n  }\n\n  get activeAlerts() {\n    return this.allAlerts && this.allAlerts.filter(alert => !alert._closed);\n  }\n\n  get currentAlert() {\n    return this.activeAlerts && this.activeAlerts[this.current];\n  }\n\n  set currentAlert(alert: ClrAlert) {\n    this.current = this.activeAlerts.indexOf(alert);\n  }\n\n  get count() {\n    return (this.activeAlerts && this.activeAlerts.length) || 0;\n  }\n\n  manage(alerts: QueryList<ClrAlert>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.allAlerts = alerts;\n    // After receiving alerts' QueryList,\n    // we are picking index 0 as current by default if a user hasn't any index\n    this.current = typeof this._current === 'number' ? this._current : 0;\n    // we have to also broadcast that initial index\n    this._change.next(this.current);\n\n    this.subscription = this.allAlerts.changes.subscribe(() => {\n      if (this.current >= this.allAlerts.length) {\n        this.current = Math.max(0, this.allAlerts.length - 1);\n      }\n    });\n  }\n\n  next() {\n    this.current = this.current === this.activeAlerts.length - 1 ? 0 : this.current + 1;\n  }\n\n  previous() {\n    if (this.activeAlerts.length === 0) {\n      return;\n    }\n    this.current = this.current === 0 ? this.activeAlerts.length - 1 : this.current - 1;\n  }\n\n  close() {\n    this.previous();\n  }\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * @remark\n * This directive is used only of selectin alert text.\n */\n@Directive({\n  selector: '.alert-text',\n})\nexport class ClrAlertText {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  AfterViewInit,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\n// providers\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\nimport { ClrAlertText } from './alert-text';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alert',\n  providers: [AlertIconAndTypesService, ClrAriaLiveService],\n  templateUrl: './alert.html',\n  styles: [':host { display: block; }'],\n})\nexport class ClrAlert implements OnInit, OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private iconService: AlertIconAndTypesService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private multiAlertService: MultiAlertService,\n    private commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  ngOnInit() {\n    if (this.multiAlertService) {\n      this.subscriptions.push(\n        this.multiAlertService.changes.subscribe(() => {\n          this.hidden = this.multiAlertService.currentAlert !== this;\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  ngAfterViewInit() {\n    // Announce the first time the alert is render if it is not hidden\n    this.announceAriaLiveMessage();\n  }\n\n  @Input('clrAlertSizeSmall') isSmall: boolean = false;\n  @Input('clrAlertClosable') closable: boolean = true;\n  @Input('clrAlertAppLevel') isAppLevel: boolean = false;\n\n  // Aria\n  @Input() clrCloseButtonAriaLabel: string = this.commonStrings.keys.alertCloseButtonAriaLabel;\n\n  @Input('clrAlertClosed') _closed: boolean = false;\n  @Output('clrAlertClosedChange') _closedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrAlertType')\n  set alertType(val: string) {\n    this.iconService.alertType = val;\n  }\n\n  get alertType(): string {\n    return this.iconService.alertType;\n  }\n\n  /**\n   * clrPolite is not used in the code. Is here just to provide\n   * code complition and also mark component what type AriaLive\n   * will be used.\n   */\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrPolite') polite: boolean = true;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n  /**\n   * There is an order on how the attributes will take effect.\n   * Assertive, Off, Polite.\n   *\n   * Polite is default if non is passed.\n   *\n   * In the case of setting all of them to true. Assertive will be used.\n   *\n   */\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n\n  @Input('clrAlertIcon')\n  set alertIconShape(value: string) {\n    this.iconService.alertIconShape = value;\n  }\n\n  get alertClass(): string {\n    return this.iconService.iconInfoFromType(this.iconService.alertType).cssClass;\n  }\n\n  @ContentChildren(ClrAlertText, { descendants: true, read: ElementRef })\n  alertTexts: QueryList<ElementRef>;\n  /**\n   * This handle the find what content to be annonced withing the aria-live container\n   * alerts that are hidden will be ignored.\n   *\n   * @remark\n   * We depend on the ClrAlertText Directive to find and parse the alert messages.\n   * Also this require the HTML markup for the alert to be\n   * ```html\n   * <div class=\"alert\" role=\"alert\">\n   *    <div class=\"alert-items\">\n   *        <div class=\"alert-item static\">\n   *            <span class=\"alert-text\">\n   *                 ...\n   *            </span>\n   *        </div>\n   *    </div>\n   * </div>\n   * ```\n   */\n  private announceAriaLiveMessage(): void {\n    if (!this.hidden && this.alertTexts.length) {\n      const message = this.alertTexts.map(alertText => alertText.nativeElement.textContent).join(' ');\n      // Don't call announce when there is nothing to say\n      if (message) {\n        this.ariaLiveService.announce(message, this.ariaLive);\n      }\n    }\n  }\n\n  private _hidden: boolean;\n\n  set hidden(value: boolean) {\n    if (value !== this._hidden) {\n      this._hidden = value;\n      this.cdr.detectChanges();\n    }\n  }\n\n  get hidden() {\n    return this._hidden;\n  }\n\n  close(): void {\n    if (!this.closable) {\n      return;\n    }\n    this._closed = true;\n    if (this.multiAlertService) {\n      this.multiAlertService.close();\n    }\n    this._closedChanged.emit(true);\n  }\n\n  open(): void {\n    this._closed = false;\n    this._closedChanged.emit(false);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\n\n@Component({\n  selector: 'clr-alert-item',\n  template: `\n        <div class=\"alert-icon-wrapper\">\n            <clr-icon class=\"alert-icon\" \n              [attr.shape]=\"iconService.alertIconShape\" \n              [attr.title]=\"iconService.alertIconTitle\"></clr-icon>\n        </div>\n        <ng-content></ng-content>\n    `,\n  host: { class: 'alert-item' },\n})\nexport class ClrAlertItem {\n  constructor(public iconService: AlertIconAndTypesService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alerts',\n  templateUrl: './alerts.html',\n  providers: [MultiAlertService],\n  host: {\n    '[class.alerts]': 'true',\n    '[class.alert-danger]': \"this.currentAlertType == 'danger'\",\n    '[class.alert-info]': \"this.currentAlertType == 'info'\",\n    '[class.alert-success]': \"this.currentAlertType == 'success'\",\n    '[class.alert-warning]': \"this.currentAlertType == 'warning'\",\n  },\n  styles: [':host { display: block }'],\n})\nexport class ClrAlerts implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  @ContentChildren(ClrAlert)\n  set allAlerts(value: QueryList<ClrAlert>) {\n    this.multiAlertService.manage(value); // provide alerts\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  public set _inputCurrentIndex(index: number) {\n    if (Number.isInteger(index) && index >= 0) {\n      this.multiAlertService.current = index;\n    }\n  }\n\n  @Output('clrCurrentAlertIndexChange') public currentAlertIndexChange = new EventEmitter<number>(false);\n\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n  @Output('clrCurrentAlertChange') public currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Ensure we are only dealing with alerts that have not been closed yet\n   */\n  get alerts() {\n    return this.allAlerts.filter(alert => {\n      return alert.hidden === false;\n    });\n  }\n\n  get currentAlertType(): string {\n    if (this.multiAlertService.currentAlert) {\n      return this.multiAlertService.currentAlert.alertType;\n    }\n    return '';\n  }\n\n  constructor(public multiAlertService: MultiAlertService) {}\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.multiAlertService.changes.subscribe(index => {\n        this.currentAlertIndexChange.next(index);\n        this.currentAlertChange.next(this.multiAlertService.currentAlert);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.multiAlertService.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-alerts-pager',\n  templateUrl: './alerts-pager.html',\n  host: { '[class.alerts-pager]': 'true' },\n})\nexport class ClrAlertsPager implements OnInit, OnDestroy {\n  private multiAlertServiceChanges: Subscription;\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n\n  @Output('clrCurrentAlertChange') currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  @Output('clrCurrentAlertIndexChange') currentAlertIndexChange = new EventEmitter<number>();\n\n  constructor(public multiAlertService: MultiAlertService, public commonStrings: ClrCommonStringsService) {}\n\n  ngOnInit() {\n    this.multiAlertServiceChanges = this.multiAlertService.changes.subscribe(index => {\n      this.currentAlertIndexChange.emit(index);\n      this.currentAlertChange.emit(this.multiAlertService.activeAlerts[index]);\n    });\n  }\n\n  pageUp() {\n    this.multiAlertService.next();\n  }\n\n  pageDown() {\n    this.multiAlertService.previous();\n  }\n\n  ngOnDestroy() {\n    this.multiAlertServiceChanges.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { ClrAlert } from './alert';\nimport { ClrAlertItem } from './alert-item';\nimport { ClrAlerts } from './alerts';\nimport { ClrAlertsPager } from './alerts-pager';\nimport { ClrAlertText } from './alert-text';\n\nexport const CLR_ALERT_DIRECTIVES: Type<any>[] = [ClrAlert, ClrAlertItem, ClrAlerts, ClrAlertsPager, ClrAlertText];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_ALERT_DIRECTIVES],\n  exports: [CLR_ALERT_DIRECTIVES],\n})\nexport class ClrAlertModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { ClrAlertModule } from './alert/alert.module';\n\n@NgModule({ exports: [ClrAlertModule] })\nexport class ClrEmphasisModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavCodes {\n  public static NAV_LEVEL_1: number = 1;\n  public static NAV_LEVEL_2: number = 2;\n  public static NAV_CLOSE_ALL: string = 'NAV_CLOSE_ALL';\n  public static NAV_OPEN: string = 'NAV_OPEN';\n  public static NAV_CLOSE: string = 'NAV_CLOSE';\n  public static NAV_TOGGLE: string = 'NAV_TOGGLE';\n  public static NAV_CLASS_HAMBURGER_MENU: string = 'open-hamburger-menu';\n  public static NAV_CLASS_OVERFLOW_MENU: string = 'open-overflow-menu';\n  public static NAV_CLASS_TRIGGER_1: string = 'header-hamburger-trigger';\n  public static NAV_CLASS_TRIGGER_2: string = 'header-overflow-trigger';\n  public static NAV_CLASS_LEVEL_1: string = 'clr-nav-level-1';\n  public static NAV_CLASS_LEVEL_2: string = 'clr-nav-level-2';\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavControlMessage {\n  constructor(private _controlCode: string, private _navLevel: number) {}\n\n  get controlCode(): string {\n    return this._controlCode;\n  }\n\n  get navLevel(): number {\n    return this._navLevel;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReplaySubject, Subject } from 'rxjs';\n\nimport { ResponsiveNavCodes } from '../responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../responsive-nav-control-message';\n\n@Injectable({ providedIn: 'root' })\nexport class ResponsiveNavigationService {\n  public responsiveNavList: number[] = [];\n  private registerNavSubject = new ReplaySubject<number[]>();\n  private controlNavSubject = new Subject<ResponsiveNavControlMessage>();\n\n  get registeredNavs(): Observable<number[]> {\n    return this.registerNavSubject.asObservable();\n  }\n\n  get navControl(): Observable<ResponsiveNavControlMessage> {\n    return this.controlNavSubject.asObservable();\n  }\n\n  constructor() {\n    this.closeAllNavs(); // We start with all navs closed\n  }\n\n  registerNav(navLevel: number): void {\n    if (!navLevel || this.isNavRegistered(navLevel)) {\n      return;\n    }\n    this.responsiveNavList.push(navLevel);\n    this.registerNavSubject.next(this.responsiveNavList);\n  }\n\n  isNavRegistered(navLevel: number): boolean {\n    if (this.responsiveNavList.indexOf(navLevel) > -1) {\n      console.error('Multiple clr-nav-level ' + navLevel + ' attributes found. Please make sure that only one exists');\n      return true;\n    }\n    return false;\n  }\n\n  unregisterNav(navLevel: number) {\n    const index = this.responsiveNavList.indexOf(navLevel);\n    if (index > -1) {\n      this.responsiveNavList.splice(index, 1);\n      this.registerNavSubject.next(this.responsiveNavList);\n    }\n  }\n\n  sendControlMessage(controlCode: string, navLevel: number) {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(controlCode, navLevel);\n    this.controlNavSubject.next(message);\n  }\n\n  closeAllNavs() {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(\n      ResponsiveNavCodes.NAV_CLOSE_ALL,\n      -999\n    );\n    this.controlNavSubject.next(message);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from '../nav/providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from '../nav/responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../nav/responsive-nav-control-message';\n\n@Directive({ selector: 'clr-main-container', host: { '[class.main-container]': 'true' } })\nexport class ClrMainContainer implements OnDestroy, OnInit {\n  private _subscription: Subscription;\n  private _classList: DOMTokenList;\n\n  constructor(private elRef: ElementRef, private responsiveNavService: ResponsiveNavigationService) {}\n\n  ngOnInit() {\n    this._classList = this.elRef.nativeElement.classList;\n    this._subscription = this.responsiveNavService.navControl.subscribe({\n      next: (message: ResponsiveNavControlMessage) => {\n        this.processMessage(message);\n      },\n    });\n  }\n\n  processMessage(message: ResponsiveNavControlMessage): void {\n    let navClass: string = ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;\n    if (message.controlCode === ResponsiveNavCodes.NAV_CLOSE_ALL) {\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n      this.controlNav(message.controlCode, navClass);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navClass = ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;\n      this.controlNav(message.controlCode, navClass);\n    }\n  }\n\n  controlNav(controlCode: string, navClass: string): void {\n    if (controlCode === ResponsiveNavCodes.NAV_OPEN) {\n      this._classList.add(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_CLOSE) {\n      this._classList.remove(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_TOGGLE) {\n      this._classList.toggle(navClass);\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrMainContainer } from './main-container';\n\nexport const CLR_LAYOUT_DIRECTIVES: Type<any>[] = [ClrMainContainer];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [CLR_LAYOUT_DIRECTIVES],\n  exports: [CLR_LAYOUT_DIRECTIVES],\n})\nexport class ClrMainContainerModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-main-container' })\nexport class MainContainerWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ResponsiveNavigationService } from '../providers/responsive-navigation.service';\nimport { MainContainerWillyWonka } from './main-container-willy-wonka';\n\n@Directive({ selector: 'clr-header' })\nexport class NavDetectionOompaLoompa extends OompaLoompa {\n  private responsiveNavService: ResponsiveNavigationService;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: MainContainerWillyWonka,\n    responsiveNavService: ResponsiveNavigationService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-header should only be used inside of a clr-main-container');\n    }\n    super(cdr, willyWonka);\n    this.responsiveNavService = responsiveNavService;\n  }\n\n  // NavDetectionOompaLoompa is the addition of the nav levels\n  // Since we support 2 levels, the possibilities are 0, 1 or 3 (1 + 2)\n  get flavor() {\n    return this.responsiveNavService.responsiveNavList.reduce((sum, navLevel) => sum + navLevel, 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-header',\n  template: `\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel1OnPage\"\n            class=\"header-hamburger-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_1) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_1)\">\n            <span></span>\n        </button>\n        <ng-content></ng-content>\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel2OnPage\"\n            class=\"header-overflow-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_2) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_2)\">\n            <span></span>\n        </button>\n        <div class=\"header-backdrop\" (click)=\"closeOpenNav()\"></div>\n    `,\n  host: { '[class.header]': 'true' },\n})\nexport class ClrHeader implements OnDestroy {\n  isNavLevel1OnPage = false;\n  isNavLevel2OnPage = false;\n  openNavLevel: number = null;\n  responsiveNavCodes = ResponsiveNavCodes;\n  private _subscription: Subscription;\n\n  constructor(\n    private responsiveNavService: ResponsiveNavigationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._subscription = this.responsiveNavService.registeredNavs.subscribe({\n      next: (navLevelList: number[]) => {\n        this.initializeNavTriggers(navLevelList);\n      },\n    });\n  }\n\n  // reset triggers. handles cases when an application has different nav levels on different pages.\n  resetNavTriggers() {\n    this.isNavLevel1OnPage = false;\n    this.isNavLevel2OnPage = false;\n  }\n\n  // decides which triggers to show on the header\n  initializeNavTriggers(navList: number[]): void {\n    this.resetNavTriggers();\n    if (navList.length > 2) {\n      console.error('More than 2 Nav Levels detected.');\n      return;\n    }\n    navList.forEach(navLevel => {\n      if (navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n        this.isNavLevel1OnPage = true;\n      } else if (navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n        this.isNavLevel2OnPage = true;\n      }\n    });\n  }\n\n  // closes the nav that is open\n  closeOpenNav() {\n    this.responsiveNavService.closeAllNavs();\n  }\n\n  // toggles the nav that is open\n  toggleNav(navLevel: number) {\n    this.openNavLevel = this.openNavLevel === navLevel ? null : navLevel;\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_TOGGLE, navLevel);\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\n\n@Directive({ selector: '[clr-nav-level]' })\nexport class ClrNavLevel implements OnInit {\n  @Input('clr-nav-level') _level: number;\n\n  constructor(private responsiveNavService: ResponsiveNavigationService, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.level !== ResponsiveNavCodes.NAV_LEVEL_1 && this.level !== ResponsiveNavCodes.NAV_LEVEL_2) {\n      console.error('Nav Level can only be 1 or 2');\n      return;\n    }\n    this.responsiveNavService.registerNav(this.level);\n    this.addNavClass(this.level);\n  }\n\n  addNavClass(level: number) {\n    const navHostClassList = this.elementRef.nativeElement.classList;\n    if (level === ResponsiveNavCodes.NAV_LEVEL_1) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_1);\n    } else if (level === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_2);\n    }\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  // getter to access the responsive navigation codes from the template\n  get responsiveNavCodes(): ResponsiveNavCodes {\n    return ResponsiveNavCodes;\n  }\n\n  open(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_OPEN, this.level);\n  }\n\n  close(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_CLOSE, this.level);\n  }\n\n  // TODO: Figure out whats the best way to do this. Possible methods\n  // 1. HostListener (current solution)\n  // 2. Directives on the .nav-link class. We discussed on moving away from class selectors but I forget the reason\n  // why\n  @HostListener('click', ['$event.target'])\n  onMouseClick(target: any) {\n    let current: any = target; // Get the element in the DOM on which the mouse was clicked\n    const navHost: any = this.elementRef.nativeElement; // Get the current nav native HTML element\n\n    // Start checking if current and navHost are equal.\n    // If not traverse to the parentNode and check again.\n    while (current) {\n      if (current === navHost) {\n        return;\n      } else if (current.classList.contains('nav-link')) {\n        this.close();\n        return;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  ngOnDestroy() {\n    this.responsiveNavService.unregisterNav(this.level);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { MainContainerWillyWonka } from './chocolate/main-container-willy-wonka';\nimport { NavDetectionOompaLoompa } from './chocolate/nav-detection-oompa-loompa';\nimport { ClrHeader } from './header';\nimport { ClrNavLevel } from './nav-level';\n\nexport const CLR_NAVIGATION_DIRECTIVES: Type<any>[] = [\n  ClrHeader,\n  ClrNavLevel,\n  NavDetectionOompaLoompa,\n  MainContainerWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_NAVIGATION_DIRECTIVES],\n  exports: [CLR_NAVIGATION_DIRECTIVES],\n})\nexport class ClrNavigationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  template: `\n      <ng-template>\n        <ng-content></ng-content>\n      </ng-template>\n    `,\n})\nexport class TemplateRefContainer {\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { TemplateRefContainer } from './template-ref-container';\n\nexport * from './template-ref-container';\n\nexport const TEMPLATE_REF_DIRECTIVES: Type<any>[] = [TemplateRefContainer];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TEMPLATE_REF_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TEMPLATE_REF_DIRECTIVES],\n  entryComponents: [TEMPLATE_REF_DIRECTIVES],\n  exports: [TEMPLATE_REF_DIRECTIVES],\n})\nexport class ClrTemplateRefModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-tabs' })\nexport class TabsWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Inject, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../../utils/conditional/if-active.service';\n\nimport { TabsWillyWonka } from './tabs-willy-wonka';\n\n@Directive({ selector: '[clrTabLink], clr-tab-content' })\nexport class ActiveOompaLoompa extends OompaLoompa {\n  private ifActive: IfActiveService;\n  private id: number;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: TabsWillyWonka,\n    @Inject(IF_ACTIVE_ID) id: number,\n    ifActive: IfActiveService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clrTabLink and clr-tab-content should only be used inside of a clr-tabs');\n    }\n    super(cdr, willyWonka);\n    this.ifActive = ifActive;\n    this.id = id;\n  }\n\n  get flavor() {\n    return this.ifActive.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\n// TODO: if we find more components that could use this, consider moving this to utils\n@Injectable()\nexport class AriaService {\n  public ariaLabelledBy: string;\n  public ariaControls: string;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, ViewContainerRef } from '@angular/core';\nimport { ClrTab } from '../tab';\nimport { TabsLayout } from '../enums/tabs-layout.enum';\n\n@Injectable()\nexport class TabsService {\n  private _children: ClrTab[] = [];\n\n  layout: TabsLayout = TabsLayout.HORIZONTAL;\n\n  register(tab: ClrTab) {\n    this._children.push(tab);\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  get activeTab() {\n    return this.children.find((tab: ClrTab) => {\n      return tab.active;\n    });\n  }\n\n  get overflowTabs() {\n    if (this.layout === TabsLayout.VERTICAL) {\n      return [];\n    } else {\n      return this.children.filter((tab: ClrTab) => tab.tabLink.inOverflow === true);\n    }\n  }\n\n  unregister(tab: ClrTab) {\n    const index = this.children.indexOf(tab);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  tabContentViewContainer: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EmbeddedViewRef, Inject, Input, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\n\nlet nbTabContentComponents: number = 0;\n\n@Component({\n  selector: 'clr-tab-content',\n  template: `\n    <ng-template #tabContentProjectedRef>\n      <section [id]=\"tabContentId\" role=\"tabpanel\" class=\"tab-content\" [class.active]=\"active\"\n               [hidden]=\"!active\"\n               [attr.aria-labelledby]=\"ariaLabelledBy\"\n               [attr.aria-expanded]=\"active\"\n               [attr.aria-hidden]=\"!active\">\n        <ng-content></ng-content>\n      </section>\n    </ng-template>\n    `,\n})\nexport class ClrTabContent implements OnDestroy {\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private ariaService: AriaService,\n    private tabsService: TabsService\n  ) {\n    if (!this.tabContentId) {\n      this.tabContentId = 'clr-tab-content-' + nbTabContentComponents++;\n    }\n  }\n\n  private viewRef: EmbeddedViewRef<ClrTabContent>;\n\n  // The template must be applied on the top-down phase of view-child initialization to prevent\n  // components in the content from initializing before a content container exists.\n  // Some child components need their container for sizing calculations.\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentProjectedRef', { static: true })\n  private set templateRef(value: TemplateRef<ClrTabContent>) {\n    this.viewRef = this.tabsService.tabContentViewContainer.createEmbeddedView(value);\n  }\n  /* tslint:enable:no-unused-variable */\n\n  get ariaLabelledBy(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  get tabContentId(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  @Input('id')\n  set tabContentId(id: string) {\n    this.ariaService.ariaControls = id;\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  ngOnDestroy(): void {\n    const index = this.tabsService.tabContentViewContainer.indexOf(this.viewRef);\n    if (index > -1) {\n      this.tabsService.tabContentViewContainer.remove(index);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { InjectionToken } from '@angular/core';\n\nlet nbTabsComponent = 0;\n\nexport const TABS_ID = new InjectionToken<number>('TABS_ID');\n\nexport function tokenFactory() {\n  return 'clr-tabs-' + nbTabsComponent++;\n}\n\nexport const TABS_ID_PROVIDER = {\n  provide: TABS_ID,\n  useFactory: tokenFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrFocusDirection {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  BOTH = 'both',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { TemplateRefContainer } from '../../utils/template-ref/template-ref-container';\nimport { TabsService } from './providers/tabs.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TABS_ID } from './tabs-id.provider';\nimport { TabsLayout } from './enums/tabs-layout.enum';\n\nlet nbTabLinkComponents: number = 0;\n\n@Directive({\n  selector: '[clrTabLink]',\n  host: {\n    '[attr.aria-hidden]': 'false',\n    '[class.btn]': 'true',\n    role: 'tab',\n    type: 'button',\n  },\n})\nexport class ClrTabLink {\n  private _inOverflow: boolean;\n\n  @Input('clrTabLinkInOverflow')\n  set inOverflow(inOverflow) {\n    this._inOverflow = inOverflow;\n  }\n\n  get inOverflow(): boolean {\n    return this._inOverflow && this.tabsService.layout !== TabsLayout.VERTICAL;\n  }\n\n  @HostBinding('class.btn-link')\n  @HostBinding('class.nav-link')\n  get addLinkClasses() {\n    return !this.inOverflow;\n  }\n\n  templateRefContainer: TemplateRefContainer;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private ariaService: AriaService,\n    public el: ElementRef,\n    private cfr: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number\n  ) {\n    if (!this.tabLinkId) {\n      this.tabLinkId = 'clr-tab-link-' + nbTabLinkComponents++;\n    }\n\n    // Tab links can be rendered in one of two places: in the main area or inside the overflow dropdown menu.\n    // Here, we create a container so that its template can be used to create embeddedView on the fly.\n    // See TabsService's renderView() method and how it's used in Tabs class for an example.\n    const factory = this.cfr.resolveComponentFactory(TemplateRefContainer);\n    this.templateRefContainer = this.viewContainerRef.createComponent(factory, undefined, undefined, [\n      [this.el.nativeElement],\n    ]).instance;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get ariaControls(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  get tabLinkId(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  @HostBinding('id')\n  @Input('id')\n  set tabLinkId(id: string) {\n    this.ariaService.ariaLabelledBy = id;\n  }\n\n  @HostListener('click')\n  activate() {\n    this.ifActiveService.current = this.id;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-selected')\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, Inject } from '@angular/core';\n\nimport { IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService } from '../../utils/conditional/if-active.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\n\n@Component({\n  selector: 'clr-tab',\n  template: `\n        <ng-content></ng-content>\n    `,\n  providers: [IF_ACTIVE_ID_PROVIDER, AriaService],\n})\nexport class ClrTab {\n  @ContentChild(ClrTabLink, { static: true })\n  tabLink: ClrTabLink;\n  @ContentChild(ClrTabContent, { static: true })\n  tabContent: ClrTabContent;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private tabsService: TabsService\n  ) {\n    tabsService.register(this);\n  }\n\n  ngOnDestroy() {\n    this.tabsService.unregister(this);\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tab-overflow-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n  },\n})\nexport class ClrTabOverflowContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Inject, PLATFORM_ID, HostBinding } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: '[clrKeyFocusItem]',\n})\nexport class ClrKeyFocusItem {\n  @HostBinding('attr.tabindex') tabIndex = -1;\n\n  get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(private elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStrategy {\n  Default = 'default', // only one panel at a time\n  Multi = 'multi', // can have multiple panels open at a time\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStatus {\n  Inactive = 'inactive',\n  Error = 'error',\n  Complete = 'complete',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { EventEmitter, HostListener, Input, Output, Component, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrKeyFocusItem } from './key-focus-item';\nimport { ClrFocusDirection } from './enums/focus-direction.enum';\nimport { KeyCodes } from '@clr/core/common';\nimport { FocusableItem } from './interfaces';\nimport { preventArrowKeyScroll, getKeyCodes } from './util';\n\n@Component({\n  selector: '[clrKeyFocus]',\n  template: '<ng-content></ng-content>',\n})\nexport class ClrKeyFocus {\n  @Input('clrDirection') direction = ClrFocusDirection.VERTICAL;\n  @Input('clrFocusOnLoad') focusOnLoad = false;\n  @Output('clrFocusChange') private focusChange: EventEmitter<void> = new EventEmitter<void>();\n  @ContentChildren(ClrKeyFocusItem, { descendants: true })\n  private clrKeyFocusItems: QueryList<ClrKeyFocusItem>;\n\n  private _focusableItems: Array<FocusableItem>;\n  @Input('clrKeyFocus')\n  set focusableItems(elements: Array<FocusableItem>) {\n    // We accept a list of focusable elements (HTMLElements or existing Directives) or auto query for clrKeyFocusItem\n    // We accept a list reference in the cases where we cannot use ContentChildren to query\n    // ContentChildren can be unavailable if content is projected outside the scope of the component (see tabs).\n    if (elements && elements.length) {\n      this._focusableItems = elements;\n      this.initializeFocus();\n    }\n  }\n\n  get focusableItems() {\n    if (this._focusableItems) {\n      return this._focusableItems;\n    } else {\n      return this.clrKeyFocusItems.toArray();\n    }\n  }\n\n  private _current: number = 0;\n  get current() {\n    return this._current;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForItemUpdates());\n    this.initializeFocus();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.prevKeyPressed(event) && this.currentFocusIsNotFirstItem()) {\n      this.keyAction(() => this._current--);\n    } else if (this.nextKeyPressed(event) && this.currentFocusIsNotLastItem()) {\n      this.keyAction(() => this._current++);\n    } else if (event.code === KeyCodes.Home) {\n      this.keyAction(() => (this._current = 0));\n    } else if (event.code === KeyCodes.End) {\n      this.keyAction(() => (this._current = this.focusableItems.length - 1));\n    }\n\n    preventArrowKeyScroll(event);\n  }\n\n  @HostListener('click', ['$event'])\n  setClickedItemCurrent(event: any) {\n    let position: number;\n\n    if (this.focusableItems[0].nativeElement) {\n      position = this.focusableItems.map(item => item.nativeElement).indexOf(event.target);\n    } else {\n      position = this.focusableItems.indexOf(event.target);\n    }\n\n    if (position > -1) {\n      this._current = position;\n    }\n  }\n\n  resetTabFocus() {\n    this.currentItem.tabIndex = -1;\n    this._current = 0;\n    this.currentItem.tabIndex = 0;\n  }\n\n  moveTo(position: number) {\n    if (this.positionInRange(position) && position !== this._current) {\n      this.keyAction(() => (this._current = position));\n    }\n  }\n\n  private positionInRange(position: number) {\n    return position >= 0 && position < this.focusableItems.length;\n  }\n\n  private get currentItem() {\n    return this.focusableItems[this._current];\n  }\n\n  private currentFocusIsNotFirstItem() {\n    return this._current - 1 >= 0;\n  }\n\n  private currentFocusIsNotLastItem() {\n    return this._current + 1 < this.focusableItems.length;\n  }\n\n  private initializeFocus() {\n    if (this.focusableItems && this.focusableItems.length) {\n      this.focusableItems.forEach(i => (i.tabIndex = -1));\n\n      // It is possible that the focus was on an element, whose index is no longer available.\n      // This can happen when some of the focusable elements are being removed.\n      // In such cases, the new focus is initialized on the last focusable element.\n      if (this._current >= this.focusableItems.length) {\n        this._current = this.focusableItems.length - 1;\n      }\n      this.currentItem.tabIndex = 0;\n\n      if (this.focusOnLoad) {\n        this.currentItem.focus();\n        this.focusChange.next();\n      }\n    }\n  }\n\n  private listenForItemUpdates() {\n    return this.clrKeyFocusItems.changes.subscribe(() => {\n      this.initializeFocus();\n    });\n  }\n\n  private keyAction(action: Function) {\n    this.currentItem.tabIndex = -1;\n    action.call(this);\n    this.currentItem.tabIndex = 0;\n    this.currentItem.focus();\n    this.focusChange.next();\n  }\n\n  private nextKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowDown;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowRight;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowDown || event.key === keyCodes.ArrowRight;\n      default:\n        return false;\n    }\n  }\n\n  private prevKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowUp;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowLeft;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowUp || event.key === keyCodes.ArrowLeft;\n      default:\n        return false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Inject,\n  QueryList,\n  Input,\n  OnDestroy,\n  HostBinding,\n  ViewContainerRef,\n  ViewChild,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport { IfActiveService } from '../../utils/conditional/if-active.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTab } from './tab';\nimport { ClrTabLink } from './tab-link.directive';\nimport { TABS_ID, TABS_ID_PROVIDER } from './tabs-id.provider';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { TabsLayout } from './enums/tabs-layout.enum';\nimport { Subscription } from 'rxjs';\nimport { ClrKeyFocus } from '../../utils/focus/key-focus/key-focus';\nimport { startWith, filter } from 'rxjs/operators';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-tabs',\n  template: `\n        <ul class=\"nav\" role=\"tablist\" [attr.aria-owns]=\"tabIds\" [clrKeyFocus]=\"tabLinkElements\" clrDirection=\"both\"\n            (clrFocusChange)=\"checkFocusVisible()\">\n            <!--tab links-->\n            <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                <ng-container *ngIf=\"link.tabsId === tabsId && !link.inOverflow\">\n                    <li role=\"presentation\" class=\"nav-item\">\n                        <ng-container [ngTemplateOutlet]=\"link.templateRefContainer.template\"></ng-container>\n                    </li>\n                </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"tabsService.overflowTabs.length > 0\">\n                <div class=\"tabs-overflow bottom-right\" [class.open]=\"toggleService.open\" role=\"presentation\">\n                    <li role=\"application\" class=\"nav-item\" (click)=\"toggleOverflow($event)\">\n                        <button class=\"btn btn-link nav-link dropdown-toggle\" type=\"button\" aria-hidden=\"true\"\n                                [class.active]=\"activeTabInOverflow\" [class.open]=\"inOverflow()\" tabIndex=\"-1\">\n                            <clr-icon shape=\"ellipsis-horizontal\"\n                              [class.is-info]=\"toggleService.open\"\n                              [attr.title]=\"commonStrings.keys.more\"></clr-icon>\n                        </button>\n                    </li>\n                    <!--tab links in overflow menu-->\n                    <clr-tab-overflow-content>\n                        <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                            <ng-container *ngIf=\"link.tabsId === tabsId && link.inOverflow\"\n                                          [ngTemplateOutlet]=\"link.templateRefContainer.template\">\n                            </ng-container>\n                        </ng-container>\n                    </clr-tab-overflow-content>\n                </div>\n            </ng-container>\n        </ul>\n        <ng-container #tabContentViewContainer></ng-container>\n    `,\n  providers: [IfActiveService, ClrPopoverToggleService, TabsService, TABS_ID_PROVIDER],\n})\nexport class ClrTabs implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  private get overflowPosition() {\n    return this._tabLinkDirectives.filter(link => !link.inOverflow).length;\n  }\n\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentViewContainer', { static: true, read: ViewContainerRef })\n  private set tabContentViewContainer(value: ViewContainerRef) {\n    this.tabsService.tabContentViewContainer = value;\n  }\n  /* tslint:enable:no-unused-variable */\n\n  @Input('clrLayout')\n  set layout(layout: TabsLayout) {\n    if (\n      Object.keys(TabsLayout)\n        .map(key => {\n          return TabsLayout[key];\n        })\n        .indexOf(layout) >= 0\n    ) {\n      this.tabsService.layout = layout;\n    }\n  }\n  get layout(): TabsLayout {\n    return this.tabsService.layout;\n  }\n\n  @ContentChildren(ClrTab) private tabs: QueryList<ClrTab>;\n\n  private _tabLinkDirectives: ClrTabLink[] = [];\n  get tabLinkDirectives(): ClrTabLink[] {\n    return this._tabLinkDirectives;\n  }\n\n  tabLinkElements: HTMLElement[] = [];\n\n  @ViewChild(ClrKeyFocus, { static: true })\n  keyFocus: ClrKeyFocus;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    public toggleService: ClrPopoverToggleService,\n    public tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  get activeTabInOverflow() {\n    return this.tabsService.overflowTabs.indexOf(this.tabsService.activeTab) > -1;\n  }\n\n  get tabIds() {\n    return this.tabsService.children.map(tab => tab.tabLink.tabLinkId).join(' ');\n  }\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForTabLinkChanges(), this.listenForOverflowMenuFocusChanges());\n\n    if (typeof this.ifActiveService.current === 'undefined' && this.tabLinkDirectives[0]) {\n      this.tabLinkDirectives[0].activate();\n    }\n  }\n\n  skipFocusCheck = false;\n\n  toggleOverflow(event: any) {\n    this.skipFocusCheck = true;\n    this.toggleService.toggleWithEvent(event);\n  }\n\n  checkFocusVisible() {\n    if (this.skipFocusCheck) {\n      this.skipFocusCheck = false;\n      return;\n    }\n    if (!this.toggleService.open && this.inOverflow()) {\n      this.toggleService.open = true;\n    } else if (this.toggleService.open && !this.inOverflow()) {\n      this.toggleService.open = false;\n    }\n  }\n\n  inOverflow() {\n    return (\n      this.tabLinkElements.indexOf(document.activeElement as HTMLElement) > -1 &&\n      this.keyFocus.current >= this.overflowPosition\n    );\n  }\n\n  @HostBinding('class.tabs-vertical')\n  get isVertical() {\n    return this.layout === TabsLayout.VERTICAL;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  private listenForTabLinkChanges() {\n    return this.tabs.changes.pipe(startWith(this.tabs.map(tab => tab.tabLink))).subscribe(() => {\n      this._tabLinkDirectives = this.tabs.map(tab => tab.tabLink);\n      this.tabLinkElements = this._tabLinkDirectives.map(tab => tab.el.nativeElement);\n    });\n  }\n\n  private listenForOverflowMenuFocusChanges() {\n    return this.toggleService.openChange.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(open => {\n      if (open && !this.inOverflow()) {\n        this.focusToFirstItemInOverflow();\n      } else if (!open && this.nextFocusedItemIsNotInOverflow()) {\n        this.keyFocus.resetTabFocus();\n      }\n    });\n  }\n\n  private focusToFirstItemInOverflow() {\n    this.keyFocus.moveTo(this.overflowPosition);\n  }\n\n  private nextFocusedItemIsNotInOverflow() {\n    return this.tabLinkElements.find(e => e === document.activeElement) === undefined;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrKeyFocus } from './key-focus';\nimport { ClrKeyFocusItem } from './key-focus-item';\n\nconst KEY_FOCUS_DIRECTIVES: Type<any>[] = [ClrKeyFocus, ClrKeyFocusItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [KEY_FOCUS_DIRECTIVES],\n  exports: [KEY_FOCUS_DIRECTIVES],\n})\nexport class ClrKeyFocusModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrTemplateRefModule } from '../../utils/template-ref/template-ref.module';\n\nimport { ActiveOompaLoompa } from './chocolate/active-oompa-loompa';\nimport { TabsWillyWonka } from './chocolate/tabs-willy-wonka';\nimport { ClrTab } from './tab';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\nimport { ClrTabs } from './tabs';\nimport { ClrKeyFocusModule } from '../../utils/focus/key-focus/key-focus.module';\n\nexport const CLR_TABS_DIRECTIVES: Type<any>[] = [\n  ClrTabContent,\n  ClrTab,\n  ClrTabs,\n  ClrTabOverflowContent,\n  ClrTabLink,\n  TabsWillyWonka,\n  ActiveOompaLoompa,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrConditionalModule, ClrIconModule, ClrTemplateRefModule, ClrKeyFocusModule],\n  declarations: [CLR_TABS_DIRECTIVES],\n  exports: [CLR_TABS_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrTabsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavGroupRegistrationService {\n  public navGroupCount: number = 0;\n\n  registerNavGroup() {\n    this.navGroupCount++;\n  }\n\n  unregisterNavGroup(): void {\n    this.navGroupCount--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavIconService {\n  private _icons: number = 0;\n\n  get hasIcons(): boolean {\n    return this._icons > 0;\n  }\n\n  registerIcon(): void {\n    this._icons++;\n  }\n\n  unregisterIcon(): void {\n    this._icons--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavService {\n  private _animateOnCollapsed: Subject<boolean> = new Subject<boolean>();\n\n  get animateOnCollapsed(): Observable<boolean> {\n    return this._animateOnCollapsed.asObservable();\n  }\n\n  private _collapsedChanged: Subject<boolean> = new Subject<boolean>();\n\n  get collapsedChanged(): Observable<boolean> {\n    return this._collapsedChanged.asObservable();\n  }\n\n  private _collapsed: boolean = false;\n\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n\n  set collapsed(value: boolean) {\n    value = !!value;\n    if (this.collapsible && this._collapsed !== value) {\n      this.updateCollapseBehavior(value);\n    }\n  }\n\n  private _collapsible: boolean = false;\n\n  get collapsible(): boolean {\n    return this._collapsible;\n  }\n\n  set collapsible(value: boolean) {\n    value = !!value;\n    if (this._collapsible !== value) {\n      if (!value && this.collapsed) {\n        this.updateCollapseBehavior(false);\n      }\n      this._collapsible = value;\n    }\n  }\n\n  private updateCollapseBehavior(value: boolean): void {\n    this._animateOnCollapsed.next(value);\n    this._collapsed = value;\n    this._collapsedChanged.next(value);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-vertical-nav',\n  templateUrl: './vertical-nav.html',\n  providers: [VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService],\n  host: {\n    class: 'clr-vertical-nav',\n    '[class.is-collapsed]': 'collapsed',\n    '[class.has-nav-groups]': 'hasNavGroups',\n    '[class.has-icons]': 'hasIcons',\n  },\n})\nexport class ClrVerticalNav implements OnDestroy {\n  get collapsible(): boolean {\n    return this._navService.collapsible;\n  }\n\n  @Input('clrVerticalNavCollapsible')\n  set collapsible(value: boolean) {\n    this._navService.collapsible = value;\n  }\n\n  get collapsed(): boolean {\n    return this._navService.collapsed;\n  }\n\n  @Input('clrVerticalNavCollapsed')\n  set collapsed(value: boolean) {\n    this._navService.collapsed = value;\n  }\n\n  @Output('clrVerticalNavCollapsedChange')\n  private _collapsedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  get hasNavGroups(): boolean {\n    return this._navGroupRegistrationService.navGroupCount > 0;\n  }\n\n  get hasIcons(): boolean {\n    return this._navIconService.hasIcons;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.collapsible) {\n      return null;\n    }\n    return !this.collapsed ? 'true' : 'false';\n  }\n\n  private _sub: Subscription;\n\n  constructor(\n    private _navService: VerticalNavService,\n    private _navIconService: VerticalNavIconService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._sub = this._navService.collapsedChanged.subscribe(value => {\n      this._collapsedChanged.emit(value);\n    });\n  }\n\n  toggleByButton() {\n    this.collapsed = !this.collapsed;\n  }\n\n  ngOnDestroy() {\n    this._sub.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavGroupService {\n  private _expandChange: Subject<boolean> = new Subject<boolean>();\n\n  get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  expand(): void {\n    this._expandChange.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, Component, EventEmitter, HostBinding, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nconst EXPANDED_STATE: string = 'expanded';\nconst COLLAPSED_STATE: string = 'collapsed';\n\n@Component({\n  selector: 'clr-vertical-nav-group',\n  templateUrl: './vertical-nav-group.html',\n  providers: [IfExpandService, VerticalNavGroupService],\n  animations: [\n    trigger('clrExpand', [\n      state(EXPANDED_STATE, style({ height: '*' })),\n      state(COLLAPSED_STATE, style({ height: 0, 'overflow-y': 'hidden', visibility: 'hidden' })),\n      transition(`${EXPANDED_STATE} <=> ${COLLAPSED_STATE}`, animate('0.2s ease-in-out')),\n    ]),\n  ],\n  host: { class: 'nav-group' },\n})\nexport class ClrVerticalNavGroup implements AfterContentInit, OnDestroy {\n  constructor(\n    private _itemExpand: IfExpandService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    private _navGroupService: VerticalNavGroupService,\n    private _navService: VerticalNavService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._navGroupRegistrationService.registerNavGroup();\n\n    // FIXME: This subscription handles a corner case\n    // Vertical Nav collapse requires the animation to run first and then\n    // remove the nodes from the DOM. If the user directly sets the input\n    // on the clrIfExpanded directive, we have no chance to run the animation\n    // and wait for it to complete. This subscription makes sure that the\n    // animation states are correct for that edge case.\n    this._subscriptions.push(\n      this._itemExpand.expandChange.subscribe(value => {\n        if (value && this.expandAnimationState === COLLAPSED_STATE) {\n          if (this._navService.collapsed) {\n            this._navService.collapsed = false;\n          }\n          this.expandAnimationState = EXPANDED_STATE;\n        } else if (!value && this.expandAnimationState === EXPANDED_STATE) {\n          this.expandAnimationState = COLLAPSED_STATE;\n        }\n      })\n    );\n\n    // 1. If the nav is collapsing, close the open nav group + save its state\n    // 2. If the nav is expanding, expand the nav group if the previous state was expanded\n    this._subscriptions.push(\n      this._navService.animateOnCollapsed.subscribe((goingToCollapse: boolean) => {\n        if (goingToCollapse && this.expanded) {\n          this.wasExpanded = true;\n          this.expandAnimationState = COLLAPSED_STATE;\n        } else if (!goingToCollapse && this.wasExpanded) {\n          this.expandGroup();\n          this.wasExpanded = false;\n        }\n      })\n    );\n\n    // If a link is clicked, expand the nav group\n    this._subscriptions.push(\n      this._navGroupService.expandChange.subscribe((expand: boolean) => {\n        if (expand && !this.expanded) {\n          this.expandGroup();\n        }\n      })\n    );\n  }\n\n  private wasExpanded: boolean = false;\n\n  @HostBinding('class.is-expanded')\n  get expanded(): boolean {\n    return this._itemExpand.expanded;\n  }\n\n  set expanded(value: boolean) {\n    if (this._itemExpand.expanded !== value) {\n      this._itemExpand.expanded = value;\n      this.expandedChange.emit(value);\n    }\n  }\n\n  @Input('clrVerticalNavGroupExpanded')\n  set userExpandedInput(value: boolean) {\n    value = !!value;\n    if (this.expanded !== value) {\n      // We have to call toggleExpand because some cases require animations to occur first\n      // Directly setting the Expand service value skips the animation and can result in\n      // nodes in the DOM but the nav group still being collapsed\n      this.toggleExpand();\n    }\n  }\n\n  @Output('clrVerticalNavGroupExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  private _subscriptions: Subscription[] = [];\n\n  private _expandAnimationState: string = COLLAPSED_STATE;\n\n  expandGroup(): void {\n    this.expanded = true;\n    // Expanded animation occurs after Expand.expand is set to true\n    this.expandAnimationState = EXPANDED_STATE;\n  }\n\n  collapseGroup(): void {\n    // If a Vertical Nav Group toggle button is clicked while the Vertical Nav is in Collapsed state,\n    // the Vertical Nav should be expanded first.\n    this.expandAnimationState = COLLAPSED_STATE;\n  }\n\n  // closes a group after the collapse animation\n  expandAnimationDone($event: AnimationEvent) {\n    if ($event.toState === COLLAPSED_STATE) {\n      this.expanded = false;\n    }\n  }\n\n  get expandAnimationState(): string {\n    return this._expandAnimationState;\n  }\n\n  set expandAnimationState(value: string) {\n    if (value !== this._expandAnimationState) {\n      this._expandAnimationState = value;\n    }\n  }\n\n  toggleExpand(): void {\n    if (this.expanded) {\n      this.collapseGroup();\n    } else {\n      // If nav is collasped, first open the nav\n      if (this._navService.collapsed) {\n        this._navService.collapsed = false;\n      }\n      // then expand the nav group\n      this.expandGroup();\n    }\n  }\n\n  ngAfterContentInit() {\n    // This makes sure that if someone marks a nav group expanded in a collapsed nav\n    // the expanded property is switched back to collapsed state.\n    if (this._navService.collapsed && this.expanded) {\n      this.wasExpanded = true;\n      this.expandAnimationState = COLLAPSED_STATE;\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this._navGroupRegistrationService.unregisterNavGroup();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-vertical-nav-group-children',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class ClrVerticalNavGroupChildren {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy } from '@angular/core';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\n\n@Directive({ selector: '[clrVerticalNavIcon]', host: { class: 'nav-icon' } })\nexport class ClrVerticalNavIcon implements OnDestroy {\n  constructor(private _verticalNavIconService: VerticalNavIconService) {\n    this._verticalNavIconService.registerIcon();\n  }\n\n  ngOnDestroy() {\n    this._verticalNavIconService.unregisterIcon();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, HostListener, Optional } from '@angular/core';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\n\n@Component({\n  selector: '[clrVerticalNavLink]',\n  template: `\n        <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n        <span class=\"nav-text\">\n            <ng-content></ng-content>    \n        </span>\n    `,\n  host: { class: 'nav-link' },\n})\nexport class ClrVerticalNavLink {\n  constructor(@Optional() private _navGroupService: VerticalNavGroupService) {}\n\n  @HostListener('click')\n  public expandParentNavGroup(): void {\n    if (this._navGroupService) {\n      this._navGroupService.expand();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrVerticalNav } from './vertical-nav';\nimport { ClrVerticalNavGroup } from './vertical-nav-group';\nimport { ClrVerticalNavGroupChildren } from './vertical-nav-group-children';\nimport { ClrVerticalNavIcon } from './vertical-nav-icon';\nimport { ClrVerticalNavLink } from './vertical-nav-link';\n\nexport const CLR_VERTICAL_NAV_DIRECTIVES: Type<any>[] = [\n  ClrVerticalNav,\n  ClrVerticalNavLink,\n  ClrVerticalNavGroup,\n  ClrVerticalNavGroupChildren,\n  ClrVerticalNavIcon,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_VERTICAL_NAV_DIRECTIVES],\n  exports: [CLR_VERTICAL_NAV_DIRECTIVES, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrVerticalNavModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrMainContainerModule } from './main-container/main-container.module';\nimport { ClrNavigationModule } from './nav/navigation.module';\nimport { ClrTabsModule } from './tabs/tabs.module';\nimport { ClrVerticalNavModule } from './vertical-nav/vertical-nav.module';\n\n@NgModule({ exports: [ClrMainContainerModule, ClrNavigationModule, ClrTabsModule, ClrVerticalNavModule] })\nexport class ClrLayoutModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScrollingService {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  stopScrolling(): void {\n    this._document.body.classList.add('no-scrolling');\n  }\n\n  resumeScrolling(): void {\n    if (this._document.body.classList.contains('no-scrolling')) {\n      this._document.body.classList.remove('no-scrolling');\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport {\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  ViewChild,\n} from '@angular/core';\nimport { FocusTrapDirective } from '../utils/focus-trap/focus-trap.directive';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../utils/id-generator/id-generator.service';\nimport { ScrollingService } from '../utils/scrolling/scrolling-service';\n\n@Component({\n  selector: 'clr-modal',\n  viewProviders: [ScrollingService],\n  templateUrl: './modal.html',\n  styles: [\n    `\n        :host { display: none; }\n        :host.open { display: inline; }\n    `,\n  ],\n  animations: [\n    trigger('fadeDown', [\n      transition('* => false', [style({ opacity: 0, transform: 'translate(0, -25%)' }), animate('0.2s ease-in-out')]),\n      transition('false => *', [animate('0.2s ease-in-out', style({ opacity: 0, transform: 'translate(0, -25%)' }))]),\n    ]),\n    trigger('fade', [\n      transition('void => *', [style({ opacity: 0 }), animate('0.2s ease-in-out', style({ opacity: 0.85 }))]),\n      transition('* => void', [animate('0.2s ease-in-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrModal implements OnChanges, OnDestroy {\n  @ViewChild(FocusTrapDirective) focusTrap: FocusTrapDirective;\n\n  @HostBinding('class.open')\n  @Input('clrModalOpen')\n  _open: boolean = false;\n  @Output('clrModalOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrModalClosable') closable: boolean = true;\n  @Input('clrModalSize') size: string;\n  @Input('clrModalStaticBackdrop') staticBackdrop: boolean = true;\n  @Input('clrModalSkipAnimation') skipAnimation: string = 'false';\n\n  // presently this is only used by wizards\n  @Input('clrModalOverrideScrollService') bypassScrollService: boolean = false;\n  @Input('clrModalPreventClose') stopClose: boolean = false;\n  @Output('clrModalAlternateClose') altClose: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor(\n    private _scrollingService: ScrollingService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public modalId: string\n  ) {}\n\n  // Detect when _open is set to true and set no-scrolling to true\n  ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    if (!this.bypassScrollService && changes && changes.hasOwnProperty('_open')) {\n      if (changes._open.currentValue) {\n        this._scrollingService.stopScrolling();\n      } else {\n        this._scrollingService.resumeScrolling();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._scrollingService.resumeScrolling();\n  }\n\n  open(): void {\n    if (this._open) {\n      return;\n    }\n    this._open = true;\n    this._openChanged.emit(true);\n  }\n\n  @HostListener('body:keyup.escape')\n  close(): void {\n    if (this.stopClose) {\n      this.altClose.emit(false);\n      return;\n    }\n    if (!this.closable || !this._open) {\n      return;\n    }\n    this._open = false;\n    // SPECME\n    this.focusTrap.setPreviousFocus(); // Handles moving focus back to the element that had it before.\n  }\n\n  fadeDone(e: AnimationEvent) {\n    if (e.toState === 'void') {\n      // TODO: Investigate if we can decouple from animation events\n      this._openChanged.emit(false);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\n\n/**\n * Allows modal overflow area to be scrollable via keyboard.\n * The modal body will focus with keyboard navigation only.\n * This allows inner focusable items to be focused without\n * the overflow scroll being focused.\n */\n@Directive({\n  selector: '.modal-body',\n  host: {\n    '[attr.tabindex]': 'tabindex',\n  },\n})\nexport class ClrModalBody {\n  tabindex = 0;\n\n  @HostListener('mousedown')\n  mouseDown() {\n    // tabindex = 0 binding should be removed\n    // so it won't be focused when click starts with mousedown\n    delete this.tabindex;\n  }\n\n  @HostListener('mouseup')\n  mouseUp() {\n    // set the tabindex binding back when click is completed with mouseup\n    this.tabindex = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrFocusTrapModule } from '../utils/focus-trap/focus-trap.module';\nimport { ClrModal } from './modal';\nimport { ClrModalBody } from './modal-body';\nimport { ClrFocusOnViewInitModule } from '../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nexport const CLR_MODAL_DIRECTIVES: Type<any>[] = [ClrModal, ClrModalBody];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusTrapModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_MODAL_DIRECTIVES],\n  exports: [CLR_MODAL_DIRECTIVES, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrModalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Point } from '../common/popover';\n\nexport interface Position {\n  anchorPoint: Point;\n  popoverPoint: Point;\n  offsetY: number;\n  offsetX: number;\n}\n\nexport const SIGNPOST_POSITIONS: { [input: string]: Position } = {\n  'top-left': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_RIGHT, offsetY: -10, offsetX: 0 },\n  'top-middle': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_CENTER, offsetY: -10, offsetX: 0 },\n  'top-right': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_LEFT, offsetY: -10, offsetX: 0 },\n  'right-top': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_BOTTOM, offsetY: 2, offsetX: 14 },\n  'right-middle': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n  'right-bottom': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_TOP, offsetY: -1, offsetX: 14 },\n  'bottom-right': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_LEFT, offsetY: 9, offsetX: -1 },\n  'bottom-middle': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_CENTER, offsetY: 9, offsetX: 12 },\n  'bottom-left': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_RIGHT, offsetY: 9, offsetX: 0 },\n  'left-bottom': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_TOP, offsetY: 0, offsetX: -14 },\n  'left-middle': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_CENTER, offsetY: 4, offsetX: -14 },\n  'left-top': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_BOTTOM, offsetY: 0, offsetX: -14 },\n  default: { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional, OnDestroy, PLATFORM_ID } from '@angular/core';\n\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { SIGNPOST_POSITIONS } from './signpost-positions';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n// aka where the arrow / pointer is at in relation to the anchor\nconst POSITIONS: string[] = [\n  'top-left',\n  'top-middle',\n  'top-right',\n  'right-top',\n  'right-middle', // default\n  'right-bottom',\n  'bottom-right',\n  'bottom-middle',\n  'bottom-left',\n  'left-bottom',\n  'left-middle',\n  'left-top',\n];\n\n@Component({\n  selector: 'clr-signpost-content',\n  template: `\n      <div class=\"signpost-wrap\">\n          <div class=\"popover-pointer\"></div>\n          <div class=\"signpost-content-body\">\n              <ng-content></ng-content>\n          </div>\n          <div class=\"signpost-content-header\">\n              <button type=\"button\" [attr.aria-label]=\"commonStrings.keys.signpostClose\" class=\"signpost-action close\"\n                      (click)=\"close()\" [attr.aria-controls]=\"signpostContentId\">\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n      </div>\n  `,\n  host: { '[class.signpost-content]': 'true', '[id]': 'signpostContentId' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrSignpostContent extends AbstractPopover implements OnDestroy {\n  private document: Document;\n\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public signpostContentId: string,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(DOCUMENT) document: any\n  ) {\n    super(injector, parentHost);\n    if (!parentHost) {\n      throw new Error('clr-signpost-content should only be used inside of a clr-signpost');\n    }\n    // Defaults\n    this.position = 'right-middle';\n    this.closeOnOutsideClick = true;\n    this.signpostIdService.setId(signpostContentId);\n\n    this.document = document;\n  }\n\n  /**********\n   *\n   * @description\n   * Close function that uses the signpost instance to toggle the state of the content popover.\n   *\n   */\n  close() {\n    this.toggleService.open = false;\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  /*********\n   *\n   * @description\n   * A setter for the position of the ClrSignpostContent popover. This is a combination of the following:\n   * - anchorPoint - where on the trigger to anchor the ClrSignpostContent\n   * - popoverPoint - where on the ClrSignpostContent container to align with the anchorPoint\n   * - offsetY - where on the Y axis to align the ClrSignpostContent so it meets specs\n   * - offsetX - where on the X axis to align the ClrSignpostContent so it meets specs\n   * There are 12 possible positions to place a ClrSignpostContent container:\n   * - top-left\n   * - top-middle\n   * - top-right\n   * - right-top\n   * - right-middle\n   * - right-bottom\n   * - bottom-right\n   * - bottom-middle\n   * - bottom-left\n   * - left-bottom\n   * - left-middle\n   * - left-top\n   *\n   * I think of it as follows for 'top-left' -> CONTAINER_SIDE-SIDE_POSITION. In this case CONTAINER_SIDE is 'top'\n   * meaning the top of the trigger icon (above the icon that hides/shows) the ClrSignpostContent. And, SIDE_POSITION\n   * is 'left' meaning two things: 1) the ClrSignpostContent container extends to the left and 2) the 'arrow/pointer'\n   * linking the SingpostContent to the trigger points down at the horizontal center of the trigger icon.\n   *\n   * @param newPosition\n   */\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right-middle';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, this.position);\n\n    const setPosition = SIGNPOST_POSITIONS[this.position];\n    this.anchorPoint = setPosition.anchorPoint;\n    this.popoverPoint = setPosition.popoverPoint;\n    this.popoverOptions.offsetY = setPosition.offsetY;\n    this.popoverOptions.offsetX = setPosition.offsetX;\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId) && this.el.nativeElement.contains(this.document.activeElement)) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrSignpost } from './signpost';\nimport { ClrSignpostContent } from './signpost-content';\nimport { ClrSignpostTrigger } from './signpost-trigger';\n\nexport const CLR_SIGNPOST_DIRECTIVES: Type<any>[] = [ClrSignpost, ClrSignpostContent, ClrSignpostTrigger];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_SIGNPOST_DIRECTIVES],\n  exports: [CLR_SIGNPOST_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrSignpostModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class TooltipIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  updateId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\n@Component({\n  selector: 'clr-tooltip',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip]': 'true',\n  },\n  providers: [\n    ClrPopoverToggleService,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    // TODO: consider centralizing the unique id string on a service that provides ariaAttributes that need it\n    // AriaService in layout/tabs/providers might be a good starting point.\n    UNIQUE_ID_PROVIDER,\n    TooltipIdService,\n  ],\n})\nexport class ClrTooltip {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional } from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\nconst POSITIONS: string[] = ['bottom-left', 'bottom-right', 'top-left', 'top-right', 'right', 'left'];\n\nconst SIZES: string[] = ['xs', 'sm', 'md', 'lg'];\n\n@Component({\n  selector: 'clr-tooltip-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip-content]': 'true',\n    '[style.opacity]': '1',\n    '[attr.role]': '\"tooltip\"',\n    '[id]': 'id',\n  },\n})\nexport class ClrTooltipContent extends AbstractPopover {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    private tooltipIdService: TooltipIdService\n  ) {\n    super(injector, parentHost);\n\n    if (!parentHost) {\n      throw new Error('clr-tooltip-content should only be used inside of a clr-tooltip');\n    }\n\n    // Defaults\n    this.position = 'right';\n    this.size = 'sm';\n\n    // Set the default id in case consumer does not supply a custom id.\n    this.updateId(uniqueId);\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input()\n  set id(value: string) {\n    value ? this.updateId(value) : this.updateId('');\n  }\n  private _id;\n\n  private updateId(id: string) {\n    this._id = id;\n    this.tooltipIdService.updateId(id);\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.position);\n\n    // set the popover values based on direction\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'right':\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'left':\n        this.anchorPoint = Point.LEFT_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      default:\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private _size: string;\n\n  get size() {\n    return this._size;\n  }\n\n  @Input('clrSize')\n  set size(size: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.size);\n    if (size && SIZES.indexOf(size) > -1) {\n      this._size = size;\n    } else {\n      this._size = 'sm';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.size);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrTooltipTrigger]',\n  host: {\n    tabindex: '0',\n    '[class.tooltip-trigger]': 'true',\n    '[attr.aria-describedby]': 'ariaDescribedBy',\n    '[attr.role]': '\"button\"',\n  },\n})\nexport class ClrTooltipTrigger {\n  public ariaDescribedBy;\n  private subs: Subscription[] = [];\n  constructor(private toggleService: ClrPopoverToggleService, private tooltipIdService: TooltipIdService) {\n    // The aria-described by comes from the id of content. It\n    this.subs.push(this.tooltipIdService.id.subscribe(tooltipId => (this.ariaDescribedBy = tooltipId)));\n  }\n\n  @HostListener('mouseenter')\n  @HostListener('focus')\n  showTooltip(): void {\n    this.toggleService.open = true;\n  }\n\n  @HostListener('mouseleave')\n  @HostListener('blur')\n  hideTooltip(): void {\n    this.toggleService.open = false;\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrTooltip } from './tooltip';\nimport { ClrTooltipContent } from './tooltip-content';\nimport { ClrTooltipTrigger } from './tooltip-trigger';\n\nexport const CLR_TOOLTIP_DIRECTIVES: Type<any>[] = [ClrTooltip, ClrTooltipTrigger, ClrTooltipContent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_TOOLTIP_DIRECTIVES],\n  exports: [CLR_TOOLTIP_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrTooltipModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrDropdownModule } from './dropdown/dropdown.module';\nimport { ClrSignpostModule } from './signpost/signpost.module';\nimport { ClrTooltipModule } from './tooltip/tooltip.module';\n\n@NgModule({ exports: [ClrDropdownModule, ClrSignpostModule, ClrTooltipModule] })\nexport class ClrPopoverModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ButtonHubService {\n  public buttonsReady: boolean = false;\n\n  private _previousBtnClicked = new Subject<any>();\n  public get previousBtnClicked(): Observable<any> {\n    return this._previousBtnClicked.asObservable();\n  }\n\n  private _nextBtnClicked = new Subject<any>();\n  public get nextBtnClicked(): Observable<any> {\n    return this._nextBtnClicked.asObservable();\n  }\n\n  private _dangerBtnClicked = new Subject<any>();\n  public get dangerBtnClicked(): Observable<any> {\n    return this._dangerBtnClicked.asObservable();\n  }\n\n  private _cancelBtnClicked = new Subject<any>();\n  public get cancelBtnClicked(): Observable<any> {\n    return this._cancelBtnClicked.asObservable();\n  }\n\n  private _finishBtnClicked = new Subject<any>();\n  public get finishBtnClicked(): Observable<any> {\n    return this._finishBtnClicked.asObservable();\n  }\n\n  private _customBtnClicked = new Subject<any>();\n  public get customBtnClicked(): Observable<any> {\n    return this._customBtnClicked.asObservable();\n  }\n\n  public buttonClicked(buttonType: string): void {\n    if ('previous' === buttonType) {\n      this._previousBtnClicked.next();\n    } else if ('next' === buttonType) {\n      this._nextBtnClicked.next();\n    } else if ('finish' === buttonType) {\n      this._finishBtnClicked.next();\n    } else if ('danger' === buttonType) {\n      this._dangerBtnClicked.next();\n    } else if ('cancel' === buttonType) {\n      this._cancelBtnClicked.next();\n    } else {\n      this._customBtnClicked.next(buttonType);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\n/**\n * PageCollectionService manages the collection of pages assigned to the wizard and offers\n * a number of functions useful across the wizards providers and subcomponents -- all related\n * to essentially lookups on the collection of pages.\n *\n * The easiest way to access PageCollectionService is via the wizard. The\n * following example would allow you to access your instance of the wizard from your host\n * component and thereby access the page collection via YourHostComponent.wizard.pageCollection.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n * The heart of the page collection is the query list of pages, which it is assigned as a\n * reference to the Wizard.pages QueryList when the wizard is created.\n *\n */\n@Injectable()\nexport class PageCollectionService {\n  /**\n   * A reference to the Wizard.pages QueryList.\n   *\n   * Populated when the wizard is created.\n   *\n   * @memberof PageCollectionService\n   */\n  public pages: QueryList<ClrWizardPage>;\n\n  /**\n   * Converts the PageCollectionService.pages QueryList to an array and returns it.\n   *\n   * Useful for many instances when you would prefer a QueryList to act like an array.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesAsArray(): ClrWizardPage[] {\n    return this.pages ? this.pages.toArray() : [];\n  }\n\n  /**\n   * Returns the length of the pages query list.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesCount(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /**\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get penultimatePage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 2) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 2];\n  }\n\n  /**\n   * Returns the last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get lastPage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 1) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 1];\n  }\n\n  /**\n   * Returns the first page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get firstPage(): ClrWizardPage {\n    if (!this.pagesCount) {\n      return;\n    }\n\n    return this.pagesAsArray[0];\n  }\n\n  /**\n   * Used mostly internally, but accepts a string ID and returns a ClrWizardPage\n   * object that matches the ID passed. Note that IDs here should include the prefix\n   * \"clr-wizard-page-\".\n   *\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageById(id: string): ClrWizardPage {\n    const foundPages: ClrWizardPage[] = this.pages.filter((page: ClrWizardPage) => id === page.id);\n    return this.checkResults(foundPages, id);\n  }\n\n  /**\n   * Accepts s number as a parameter and treats that number as the index of the page\n   * you're looking for in the collection of pages. Returns a  wizard page object.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageByIndex(index: number): ClrWizardPage {\n    const pageCount = this.pagesCount;\n    const pagesLastIndex: number = pageCount > 1 ? pageCount - 1 : 0;\n\n    if (index < 0) {\n      throw new Error('Cannot retrieve page with index of ' + index);\n    }\n\n    if (index > pagesLastIndex) {\n      throw new Error('Page index is greater than length of pages array.');\n    }\n\n    return this.pagesAsArray[index];\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns its index in the\n   * collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageIndex(page: ClrWizardPage): number {\n    const index = this.pagesAsArray.indexOf(page);\n\n    if (index < 0) {\n      throw new Error('Requested page cannot be found in collection of pages.');\n    }\n\n    return index;\n  }\n\n  /**\n   * Consolidates guard logic that prevents a couple of unfortunate edge cases with\n   * look ups on the collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  private checkResults(results: ClrWizardPage[], requestedPageId: string) {\n    const foundPagesCount: number = results.length || 0;\n\n    if (foundPagesCount > 1) {\n      throw new Error('More than one page has the requested id ' + requestedPageId + '.');\n    } else if (foundPagesCount < 1) {\n      throw new Error('No page can be found with the id ' + requestedPageId + '.');\n    } else {\n      return results[0];\n    }\n  }\n\n  /**\n   * Accepts two numeric indexes and returns an array of wizard page objects that include\n   * all wizard pages in the page collection from the first index to the second.\n   *\n   * @memberof PageCollectionService\n   */\n  public pageRange(start: number, end: number): ClrWizardPage[] {\n    let pages: ClrWizardPage[] = [];\n\n    if (start < 0 || end < 0) {\n      return [];\n    }\n\n    if (start === null || typeof start === 'undefined' || isNaN(start)) {\n      return [];\n    }\n\n    if (end === null || typeof end === 'undefined' || isNaN(end)) {\n      return [];\n    }\n\n    if (end > this.pagesCount) {\n      end = this.pagesCount;\n    }\n\n    pages = this.pagesAsArray;\n\n    if (end - start === 0) {\n      // just return the one page they want\n      return [this.getPageByIndex(start)];\n    }\n\n    // slice end does not include item referenced by end index, which is weird for users\n    // incrementing end index here to correct that so users and other methods\n    // don't have to think about it\n    end = end + 1;\n\n    // slice does not return the last one in the range but it does include the first one\n    // does not modify original array\n    return pages.slice(start, end);\n  }\n\n  /**\n   * Accepts two wizard page objects and returns those page objects with all other page\n   * objects between them in the page collection. It doesn't care which page is ahead of the\n   * other in the parameters. It will be smart enough to figure that out  on its own.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageRangeFromPages(page: ClrWizardPage, otherPage: ClrWizardPage): ClrWizardPage[] {\n    const pageIndex = this.getPageIndex(page);\n    const otherPageIndex = this.getPageIndex(otherPage);\n    let startIndex: number;\n    let endIndex: number;\n\n    if (pageIndex <= otherPageIndex) {\n      startIndex = pageIndex;\n      endIndex = otherPageIndex;\n    } else {\n      startIndex = otherPageIndex;\n      endIndex = pageIndex;\n    }\n    return this.pageRange(startIndex, endIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately before it in the page collection. Returns null if there is\n   * no page before the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPreviousPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const previousPageIndex = myPageIndex - 1;\n    if (previousPageIndex < 0) {\n      return null;\n    }\n    return this.getPageByIndex(previousPageIndex);\n  }\n\n  /**\n   * Accepts a wizard page object as a parameter and returns a Boolean that says if\n   * the page you sent it is complete.\n   *\n   * @memberof PageCollectionService\n   */\n  public previousPageIsCompleted(page: ClrWizardPage) {\n    let previousPage: ClrWizardPage;\n\n    if (!page) {\n      return false;\n    }\n\n    previousPage = this.getPreviousPage(page);\n\n    if (null === previousPage) {\n      // page is the first page. no previous page.\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately after it in the page collection. Returns null if there is\n   * no page after the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getNextPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const nextPageIndex = myPageIndex + 1;\n\n    if (nextPageIndex >= this.pagesAsArray.length) {\n      return null;\n    }\n    return this.getPageByIndex(nextPageIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and generates a step item id from the\n   * page ID. Returns the generated step item ID as a string.\n   *\n   * @memberof PageCollectionService\n   */\n  public getStepItemIdForPage(page: ClrWizardPage) {\n    const pageId = page.id;\n    const pageIdParts = pageId.split('-').reverse();\n\n    pageIdParts[1] = 'step';\n    return pageIdParts.reverse().join('-');\n  }\n\n  /**\n   * Generally only used internally to mark that a specific page has been \"committed\".\n   * This involves marking the page complete and firing the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) output. Takes the wizard page object that you intend to\n   * mark completed as a parameter.\n   *\n   * @memberof PageCollectionService\n   */\n  public commitPage(page: ClrWizardPage) {\n    const pageHasOverrides = page.stopNext || page.preventDefault;\n    page.completed = true;\n\n    if (!pageHasOverrides) {\n      // prevent loop of event emission; alternate flows work off\n      // of event emitters this is how they break that cycle.\n      page.onCommit.emit(page.id);\n    }\n  }\n\n  // used by the navService to navigate back to first possible step after\n  // pages are reset\n\n  /**\n   *\n   * @memberof PageCollectionService\n   */\n  private _pagesReset = new Subject<boolean>();\n\n  /**\n   * An observable that the navigation service listens to in order to know when\n   * the page collection completed states have been reset to false so that way it\n   * can also reset the navigation to make the first page in the page collection\n   * current/active.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesReset(): Observable<boolean> {\n    return this._pagesReset.asObservable();\n  }\n\n  /**\n   * Sets all completed states of the pages in the page collection to false and\n   * notifies the navigation service to likewise reset the navigation.\n   *\n   * @memberof PageCollectionService\n   */\n  public reset() {\n    this.pagesAsArray.forEach((page: ClrWizardPage) => {\n      page.completed = false;\n    });\n    this._pagesReset.next(true);\n  }\n\n  /**\n   * Rolls through all the pages in the page collection to make sure there are no\n   * incomplete pages sandwiched between completed pages in the workflow. Identifies\n   * the first incomplete page index and sets all pages behind it to a completed\n   * state of false.\n   *\n   * @memberof PageCollectionService\n   */\n  public updateCompletedStates(): void {\n    const firstIncompleteIndex = this.findFirstIncompletePageIndex();\n\n    if (firstIncompleteIndex === this.pagesAsArray.length - 1) {\n      // all complete no need to do anything\n      return;\n    }\n\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (index > firstIncompleteIndex) {\n        page.completed = false;\n      }\n    });\n  }\n\n  /**\n   * Retrieves the index of the first incomplete page in the page collection.\n   *\n   * @memberof PageCollectionService\n   */\n  public findFirstIncompletePageIndex(): number {\n    let returnIndex: number = null;\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (null === returnIndex && false === page.completed) {\n        returnIndex = index;\n      }\n    });\n\n    // fallthrough, all completed, return last page\n    if (null === returnIndex) {\n      returnIndex = this.pagesCount - 1;\n    }\n\n    return returnIndex;\n  }\n\n  public findFirstIncompletePage(): ClrWizardPage {\n    const myIncompleteIndex = this.findFirstIncompletePageIndex();\n    return this.pagesAsArray[myIncompleteIndex];\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\nimport { ButtonHubService } from './button-hub.service';\nimport { PageCollectionService } from './page-collection.service';\n\n/**\n * Performs navigation functions for a wizard and manages the current page. Presented as a\n * separate service to encapsulate the behavior of navigating and completing the wizard so\n * that it can be shared across the wizard and its sub-components.\n *\n * The easiest way to access the navigation service is there a reference on your wizard. The\n * Following example would allow you to access your instance of the wizard from your host\n * component and thereby access the navigation service via YourHostComponent.wizard.navService.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n */\n@Injectable()\nexport class WizardNavigationService implements OnDestroy {\n  /**\n   * Is notified when a previous button is clicked in the wizard. Performs checks\n   * before alerting the current page of the button click. Enacts navigation to\n   * the previous page if not overridden at the page level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previousButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Next button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public nextButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a danger button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public dangerButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a  finish button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public finishButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Custom button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public customButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Cancel button is clicked in the wizard. Notifies the wizard,\n   * which handles all cancel functionality, if cancel is not overridden at the page\n   * level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancelButtonSubscription: Subscription;\n\n  /**\n   * Resets navigation to make the first page current when the page collection service\n   * emits an event notifying WizardNavigationService that it has reset all pages\n   * to their pristine, incomplete state.\n   *\n   * @memberof WizardNavigationService\n   */\n  public pagesResetSubscription: Subscription;\n\n  /**\n   * Creates an instance of WizardNavigationService. Also sets up subscriptions\n   * that listen to the button service to determine when a button has been clicked\n   * in the wizard. Is also responsible for taking action when the page collection\n   * requests that navigation be reset to its pristine state.\n   *\n   * @memberof WizardNavigationService\n   */\n  constructor(public pageCollection: PageCollectionService, public buttonService: ButtonHubService) {\n    this.previousButtonSubscription = this.buttonService.previousBtnClicked.subscribe(() => {\n      const currentPage = this.currentPage;\n      if (this.currentPageIsFirst || currentPage.previousStepDisabled) {\n        return;\n      }\n      currentPage.previousButtonClicked.emit(currentPage);\n      if (!currentPage.preventDefault) {\n        this.previous();\n      }\n    });\n\n    this.nextButtonSubscription = this.buttonService.nextBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('next');\n    });\n\n    this.dangerButtonSubscription = this.buttonService.dangerBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('danger');\n    });\n\n    this.finishButtonSubscription = this.buttonService.finishBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('finish');\n    });\n\n    this.customButtonSubscription = this.buttonService.customBtnClicked.subscribe((type: string) => {\n      if (!this.wizardStopNavigation) {\n        this.currentPage.customButtonClicked.emit(type);\n      }\n    });\n\n    this.cancelButtonSubscription = this.buttonService.cancelBtnClicked.subscribe(() => {\n      if (this.wizardStopNavigation) {\n        return;\n      }\n\n      if (this.currentPage.preventDefault) {\n        this.currentPage.pageOnCancel.emit(this.currentPage);\n      } else {\n        this.cancel();\n      }\n    });\n\n    this.pagesResetSubscription = this.pageCollection.pagesReset.subscribe(() => {\n      this.setFirstPageCurrent();\n    });\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  ngOnDestroy(): void {\n    this.previousButtonSubscription.unsubscribe();\n    this.nextButtonSubscription.unsubscribe();\n    this.dangerButtonSubscription.unsubscribe();\n    this.finishButtonSubscription.unsubscribe();\n    this.customButtonSubscription.unsubscribe();\n    this.cancelButtonSubscription.unsubscribe();\n    this.pagesResetSubscription.unsubscribe();\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  private _currentChanged = new Subject<ClrWizardPage>();\n\n  /**\n   * An Observable that is predominantly used amongst the subcomponents and services\n   * of the wizard. It is recommended that users listen to the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output instead of this Observable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageChanged(): Observable<ClrWizardPage> {\n    // TODO: MAKE SURE EXTERNAL OUTPUTS SAY 'CHANGE' NOT 'CHANGED'\n    // A BREAKING CHANGE SO AWAITING MINOR RELEASE\n    return this._currentChanged.asObservable();\n  }\n\n  /**\n   * A Boolean flag used by the ClrWizardPage to avoid a race condition when pages are\n   * loading and there is no current page defined.\n   *\n   * @memberof WizardNavigationService\n   */\n  public navServiceLoaded = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.forceForward (clrWizardForceForwardNavigation) input. When true,\n   * navigating backwards in the stepnav menu will reset any skipped pages' completed\n   * state to false.\n   *\n   * This is useful when a wizard executes validation on a page-by-page basis when\n   * the next button is clicked.\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceForwardNavigation = false;\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  public get currentPageTitle(): TemplateRef<any> {\n    // when the querylist of pages is empty. this is the first place it fails...\n    if (!this.currentPage) {\n      return null;\n    }\n    return this.currentPage.title;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the first\n   * page in the Wizard.\n   *\n   * This is helpful for determining whether a page is navigable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsFirst(): boolean {\n    return this.pageCollection.firstPage === this.currentPage;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the\n   * last page in the Wizard.\n   *\n   * This is used to determine which buttons should display in the wizard footer.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsLast(): boolean {\n    return this.pageCollection.lastPage === this.currentPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _currentPage: ClrWizardPage;\n\n  /**\n   * Returns the ClrWizardPage object of the current page or null.\n   *\n   * @memberof WizardNavigationService\n   */\n  get currentPage(): ClrWizardPage {\n    if (!this._currentPage) {\n      return null;\n    }\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a ClrWizardPage object, since that object to be the current/active\n   * page in the wizard, and emits the ClrWizardPage.onLoad (clrWizardPageOnLoad)\n   * event for that page.\n   *\n   * Note that all of this work is bypassed if the ClrWizardPage object is already\n   * the current page.\n   *\n   * @memberof WizardNavigationService\n   */\n  set currentPage(page: ClrWizardPage) {\n    if (this._currentPage !== page && !this.wizardStopNavigation) {\n      this._currentPage = page;\n      page.onLoad.emit(page.id);\n      this._currentChanged.next(page);\n    }\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToNextPage = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that forward navigation\n   * has occurred. It is recommended that you use the Wizard.onMoveNext\n   * (clrWizardOnNext) output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToNextPage(): Observable<boolean> {\n    return this._movedToNextPage.asObservable();\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _wizardFinished = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that the nav service\n   * has approved completion of the wizard.\n   *\n   * It is recommended that you use the Wizard.wizardFinished (clrWizardOnFinish)\n   * output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get wizardFinished(): Observable<boolean> {\n    return this._wizardFinished.asObservable();\n  }\n\n  /**\n   * This is a public function that can be used to programmatically advance\n   * the user to the next page.\n   *\n   * When invoked, this method will move the wizard to the next page after\n   * successful validation. Note that this method goes through all checks\n   * and event emissions as if Wizard.next(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.next(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public next(): void {\n    if (this.currentPageIsLast) {\n      this.checkAndCommitCurrentPage('finish');\n    } else {\n      this.checkAndCommitCurrentPage('next');\n    }\n  }\n\n  /**\n   * Bypasses checks and most event emissions to force a page to navigate forward.\n   *\n   * Comparable to calling Wizard.next() or Wizard.forceNext().\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceNext(): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    const nextPage: ClrWizardPage = this.pageCollection.getNextPage(currentPage);\n\n    // catch errant null or undefineds that creep in\n    if (!nextPage) {\n      throw new Error('The wizard has no next page to go to.');\n    }\n\n    if (this.wizardStopNavigation) {\n      return;\n    }\n\n    if (!currentPage.completed) {\n      // this is a state that alt next flows can get themselves in...\n      this.pageCollection.commitPage(currentPage);\n    }\n    this.currentPage = nextPage;\n  }\n\n  /**\n   * Accepts a button/action type as a parameter. Encapsulates all logic for\n   * event emissions, state of the current page, and wizard and page level overrides.\n   *\n   * Avoid calling this function directly unless you really know what you're doing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public checkAndCommitCurrentPage(buttonType: string): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    let iAmTheLastPage: boolean;\n\n    let isNext: boolean;\n    let isDanger: boolean;\n    let isDangerNext: boolean;\n    let isDangerFinish: boolean;\n    let isFinish: boolean;\n\n    if (!currentPage.readyToComplete || this.wizardStopNavigation) {\n      return;\n    }\n\n    iAmTheLastPage = this.currentPageIsLast;\n\n    isNext = buttonType === 'next';\n    isDanger = buttonType === 'danger';\n    isDangerNext = isDanger && !iAmTheLastPage;\n    isDangerFinish = isDanger && iAmTheLastPage;\n    isFinish = buttonType === 'finish' || isDangerFinish;\n\n    if (isFinish && !iAmTheLastPage) {\n      return;\n    }\n\n    currentPage.primaryButtonClicked.emit(buttonType);\n\n    if (isFinish) {\n      currentPage.finishButtonClicked.emit(currentPage);\n    } else if (isDanger) {\n      currentPage.dangerButtonClicked.emit();\n    } else if (isNext) {\n      currentPage.nextButtonClicked.emit();\n    }\n\n    if (currentPage.stopNext || currentPage.preventDefault) {\n      currentPage.onCommit.emit(currentPage.id);\n      return;\n    }\n\n    // order is very important with these emitters!\n    if (isFinish) {\n      // mark page as complete\n      if (!this.wizardHasAltNext) {\n        this.pageCollection.commitPage(currentPage);\n      }\n      this._wizardFinished.next();\n    }\n\n    if (this.wizardHasAltNext) {\n      this.pageCollection.commitPage(currentPage);\n\n      if (isNext || isDangerNext) {\n        this._movedToNextPage.next(true);\n      }\n      // jump out here, no matter what type we're looking at\n      return;\n    }\n\n    if (isNext || isDangerNext) {\n      this.forceNext();\n    }\n\n    if (!this.wizardHasAltNext && !this.wizardStopNavigation) {\n      this._movedToNextPage.next(true);\n    }\n  }\n\n  /**\n   * This is a public function that can be used to programmatically conclude\n   * the wizard.\n   *\n   * When invoked, this method will  initiate the work involved with finalizing\n   * and finishing the wizard workflow. Note that this method goes through all\n   * checks and event emissions as if Wizard.finish(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.finish(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public finish(): void {\n    this.checkAndCommitCurrentPage('finish');\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToPreviousPage = new Subject<boolean>();\n\n  /**\n   * Notifies the wizard when backwards navigation has occurred via the\n   * previous button.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToPreviousPage(): Observable<boolean> {\n    return this._movedToPreviousPage.asObservable();\n  }\n\n  /**\n   * Programmatically moves the wizard to the page before the current page.\n   *\n   * In most instances, it makes more sense to call Wizard.previous()\n   * which does the same thing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previous(): void {\n    let previousPage: ClrWizardPage;\n\n    if (this.currentPageIsFirst || this.wizardStopNavigation) {\n      return;\n    }\n\n    previousPage = this.pageCollection.getPreviousPage(this.currentPage);\n\n    if (!previousPage) {\n      return;\n    }\n\n    this._movedToPreviousPage.next(true);\n\n    if (this.forceForwardNavigation) {\n      this.currentPage.completed = false;\n    }\n\n    this.currentPage = previousPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _cancelWizard = new Subject<any>();\n\n  /**\n   * Notifies the wizard that a user is trying to cancel it.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get notifyWizardCancel(): Observable<any> {\n    return this._cancelWizard.asObservable();\n  }\n\n  /**\n   * Allows a hook into the cancel workflow of the wizard from the nav service. Note that\n   * this route goes through all checks and event emissions as if a cancel button had\n   * been clicked.\n   *\n   * In most cases, users looking for a hook into the cancel routine are actually looking\n   * for a way to close the wizard from their host component because they have prevented\n   * the default cancel action.\n   *\n   * In this instance, it is recommended that you use Wizard.close() to avoid any event\n   * emission loop resulting from an event handler calling back into routine that will\n   * again evoke the events it handles.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancel(): void {\n    this._cancelWizard.next();\n  }\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopCancel (clrWizardPreventDefaultCancel) input. When true, the cancel\n   * routine is subverted and must be reinstated in the host component calling Wizard.close()\n   * at some point.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltCancel: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNext (clrWizardPreventDefaultNext) input. When true, the next and finish\n   * routines are subverted and must be reinstated in the host component calling Wizard.next(),\n   * Wizard.forceNext(), Wizard.finish(), or Wizard.forceFinish().\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltNext: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNavigation (clrWizardPreventNavigation) input. When true, all\n   * navigational elements in the wizard are disabled.\n   *\n   * This is intended to freeze the wizard in place. Events are not fired so this is\n   * not a way to implement alternate functionality for navigation.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardStopNavigation: boolean = false;\n\n  /**\n   * A boolean flag shared with the stepnav items that prevents user clicks on\n   * stepnav items from navigating the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardDisableStepnav: boolean = false;\n\n  /**\n   * Performs all required checks to determine if a user can navigate to a page. Checking at each\n   * point if a page is navigable -- completed where the page immediately after the last completed\n   * page.\n   *\n   * Takes two parameters. The first one must be either the ClrWizardPage object or the ID of the\n   * ClrWizardPage object that you want to make the current page.\n   *\n   * The second parameter is optional and is a Boolean flag for \"lazy completion\". What this means\n   * is the Wizard will mark all pages between the current page and the page you want to navigate\n   * to as completed. This is useful for informational wizards that do not require user action,\n   * allowing an easy means for users to jump ahead.\n   *\n   * To avoid checks on navigation, use ClrWizardPage.makeCurrent() instead.\n   *\n   * @memberof WizardNavigationService\n   */\n  public goTo(pageToGoToOrId: any, lazyComplete: boolean = false) {\n    let pageToGoTo: ClrWizardPage;\n    let currentPage: ClrWizardPage;\n    let myPages: PageCollectionService;\n    let pagesToCheck: ClrWizardPage[];\n    let okayToMove: boolean;\n    let goingForward: boolean;\n    let currentPageIndex: number;\n    let goToPageIndex: number;\n\n    myPages = this.pageCollection;\n    pageToGoTo = typeof pageToGoToOrId === 'string' ? myPages.getPageById(pageToGoToOrId) : pageToGoToOrId;\n    currentPage = this.currentPage;\n\n    // no point in going to the current page. you're there already!\n    // also hard block on any navigation when stopNavigation is true\n    if (pageToGoTo === currentPage || this.wizardStopNavigation) {\n      return;\n    }\n\n    currentPageIndex = myPages.getPageIndex(currentPage);\n    goToPageIndex = myPages.getPageIndex(pageToGoTo);\n    goingForward = goToPageIndex > currentPageIndex;\n    pagesToCheck = myPages.getPageRangeFromPages(this.currentPage, pageToGoTo);\n\n    okayToMove = lazyComplete || this.canGoTo(pagesToCheck);\n\n    if (!okayToMove) {\n      return;\n    }\n\n    if (goingForward && lazyComplete) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        if (page !== pageToGoTo) {\n          page.completed = true;\n        }\n      });\n    } else if (!goingForward && this.forceForwardNavigation) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        page.completed = false;\n      });\n    }\n\n    this.currentPage = pageToGoTo;\n  }\n\n  /**\n   * Accepts a range of ClrWizardPage objects as a parameter. Performs the work of checking\n   * those objects to determine if navigation can be accomplished.\n   *\n   * @memberof WizardNavigationService\n   */\n  public canGoTo(pagesToCheck: ClrWizardPage[]): boolean {\n    let okayToMove = true;\n    const myPages = this.pageCollection;\n\n    // previous page can be important when moving because if it's completed it\n    // allows us to move to the page even if it's incomplete...\n    let previousPagePasses: boolean;\n\n    if (!pagesToCheck || pagesToCheck.length < 1) {\n      return false;\n    }\n\n    pagesToCheck.forEach((page: ClrWizardPage) => {\n      let previousPage: ClrWizardPage;\n\n      if (!okayToMove) {\n        return;\n      }\n\n      if (page.completed) {\n        // default is true. just jump out instead of complicating it.\n        return;\n      }\n\n      // so we know our page is not completed...\n      previousPage = myPages.getPageIndex(page) > 0 ? myPages.getPreviousPage(page) : null;\n      previousPagePasses = previousPage === null || previousPage.completed === true;\n\n      // we are false if not the current page AND previous page is not completed\n      // (but must have a previous page)\n      if (!page.current && !previousPagePasses) {\n        okayToMove = false;\n      }\n      // falls through to true as default\n    });\n\n    return okayToMove;\n  }\n\n  /**\n   * Looks through the collection of pages to find the first one that is incomplete\n   * and makes that page the current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setLastEnabledPageCurrent(): void {\n    const allPages: ClrWizardPage[] = this.pageCollection.pagesAsArray;\n    let lastCompletedPageIndex: number = null;\n\n    allPages.forEach((page: ClrWizardPage, index: number) => {\n      if (page.completed) {\n        lastCompletedPageIndex = index;\n      }\n    });\n\n    if (lastCompletedPageIndex === null) {\n      // always is at least the first item...\n      lastCompletedPageIndex = 0;\n    } else if (lastCompletedPageIndex + 1 < allPages.length) {\n      lastCompletedPageIndex = lastCompletedPageIndex + 1;\n    }\n\n    this.currentPage = allPages[lastCompletedPageIndex];\n  }\n\n  /**\n   * Finds the first page in the collection of pages and makes that page the\n   * current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setFirstPageCurrent(): void {\n    this.currentPage = this.pageCollection.pagesAsArray[0];\n  }\n\n  /**\n   * Updates the stepnav on the left side of the wizard when pages are dynamically\n   * added or removed from the collection of pages.\n   *\n   * @memberof WizardNavigationService\n   */\n  public updateNavigation(): void {\n    let toSetCurrent: ClrWizardPage;\n    let currentPageRemoved: boolean;\n\n    this.pageCollection.updateCompletedStates();\n\n    currentPageRemoved = this.pageCollection.pagesAsArray.indexOf(this.currentPage) < 0;\n    if (currentPageRemoved) {\n      toSetCurrent = this.pageCollection.findFirstIncompletePage();\n      this.currentPage = toSetCurrent;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { ClrWizardHeaderAction } from '../wizard-header-action';\nimport { WizardNavigationService } from './wizard-navigation.service';\n\n@Injectable()\nexport class HeaderActionService {\n  // this service communicates information about the presence/display of header actions\n  // across the wizard\n\n  constructor(public navService: WizardNavigationService) {}\n\n  public wizardHeaderActions: QueryList<ClrWizardHeaderAction>;\n\n  public get wizardHasHeaderActions(): boolean {\n    const wizardHdrActions = this.wizardHeaderActions;\n    if (!wizardHdrActions) {\n      return false;\n    }\n    return wizardHdrActions.toArray().length > 0;\n  }\n\n  public get currentPageHasHeaderActions(): boolean {\n    return this.navService.currentPage ? this.navService.currentPage.hasHeaderActions : false;\n  }\n\n  public get showWizardHeaderActions(): boolean {\n    return !this.currentPageHasHeaderActions && this.wizardHasHeaderActions;\n  }\n\n  public get displayHeaderActionsWrapper(): boolean {\n    return this.currentPageHasHeaderActions || this.wizardHasHeaderActions;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nlet wizardHeaderActionIndex = 0;\n\n@Component({\n  selector: 'clr-wizard-header-action',\n  template: `\n        <button \n            type=\"button\"\n            class=\"btn clr-wizard-header-action btn-link\"\n            [id]=\"id\"\n            [class.disabled]=\"disabled\"\n            (click)=\"click()\"\n            [title]=\"title\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-header-action-wrapper' },\n})\nexport class ClrWizardHeaderAction {\n  // title is explanatory text added to the header action\n  @Input('title') title: string = '';\n\n  // If our host has an ID attribute, we use this instead of our index.\n  @Input('id') _id: string = (wizardHeaderActionIndex++).toString();\n\n  public get id(): string {\n    return `clr-wizard-header-action-${this._id}`;\n  }\n\n  @Input('clrWizardHeaderActionDisabled') public disabled: boolean = false;\n\n  @Output('actionClicked') headerActionClicked: EventEmitter<string> = new EventEmitter(false);\n\n  click(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // passing the header action id allows users to have one method that\n    // routes to many different actions based on the type of header action\n    // clicked. this is further aided by users being able to specify ids\n    // for their header actions.\n    this.headerActionClicked.emit(this._id);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageButtons]' })\nexport class ClrWizardPageButtons {\n  constructor(public pageButtonsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageHeaderActions]' })\nexport class ClrWizardPageHeaderActions {\n  constructor(public pageHeaderActionsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageNavTitle]' })\nexport class ClrWizardPageNavTitle {\n  constructor(public pageNavTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageTitle]' })\nexport class ClrWizardPageTitle {\n  constructor(public pageTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\n\nlet wizardPageIndex = 0;\n\n/**\n * The ClrWizardPage component is responsible for displaying the content of each step\n * in the wizard workflow.\n *\n * ClrWizardPage component has hooks into the navigation service (ClrWizardPage.navService),\n * page collection (ClrWizardPage.pageCollection), and button service\n * (ClrWizardPage.buttonService). These three providers are shared across the components\n * within each instance of a Wizard.\n *\n */\n@Component({\n  selector: 'clr-wizard-page',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[id]': 'id',\n    '[attr.aria-hidden]': '!current',\n    '[attr.aria-labelledby]': 'stepItemId',\n    '[class.active]': 'current',\n    '[class.clr-wizard-page]': 'true',\n  },\n})\nexport class ClrWizardPage implements OnInit {\n  /**\n   * Creates an instance of ClrWizardPage.\n   *\n   * @memberof WizardPage\n   */\n  constructor(\n    private navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService\n  ) {}\n\n  /**\n   * Contains a reference to the page title which is used for a number\n   * of different tasks for display in the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageTitle, { static: true })\n  public pageTitle: ClrWizardPageTitle;\n\n  /**\n   * Contains a reference to the desired title for the page's step in the\n   * navigation on the left side of the wizard. Can be projected to change the\n   * navigation link's text.\n   *\n   * If not defined, then ClrWizardPage.pageTitle will be displayed in the stepnav.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageNavTitle, { static: true })\n  public pageNavTitle: ClrWizardPageNavTitle;\n\n  /**\n   * Contains a reference to the buttons defined within the page. If not defined,\n   * the wizard defaults to the set of buttons defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageButtons, { static: true })\n  public _buttons: ClrWizardPageButtons;\n\n  /**\n   * Contains a reference to the header actions defined within the page. If not defined,\n   * the wizard defaults to the set of header actions defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageHeaderActions, { static: true })\n  public _headerActions: ClrWizardPageHeaderActions;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _nextStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the next page.\n   *\n   * Useful for in-page validation because it prevents forward navigation\n   * and visibly disables the next button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get nextStepDisabled(): boolean {\n    return this._nextStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow forward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageNextDisabled')\n  public set nextStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._nextStepDisabled) {\n      this._nextStepDisabled = valBool;\n      this.nextStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.nextStepDisabled changes.\n   * Should emit the new value of nextStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNextDisabledChange') nextStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _previousStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the previous page.\n   *\n   * Useful for in-page validation because it prevents backward navigation\n   * and visibly disables the previous button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousStepDisabled(): boolean {\n    return this._previousStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow backward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreviousDisabled')\n  public set previousStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._previousStepDisabled) {\n      this._previousStepDisabled = valBool;\n      this.previousStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.previousStepDisabled changes.\n   * Should emit the new value of previousStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreviousDisabledChange')\n  public previousStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _hasError = false;\n\n  /**\n   * A getter that tells whether or not the page has an error.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasError() {\n    return this._hasError;\n  }\n\n  /**\n   * Sets whether the page has an error and also resolve the \"falsy\" value. The\n   * current logic treat a \"0\" or an empty string as false and likewise will treat any\n   * \"truthy\" value as true.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageHasError')\n  public set hasError(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasError) {\n      this._hasError = valBool;\n    }\n  }\n\n  /**\n   * Overrides all actions from the page level, so you can use an alternate function for\n   * validation or data-munging with a ClrWizardPage.onCommit (clrWizardPageOnCommit output),\n   * ClrWizardPage.onCancel (clrWizardPageOnCancel output), or one\n   * of the granular page-level button click event emitters.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreventDefault') public preventDefault: boolean = false;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopCancel = false;\n\n  /**\n   * A getter that retrieves whether the page is preventing the cancel action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Overrides the cancel action from the page level. Allows you to use an\n   * alternate function for validation or data-munging before cancelling the\n   * wizard when combined with the ClrWizardPage.onCancel\n   * (the clrWizardPageOnCancel output).\n   *\n   * Requires that you manually close the wizard from your host component,\n   * usually with a call to Wizard.forceNext() or wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultCancel')\n  public set stopCancel(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopCancel) {\n      this._stopCancel = valBool;\n      this.stopCancelChange.emit(valBool);\n    }\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreventDefaultCancelChange') stopCancelChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopNext = false;\n\n  /**\n   * A getter that tells you whether the page is preventing the next action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopNext(): boolean {\n    return this._stopNext;\n  }\n\n  /**\n   * Overrides forward navigation from the page level. Allows you to use an\n   * alternate function for validation or data-munging before moving the\n   * wizard to the next pagewhen combined with the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) or ClrWizardPage.nextButtonClicked\n   * (clrWizardPageNext) outputs.\n   *\n   * Requires that you manually tell the wizard to navigate forward from\n   * the hostComponent, usually with a call to Wizard.forceNext() or\n   * wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultNext')\n  public set stopNext(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopNext) {\n      this._stopNext = valBool;\n    }\n  }\n\n  /**\n   * An event emitter carried over from a legacy version of ClrWizardPage.\n   * Fires an event on ClrWizardPage whenever the next or finish buttons\n   * are clicked and the page is the current page of the Wizard.\n   *\n   * Note that this does not automatically emit an event when a custom\n   * button is used in place of a next or finish button.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCommit') onCommit: EventEmitter<string> = new EventEmitter<string>(false);\n\n  /**\n   * Emits an event when ClrWizardPage becomes the current page of the\n   * Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnLoad') onLoad: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Emits an event when the ClrWizardPage invokes the cancel routine for the wizard.\n   *\n   * Can be used in conjunction with the ClrWizardPage.stopCancel\n   * (clrWizardPagePreventDefaultCancel) or ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) inputs to implement custom cancel\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before cancelling the wizard.\n   *\n   * Note that this requires you to call Wizard.close() from the host component.\n   * This constitues a full replacement of the cancel functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCancel') pageOnCancel: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the finish button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom finish\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to complete\n   * the wizard.\n   *\n   * Note that this requires you to call Wizard.finish() or Wizard.forceFinish()\n   * from the host component. This combination creates a full replacement of\n   * the finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageFinish') finishButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the previous button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom backwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * backwards in the wizard.\n   *\n   * Note that this requires you to call Wizard.previous()\n   * from the host component. This combination creates a full replacement of\n   * the backwards navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrevious') previousButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the next button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * to the next page in the wizard.\n   *\n   * Note that this requires you to call Wizard.forceNext() or Wizard.next()\n   * from the host component. This combination creates a full replacement of\n   * the forward navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNext') nextButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a danger button is clicked and the ClrWizardPage is\n   * the wizard's current page. By default, a danger button will act as\n   * either a \"next\" or \"finish\" button depending on if the ClrWizardPage is the\n   * last page or not.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level when the danger button is clicked.\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageDanger') dangerButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a next, finish, or danger button is clicked and the\n   * ClrWizardPage is the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level, regardless of the type of\n   * primary button.\n   *\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrimary') primaryButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  @Output('clrWizardPageCustomButton') customButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * An input value that is used internally to generate the ClrWizardPage ID as\n   * well as the step nav item ID.\n   *\n   * Typed as any because it should be able to accept numbers as well as\n   * strings. Passing an index for wizard whose pages are created with an\n   * ngFor loop is a common use case.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('id') _id: any = (wizardPageIndex++).toString();\n\n  /**\n   * A read-only getter that generates an ID string for the wizard page from\n   * either the value passed to the ClrWizardPage \"id\" input or a wizard page\n   * counter shared across all wizard pages in the application.\n   *\n   * Note that the value passed into the ID input Will be prefixed with\n   * \"clr-wizard-page-\".\n   *\n   * @readonly\n   *\n   * @memberof ClrWizardPage\n   */\n  public get id() {\n    // covers things like null, undefined, false, and empty string\n    // while allowing zero to pass\n    const idIsNonZeroFalsy = !this._id && this._id !== 0;\n\n    // in addition to non-zero falsy we also want to make sure _id is not a negative\n    // number.\n    if (idIsNonZeroFalsy || this._id < 0) {\n      // guard here in the event that input becomes undefined or null by accident\n      this._id = (wizardPageIndex++).toString();\n    }\n    return `clr-wizard-page-${this._id}`;\n  }\n\n  /**\n   * A read-only getter that serves as a convenience for those who would rather\n   * not think in the terms of !ClrWizardPage.nextStepDisabled. For some use cases,\n   * ClrWizardPage.readyToComplete is more logical and declarative.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get readyToComplete(): boolean {\n    return !this.nextStepDisabled;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _complete: boolean = false;\n\n  /**\n   * A page is marked as completed if it is both readyToComplete and completed,\n   * as in the next or finish action has been executed while this page was current.\n   *\n   * Note there is and open question about how to handle pages that are marked\n   * complete but who are no longer readyToComplete. This might indicate an error\n   * state for the ClrWizardPage. Currently, the wizard does not acknowledge this state\n   * and only returns that the page is incomplete.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get completed(): boolean {\n    return this._complete && this.readyToComplete;\n\n    // FOR V2: UNWIND COMPLETED, READYTOCOMPLETE, AND ERRORS\n    // SUCH THAT ERRORS IS ITS OWN INPUT. IF A STEP IS\n    // INCOMPLETE AND ERRORED, ERRORED WILL NOT SHOW.\n    // FIRST QUESTION: AM I GREY OR COLORED?\n    // SECOND QUESTION: AM I GREEN OR RED?\n  }\n\n  /**\n   * A ClrWizardPage can be manually set to completed using this boolean setter.\n   * It is recommended that users rely on the convenience functions in the wizard\n   * and navigation service instead of manually setting pages’ completion state.\n   *\n   * @memberof ClrWizardPage\n   */\n  public set completed(value: boolean) {\n    this._complete = value;\n  }\n\n  /**\n   * Checks with the navigation service to see if it is the current page.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get current(): boolean {\n    return this.navService.currentPage === this;\n  }\n\n  public get disabled(): boolean {\n    return !this.enabled;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page is navigable\n   * in the wizard. A wizard page can be navigated to if it is completed\n   * or the page before it is completed.\n   *\n   * This getter handles the logic for enabling or disabling the links in\n   * the step nav on the left Side of the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get enabled(): boolean {\n    return this.current || this.completed || this.previousCompleted;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page before this\n   * ClrWizardPage is completed. This is useful for determining whether or not\n   * a page is navigable if it is not current or already completed.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousCompleted(): boolean {\n    const previousPage = this.pageCollection.getPreviousPage(this);\n\n    if (!previousPage) {\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get title(): TemplateRef<any> {\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get navTitle(): TemplateRef<any> {\n    if (this.pageNavTitle) {\n      return this.pageNavTitle.pageNavTitleTemplateRef;\n    }\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get headerActions(): TemplateRef<any> {\n    if (!this._headerActions) {\n      return;\n    }\n    return this._headerActions.pageHeaderActionsTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasHeaderActions(): boolean {\n    return !!this._headerActions;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get buttons(): TemplateRef<any> {\n    if (!this._buttons) {\n      return;\n    }\n    return this._buttons.pageButtonsTemplateRef;\n  }\n\n  /**\n   * A read-only getter that returns a boolean that says whether or\n   * not the ClrWizardPage includes buttons. Used to determine if the\n   * Wizard should override the default button set defined as\n   * its direct children.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasButtons(): boolean {\n    return !!this._buttons;\n  }\n\n  /**\n   * Uses the nav service to make the ClrWizardPage the current page in the\n   * wizard. Bypasses all checks but still emits the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output.\n   *\n   * In most cases, it is better to use the default navigation functions\n   * in Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public makeCurrent(): void {\n    this.navService.currentPage = this;\n  }\n\n  /**\n   * Links the nav service and establishes the current page if one is not defined.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public ngOnInit(): void {\n    const navService = this.navService;\n    if (!navService.currentPage && !navService.navServiceLoaded) {\n      this.makeCurrent();\n      this.navService.navServiceLoaded = true;\n    }\n  }\n\n  /**\n   * A read-only getter that returns the id used by the step nav item associated with the page.\n   *\n   * ClrWizardPage needs this ID string for aria information.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stepItemId(): string {\n    return this.pageCollection.getStepItemIdForPage(this);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  PLATFORM_ID,\n  Inject,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { HeaderActionService } from './providers/header-actions.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: 'clr-wizard',\n  providers: [WizardNavigationService, PageCollectionService, ButtonHubService, HeaderActionService],\n  templateUrl: './wizard.html',\n  host: {\n    '[class.clr-wizard]': 'true',\n    '[class.wizard-md]': \"size == 'md'\",\n    '[class.wizard-lg]': \"size == 'lg'\",\n    '[class.wizard-xl]': \"size == 'xl'\",\n    '[class.lastPage]': 'navService.currentPageIsLast',\n  },\n})\nexport class ClrWizard implements OnDestroy, AfterContentInit, DoCheck {\n  /**\n   * Set the modal size of the wizard. Set using `[clrWizardSize]` input.\n   */\n  @Input('clrWizardSize') size = 'xl';\n\n  /**\n   * Tells the modal part of the wizard whether it should have a close \"X\"\n   * in the top right corner. Set using `[clrWizardClosable]` input.\n   */\n  @Input('clrWizardClosable') closable = true;\n\n  /**\n   * Resets page completed states when navigating backwards.\n   * Set using `[clrWizardForceForwardNavigation]` input.\n   */\n  @Input('clrWizardForceForwardNavigation')\n  set forceForward(value: boolean) {\n    this._forceForward = !!value;\n    this.navService.forceForwardNavigation = value;\n  }\n  private _forceForward: boolean = false;\n  get forceForward(): boolean {\n    return this._forceForward;\n  }\n\n  _open = false;\n  /**\n   * Toggles open/close of the wizard component.\n   * Set using the `[clrWizardOpen]` input.\n   */\n  @Input('clrWizardOpen')\n  set clrWizardOpen(open: boolean) {\n    if (open) {\n      this.buttonService.buttonsReady = true;\n    }\n    this._open = open;\n  }\n\n  /**\n   * Prevents ClrWizard from moving to the next page or closing itself on finishing.\n   * Set using the `[clrWizardPreventDefaultNext]` input. Note that using stopNext\n   * will require you to create your own calls to .next() and .finish() in your\n   * host component to make the ClrWizard work as expected.\n   */\n  @Input('clrWizardPreventDefaultNext')\n  set stopNext(value: boolean) {\n    this._stopNext = !!value;\n    this.navService.wizardHasAltNext = value;\n  }\n  private _stopNext: boolean = false;\n  get stopNext() {\n    return this._stopNext;\n  }\n\n  /**\n   * Prevents ClrWizard from closing when the cancel button or close \"X\" is clicked.\n   * Set using the `[clrWizardPreventDefaultCancel]` input.\n   *\n   * Note that using stopCancel will require you to create your own calls to `close()` in your host compone`nt\n   * to make the ClrWizard work as expected. Useful for doing checks or prompts\n   * before closing a ClrWizard.\n   */\n  @Input('clrWizardPreventDefaultCancel')\n  set stopCancel(value: boolean) {\n    this._stopCancel = !!value;\n    this.navService.wizardHasAltCancel = value;\n  }\n  private _stopCancel: boolean = false;\n  get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Prevents ClrWizard from performing any form of navigation away from the current\n   * page. Set using the `[clrWizardPreventNavigation]` input.\n   * Note that stopNavigation is meant to freeze the wizard in place, typically\n   * during a long validation or background action where you want the wizard to\n   * display loading content but not allow the user to execute navigation in\n   * the stepnav, close X, or the  back, finish, or next buttons.\n   */\n  @Input('clrWizardPreventNavigation')\n  set stopNavigation(value: boolean) {\n    this._stopNavigation = !!value;\n    this.navService.wizardStopNavigation = value;\n  }\n  private _stopNavigation = false;\n  get stopNavigation() {\n    return this._stopNavigation;\n  }\n\n  /**\n   * Prevents clicks on the links in the stepnav from working.\n   * Set using `[clrWizardDisableStepnav]` input.\n   * A more granular bypassing of navigation which can be useful when your\n   * ClrWizard is in a state of completion and you don't want users to be\n   * able to jump backwards and change things.\n   */\n  @Input('clrWizardDisableStepnav')\n  set disableStepnav(value: boolean) {\n    this._disableStepnav = !!value;\n    this.navService.wizardDisableStepnav = value;\n  }\n  private _disableStepnav: boolean = false;\n  get disableStepnav(): boolean {\n    return this._disableStepnav;\n  }\n\n  /**\n   * Used to communicate to the underlying modal that animations are not\n   * wanted. Primary use is for the display of static/inline wizards.\n   * Set using `[clrWizardPreventModalAnimation]` input.\n   */\n  /** @deprecated since 3.0, input should be removed in 4.0 because is only related to inline wizards */\n  @Input('clrWizardPreventModalAnimation') _stopModalAnimations: boolean = false;\n  get stopModalAnimations(): string {\n    return this._stopModalAnimations ? 'true' : 'false';\n  }\n\n  /**\n   * Emits when the wizard is opened or closed.\n   * Listen via `(clrWizardOpenChange)` event.\n   */\n  @Output('clrWizardOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /**\n   * Emits when the wizard is canceled. Listen via `(clrWizardOnCancel)` event.\n   * Can be combined with the `[clrWizardPreventDefaultCancel]` input to create\n   * wizard-level custom cancel routines.\n   */\n  @Output('clrWizardOnCancel') onCancel: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is completed. Listen via `(clrWizardOnFinish)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom completion routines.\n   */\n  @Output('clrWizardOnFinish') wizardFinished: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is reset. Listen via `(clrWizardOnReset)` event.\n   */\n  @Output('clrWizardOnReset') onReset: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the current page has changed. Listen via `(clrWizardCurrentPageChanged)` event.\n   * output. Useful for non-blocking validation.\n   */\n  @Output('clrWizardCurrentPageChanged') currentPageChanged: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the next page. Listen via `(clrWizardOnNext)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom navigation routines, which are useful for validation.\n   */\n  @Output('clrWizardOnNext') onMoveNext: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the previous page. Can be useful for validation.\n   * Listen via `(clrWizardOnPrevious)` event.\n   */\n\n  @Output('clrWizardOnPrevious') onMovePrevious: EventEmitter<any> = new EventEmitter<any>(false);\n\n  @ContentChildren(ClrWizardPage, { descendants: true })\n  pages: QueryList<ClrWizardPage>;\n  @ContentChildren(ClrWizardHeaderAction) headerActions: QueryList<ClrWizardHeaderAction>;\n  @ViewChild('wizardTitle') wizardTitle: ElementRef;\n\n  public get currentPage() {\n    return this.navService.currentPage;\n  }\n\n  public set currentPage(page: ClrWizardPage) {\n    this.navService.goTo(page, true);\n  }\n\n  public get isLast() {\n    return this.navService.currentPageIsLast;\n  }\n\n  public get isFirst() {\n    return this.navService.currentPageIsFirst;\n  }\n\n  public get isStatic() {\n    return (this.elementRef.nativeElement as HTMLElement).classList.contains('clr-wizard--inline');\n  }\n\n  private differ: any; // for marking when the collection of wizard pages has been added to or deleted from\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService,\n    public headerActionService: HeaderActionService,\n    private elementRef: ElementRef,\n    differs: IterableDiffers\n  ) {\n    this.subscriptions.push(\n      this.listenForNextPageChanges(),\n      this.listenForPreviousPageChanges(),\n      this.listenForCancelChanges(),\n      this.listenForFinishedChanges(),\n      this.listenForPageChanges()\n    );\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  public ngAfterContentInit() {\n    this.pageCollection.pages = this.pages;\n    this.headerActionService.wizardHeaderActions = this.headerActions;\n    this.initializeButtons();\n  }\n\n  public ngDoCheck() {\n    this.updateNavOnPageChanges();\n  }\n\n  public ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  /**\n   * Marks Wizard as finished. By default it does not execute event\n   * emissions or checks before completing and closing. This method is commonly\n   * used as part of an alternative navigation with `[clrWizardPreventDefaultNext]`.\n   *\n   * If `skipChecksAndEmits` is true, the wizard will complete and close\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   */\n  public finish(skipChecksAndEmits = true) {\n    if (skipChecksAndEmits) {\n      this.forceFinish();\n    } else {\n      this.navService.finish();\n    }\n  }\n\n  /**\n   * Marks the wizard as finished but does run checks and emissions.\n   * Good for a last step in an alternate workflow. Does the same thing as\n   * calling `ClrWizard.finish(true)` or `ClrWizard.finish()` without a parameter.\n   */\n  public forceFinish() {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this.close();\n  }\n\n  /**\n   * Opens the wizard. If there is no current page defined, sets the first page in the wizard to be current.\n   */\n  public open(): void {\n    this._open = true;\n\n    if (!this.currentPage) {\n      this.navService.setFirstPageCurrent();\n    }\n\n    // Only render buttons when wizard is opened, to avoid chocolate errors\n    this.buttonService.buttonsReady = true;\n\n    this._openChanged.emit(true);\n  }\n\n  /**\n   * Closes the wizard. Call this directly instead of `cancel()` to implement alternative cancel functionality.\n   */\n  public close(): void {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this._open = false;\n    this._openChanged.emit(false);\n  }\n\n  /**\n   * Used to open and close the wizard. By default the wizard will\n   * close if invoked with no parameter. If parameter is true wizard will open\n   * else if false will close.\n   */\n  public toggle(open: boolean): void {\n    if (open) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Moves the wizard to the previous page.\n   */\n  public previous(): void {\n    this.navService.previous();\n  }\n\n  /**\n   * By default, `next()` does not execute event emissions.\n   * This method is commonly called as part of an alternative navigation\n   * with `[clrWizardPreventDefaultNext]`. The wizard will move to the next page\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   *\n   * If `skipChecksAndEmits` is false, the wizard will execute default checks\n   * and emit events as normal. This is useful for custom buttons or programmatic\n   * workflows that are not executing the wizards default checks and emissions.\n   * It is another way to navigate without having to rewrite the wizard’s default\n   * functionality from scratch.\n   */\n  public next(skipChecksAndEmits: boolean = true): void {\n    if (skipChecksAndEmits) {\n      this.forceNext();\n    } else {\n      this.navService.next();\n    }\n  }\n\n  /**\n   * Moves the wizard to the next page without the checks and emissions.\n   * Good for a last step in an alternate workflow.\n   * Alias for `ClrWizard.next(true)` or `ClrWizard.next()`\n   */\n  public forceNext(): void {\n    this.navService.forceNext();\n  }\n\n  /**\n   * Cancels and closes the wizard. Do not use this for an override of the cancel\n   * the functionality with `[clrWizardPreventDefaultCancel]`, `[clrWizardPreventPageDefaultCancel]`,\n   * or `[clrWizardPagePreventDefault]` because it will initiate the same checks\n   * and event emissions that invoked your event handler. Use `ClrWizard.close()` instead.\n   */\n  public cancel(): void {\n    this.navService.cancel();\n  }\n\n  /**\n   * Overrides behavior of the underlying modal to avoid collisions with\n   * alternative cancel functionality. In most cases, use `ClrWizard.cancel()` instead.\n   */\n  public modalCancel(): void {\n    if (this.closable) {\n      this.checkAndCancel();\n    }\n  }\n\n  /**\n   * Checks for alternative cancel flows defined at the current page or\n   * wizard level. Performs a canceled if not. Emits events that initiate\n   * the alternative cancel outputs `(clrWizardPageOnCancel)` and `(clrWizardOnCancel)`.\n   */\n  public checkAndCancel(): void {\n    const currentPage = this.currentPage;\n    const currentPageHasOverrides = currentPage.stopCancel || currentPage.preventDefault;\n\n    if (this.stopNavigation) {\n      return;\n    }\n\n    currentPage.pageOnCancel.emit();\n    if (!currentPageHasOverrides) {\n      this.onCancel.emit();\n    }\n\n    if (!this.stopCancel && !currentPageHasOverrides) {\n      this.close();\n    }\n  }\n\n  /**\n   * Navigates to a given page in the Wizard. Navigation will invoke the wizard’s default\n   * checks and event emissions.\n   *\n   * The format of the expected ID parameter can be found in the return of the\n   * ClrWizardPage.id getter, usually prefixed with `clr-wizard-page-` and then either a\n   * numeric ID or the ID specified for the `ClrWizardPage` component’s `id` input.\n   */\n  public goTo(pageId: string): void {\n    if (!pageId) {\n      return;\n    }\n\n    this.navService.goTo(pageId);\n  }\n\n  /**\n   * Reset sets all WizardPages to incomplete and sets the first page in the `ClrWizard` to\n   * be the current page, resetting the wizard navigation.\n   * Use `(clrWizardOnReset)` event to reset the data or model of your wizard.\n   */\n  public reset(): void {\n    this.pageCollection.reset();\n    this.onReset.next();\n  }\n\n  private listenForNextPageChanges(): Subscription {\n    return this.navService.movedToNextPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMoveNext.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForPreviousPageChanges(): Subscription {\n    return this.navService.movedToPreviousPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMovePrevious.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForCancelChanges(): Subscription {\n    return this.navService.notifyWizardCancel.subscribe(() => this.checkAndCancel());\n  }\n\n  private listenForFinishedChanges(): Subscription {\n    return this.navService.wizardFinished.subscribe(() => this.emitWizardFinished());\n  }\n\n  private listenForPageChanges(): Subscription {\n    return this.navService.currentPageChanged.subscribe(() => this.currentPageChanged.emit());\n  }\n\n  private updateNavOnPageChanges(): void {\n    const changes = this.differ.diff(this.pages);\n    if (changes) {\n      changes.forEachAddedItem(() => this.navService.updateNavigation());\n      changes.forEachRemovedItem(() => this.navService.updateNavigation());\n    }\n  }\n\n  private initializeButtons(): void {\n    // Only trigger buttons ready if default is open (inlined)\n    if (this._open) {\n      this.buttonService.buttonsReady = true;\n    }\n  }\n\n  private emitWizardFinished(): void {\n    if (!this.stopNext) {\n      this.forceFinish();\n    }\n    this.wizardFinished.emit();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\n\nexport const DEFAULT_BUTTON_TYPES: any = {\n  cancel: 'cancel',\n  previous: 'previous',\n  next: 'next',\n  finish: 'finish',\n  danger: 'danger',\n};\n\nexport const CUSTOM_BUTTON_TYPES: any = {\n  cancel: 'custom-cancel',\n  previous: 'custom-previous',\n  next: 'custom-next',\n  finish: 'custom-finish',\n  danger: 'custom-danger',\n};\n\n@Component({\n  selector: 'clr-wizard-button',\n  template: `\n        <button\n            type=\"button\"\n            class=\"btn clr-wizard-btn\"\n            [class.btn-link]=\"isCancel\"\n            [class.clr-wizard-btn--tertiary]=\"isCancel\"\n            [class.btn-outline]=\"isPrevious\"\n            [class.clr-wizard-btn--secondary]=\"isPrevious\"\n            [class.btn-primary]=\"isPrimaryAction\"\n            [class.clr-wizard-btn--primary]=\"isPrimaryAction\"\n            [class.btn-success]=\"isFinish\"\n            [class.btn-danger]=\"isDanger\"\n            [class.disabled]=\"isDisabled\"\n            [attr.disabled]=\"_disabledAttribute\"\n            (click)=\"click()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-btn-wrapper', '[attr.aria-hidden]': 'isHidden' },\n  styles: ['[aria-hidden=\"true\"] { display: none; }'],\n})\nexport class ClrWizardButton {\n  @Input('type') public type: string = '';\n\n  @Input('clrWizardButtonDisabled') public disabled: boolean = false;\n\n  @Input('clrWizardButtonHidden') public hidden: boolean = false;\n\n  // EventEmitter which is emitted when a button is clicked.\n  @Output('clrWizardButtonClicked') wasClicked: EventEmitter<string> = new EventEmitter<string>(false);\n\n  constructor(public navService: WizardNavigationService, public buttonService: ButtonHubService) {}\n\n  private checkDefaultAndCustomType(valueToCheck: string = '', typeToLookUp: string) {\n    if (DEFAULT_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    if (CUSTOM_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    return false;\n  }\n\n  public get isCancel(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'cancel');\n  }\n\n  public get isNext(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'next');\n  }\n\n  public get isPrevious(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'previous');\n  }\n\n  public get isFinish(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'finish');\n  }\n\n  public get isDanger(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'danger');\n  }\n\n  public get isPrimaryAction(): boolean {\n    return this.isNext || this.isDanger || this.isFinish;\n  }\n\n  public get _disabledAttribute(): string | null {\n    if (this.isDisabled) {\n      return '';\n    }\n    return null;\n  }\n\n  public get isDisabled(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const disabled = true;\n    const nav = this.navService;\n    const page = this.navService.currentPage;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !disabled;\n    }\n\n    if (this.disabled || nav.wizardStopNavigation || !page) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !disabled;\n    }\n\n    if (this.isPrevious && (nav.currentPageIsFirst || page.previousStepDisabled)) {\n      return disabled;\n    }\n\n    if (this.isDanger && !page.readyToComplete) {\n      return disabled;\n    }\n\n    if (this.isNext && (nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    if (this.isFinish && (!nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    return !disabled;\n  }\n\n  public get isHidden(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const hidden = true;\n    const nav = this.navService;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !hidden;\n    }\n\n    if (this.hidden) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !hidden;\n    }\n\n    if (this.isPrevious && nav.currentPageIsFirst) {\n      return hidden;\n    }\n\n    if (this.isNext && nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    if (this.isFinish && !nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    return !hidden;\n  }\n\n  click(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.wasClicked.emit(this.type);\n    this.buttonService.buttonClicked(this.type);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-wizard-title, clr-wizard-pagetitle' })\nexport class ClrWizardCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { PageCollectionService } from './providers/page-collection.service';\n\n@Component({\n  selector: 'clr-wizard-stepnav',\n  template: `\n    <div class=\"clr-wizard-stepnav-list\">\n      <div *ngFor=\"let page of pageService.pages; let i = index\" clr-wizard-stepnav-item [page]=\"page\" class=\"clr-wizard-stepnav-item\">{{i + 1}}</div>\n    </div>\n  `,\n  host: { class: 'clr-wizard-stepnav' },\n})\nexport class ClrWizardStepnav {\n  constructor(public pageService: PageCollectionService) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: '[clr-wizard-stepnav-item]',\n  template: `\n        <button type=\"button\" class=\"btn btn-link clr-wizard-stepnav-link\" (click)=\"click()\" [attr.disabled]=\"isDisabled ? '' : null\">\n            <span class=\"clr-wizard-stepnav-link-suffix\">\n              <clr-icon shape=\"error-standard\" class=\"is-error clr-wizard-stepnav-item-error-icon\" *ngIf=\"hasError\"></clr-icon>\n              <ng-content *ngIf=\"!hasError\"></ng-content>              \n            </span>\n            <span class=\"clr-wizard-stepnav-link-title\">\n              <ng-template [ngTemplateOutlet]=\"page.navTitle\"></ng-template> \n            </span>\n        </button>\n    `,\n  host: {\n    '[id]': 'id',\n    '[attr.aria-selected]': 'isCurrent',\n    '[attr.aria-controls]': 'id',\n    '[class.clr-nav-link]': 'true',\n    '[class.nav-item]': 'true',\n    '[class.active]': 'isCurrent',\n    '[class.disabled]': 'isDisabled',\n    '[class.no-click]': '!canNavigate',\n    '[class.complete]': 'isComplete',\n    '[class.error]': 'hasError',\n  },\n})\nexport class ClrWizardStepnavItem {\n  @Input('page') public page: ClrWizardPage;\n\n  constructor(public navService: WizardNavigationService, public pageCollection: PageCollectionService) {}\n\n  private pageGuard(): void {\n    if (!this.page) {\n      throw new Error('Wizard stepnav item is not associated with a wizard page.');\n    }\n  }\n\n  public get id(): string {\n    this.pageGuard();\n    return this.pageCollection.getStepItemIdForPage(this.page);\n  }\n\n  public get isDisabled(): boolean {\n    this.pageGuard();\n    return this.page.disabled || this.navService.wizardStopNavigation || this.navService.wizardDisableStepnav;\n  }\n\n  public get isCurrent(): boolean {\n    this.pageGuard();\n    return this.page.current;\n  }\n\n  public get isComplete(): boolean {\n    this.pageGuard();\n    return this.page.completed;\n  }\n\n  public get hasError(): boolean {\n    this.pageGuard();\n    return this.page.hasError && this.isComplete;\n  }\n\n  public get canNavigate(): boolean {\n    this.pageGuard();\n    return this.pageCollection.previousPageIsCompleted(this.page);\n  }\n\n  click(): void {\n    this.pageGuard();\n\n    // if we click on our own stepnav or a disabled stepnav, we don't want to do anything\n    if (this.isDisabled || this.isCurrent) {\n      return;\n    }\n\n    this.navService.goTo(this.page);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAlertModule } from '../emphasis/alert/alert.module';\nimport { ClrModalModule } from '../modal/modal.module';\n\nimport { ClrWizard } from './wizard';\nimport { ClrWizardButton } from './wizard-button';\nimport { ClrWizardCustomTags } from './wizard-custom-tags';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\nimport { ClrWizardStepnav } from './wizard-stepnav';\nimport { ClrWizardStepnavItem } from './wizard-stepnav-item';\n\nexport const CLR_WIZARD_DIRECTIVES: any[] = [\n  ClrWizard,\n  ClrWizardPage,\n  ClrWizardStepnav,\n  ClrWizardStepnavItem,\n  ClrWizardButton,\n  ClrWizardHeaderAction,\n  ClrWizardCustomTags,\n  ClrWizardPageTitle,\n  ClrWizardPageNavTitle,\n  ClrWizardPageButtons,\n  ClrWizardPageHeaderActions,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrModalModule, ClrAlertModule],\n  declarations: [CLR_WIZARD_DIRECTIVES],\n  exports: [CLR_WIZARD_DIRECTIVES],\n})\nexport class ClrWizardModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\n\nlet accordionCount = 0;\n\nexport class AccordionPanelModel {\n  status = AccordionStatus.Inactive;\n  index: number = null;\n  disabled = false;\n  open = false;\n  templateId = `${this.id}-${this.accordionId}`;\n  constructor(public id: string, public accordionId: number | string) {}\n}\n\nexport class AccordionModel {\n  protected strategy = AccordionStrategy.Default;\n  protected accordionCount = accordionCount++;\n  protected _panels: { [id: string]: AccordionPanelModel } = {};\n\n  get panels(): AccordionPanelModel[] {\n    return Object.keys(this._panels).map(id => this._panels[id]);\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.strategy = strategy;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    ids.forEach((id, index) => (this._panels[id].index = index));\n    this.removeOldPanels(ids);\n  }\n\n  addPanel(id: string, open = false) {\n    this._panels[id] = new AccordionPanelModel(id, this.accordionCount);\n    this._panels[id].open = open;\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    const panelIsOpen = this._panels[panelId].open;\n    if (this.strategy === AccordionStrategy.Default) {\n      this.closeAllPanels();\n    }\n\n    this._panels[panelId].open = open !== undefined ? open : !panelIsOpen;\n  }\n\n  disablePanel(panelId: string, disabled: boolean) {\n    this._panels[panelId].disabled = disabled;\n  }\n\n  private closeAllPanels() {\n    this.panels.forEach(panel => (this._panels[panel.id].open = false));\n  }\n\n  private removeOldPanels(ids: string[]) {\n    this.panels\n      .filter(panel => ids.find(id => id === panel.id) === undefined)\n      .forEach(panel => delete this._panels[panel.id]);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AccordionModel, AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\n\n@Injectable()\nexport class AccordionService {\n  protected accordion = new AccordionModel();\n  protected readonly _panelsChanges = new BehaviorSubject<AccordionPanelModel[]>(this.accordion.panels);\n\n  getPanelChanges(panelId: string): Observable<AccordionPanelModel> {\n    return this._panelsChanges.pipe(map(panels => panels.find(s => s.id === panelId)));\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.accordion.setStrategy(strategy);\n  }\n\n  addPanel(panelId: string, open = false) {\n    this.accordion.addPanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    this.accordion.togglePanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  disablePanel(panelId: string, disabled?: boolean) {\n    this.accordion.disablePanel(panelId, disabled);\n    this.emitUpdatedPanels();\n  }\n\n  updatePanelOrder(ids: string[]) {\n    this.accordion.updatePanelOrder(ids);\n    this.emitUpdatedPanels();\n  }\n\n  protected emitUpdatedPanels() {\n    this._panelsChanges.next(this.accordion.panels);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { defaultAnimationTiming } from '../../utils/animations/constants';\n\nexport const panelAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n  ]),\n];\n\nexport const stepAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n    transition('* => void', [\n      style({ display: 'block' }),\n      animate(defaultAnimationTiming, style({ height: 0, display: 'none' })),\n    ]),\n  ]),\n];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const defaultAnimationTiming = '0.2s ease-in-out';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-description, clr-step-description',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-description]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionDescription {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output,\n  SimpleChanges,\n  Inject,\n  OnInit,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { AccordionService } from './providers/accordion.service';\nimport { AccordionStatus } from './enums/accordion-status.enum';\nimport { panelAnimation } from './utils/animation';\nimport { IfExpandService } from '../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from './models/accordion.model';\nimport { ClrAccordionDescription } from './accordion-description';\n\n@Component({\n  selector: 'clr-accordion-panel',\n  templateUrl: './accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: panelAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrAccordionPanel implements OnInit, OnChanges {\n  @Input('clrAccordionPanelDisabled') disabled = false;\n  @Input('clrAccordionPanelOpen') panelOpen = false;\n  @Output('clrAccordionPanelOpenChange') panelOpenChange = new EventEmitter<boolean>();\n  @ContentChildren(ClrAccordionDescription) accordionDescription: QueryList<ClrAccordionDescription>;\n\n  panel: Observable<AccordionPanelModel>;\n  readonly AccordionStatus = AccordionStatus;\n  isAccordion = true;\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private accordionService: AccordionService,\n    private ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) public id: string\n  ) {}\n\n  ngOnInit() {\n    this.panel = this.accordionService.getPanelChanges(this.id).pipe(tap(panel => this.emitPanelChange(panel)));\n    this.accordionService.addPanel(this.id, this.panelOpen);\n    this.accordionService.togglePanel(this.id, this.panelOpen);\n    this.accordionService.disablePanel(this.id, this.disabled);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.panel && changes.panelOpen && changes.panelOpen.currentValue !== changes.panelOpen.previousValue) {\n      this.accordionService.togglePanel(this.id, changes.panelOpen.currentValue);\n    }\n\n    if (this.panel && changes.disabled && changes.disabled.currentValue !== changes.disabled.previousValue) {\n      this.accordionService.disablePanel(this.id, changes.disabled.currentValue);\n    }\n  }\n\n  togglePanel() {\n    this.accordionService.togglePanel(this.id);\n  }\n\n  collapsePanelOnAnimationDone(panel: AccordionPanelModel) {\n    if (!panel.open) {\n      this.ifExpandService.expanded = false;\n    }\n  }\n\n  getPanelStateClasses(panel: AccordionPanelModel) {\n    return `clr-accordion-panel-${panel.status} ${panel.open ? 'clr-accordion-panel-open' : ''}`;\n  }\n\n  getAccordionContentId(id: string) {\n    return `clr-accordion-content-${id}'`;\n  }\n\n  getAccordionHeaderId(id: string) {\n    return `clr-accordion-header-${id}`;\n  }\n\n  private emitPanelChange(panel: AccordionPanelModel) {\n    this.panelOpenChange.emit(panel.open);\n\n    if (panel.open) {\n      this.ifExpandService.expanded = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-title, clr-step-title',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-title]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { AccordionService } from './providers/accordion.service';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { AccordionStrategy } from './enums/accordion-strategy.enum';\n\n@Component({\n  selector: 'clr-accordion',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion]': 'true' },\n  providers: [AccordionService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordion implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrAccordionMultiPanel') multiPanel = false;\n  @ContentChildren(ClrAccordionPanel, { descendants: true })\n  panels: QueryList<ClrAccordionPanel>;\n  subscriptions: Subscription[] = [];\n\n  constructor(private accordionService: AccordionService) {}\n\n  ngOnInit() {\n    this.setAccordionStrategy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.multiPanel.currentValue !== changes.multiPanel.previousValue) {\n      this.setAccordionStrategy();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private setAccordionStrategy() {\n    const strategy = this.multiPanel ? AccordionStrategy.Multi : AccordionStrategy.Default;\n    this.accordionService.setStrategy(strategy);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes\n      .pipe(startWith(this.panels))\n      .subscribe(panels => this.accordionService.updatePanelOrder(panels.toArray().map(p => p.id)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-content, clr-step-content',\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-accordion' })\nexport class AccordionWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../utils/chocolate/oompa-loompa';\nimport { AccordionWillyWonka } from './accordion-willy-wonka';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-accordion-panel' })\nexport class AccordionOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: AccordionWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-accordion-panel should only be used inside of clr-accordion');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { ClrAccordionTitle } from './accordion-title';\nimport { ClrAccordionDescription } from './accordion-description';\nimport { ClrAccordion } from './accordion';\nimport { ClrAccordionContent } from './accordion-content';\nimport { AccordionOompaLoompa } from './chocolate/accordion-oompa-loompa';\nimport { AccordionWillyWonka } from './chocolate/accordion-willy-wonka';\n\nconst declarations = [\n  ClrAccordion,\n  ClrAccordionPanel,\n  ClrAccordionTitle,\n  ClrAccordionDescription,\n  ClrAccordionContent,\n  AccordionOompaLoompa,\n  AccordionWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [...declarations],\n  exports: [...declarations],\n})\nexport class ClrAccordionModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionModel } from '../../models/accordion.model';\nimport { AccordionStatus } from '../../enums/accordion-status.enum';\n\nexport class StepperModel extends AccordionModel {\n  get allPanelsCompleted(): boolean {\n    return this.panels.length && this.getNumberOfIncompletePanels() === 0 && this.getNumberOfOpenPanels() === 0;\n  }\n\n  addPanel(id: string, open = false) {\n    super.addPanel(id, open);\n    this._panels[id].disabled = true;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    super.updatePanelOrder(ids);\n    this.openFirstPanel();\n  }\n\n  togglePanel(panelId: string) {\n    if (this._panels[panelId].status === AccordionStatus.Complete) {\n      this._panels[panelId].open = !this._panels[panelId].open;\n    }\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    if (currentPanelValid) {\n      this.completePanel(currentPanelId);\n      this.openNextPanel(this._panels[currentPanelId].id);\n    } else {\n      this.setPanelError(currentPanelId);\n    }\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.panels.filter(() => this._panels[panelId] !== undefined).forEach(panel => {\n      if (panel.index < this._panels[panelId].index) {\n        this.completePanel(panel.id);\n      } else if (panel.id === panelId) {\n        this._panels[panel.id].open = true;\n      } else {\n        this._panels[panel.id].open = false;\n      }\n    });\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    ids.forEach(id => this.setPanelError(id));\n  }\n\n  resetPanels() {\n    this.panels.forEach(p => this.resetPanel(p.id));\n    this.openFirstPanel();\n  }\n\n  getNextPanel(currentPanelId: string) {\n    return this.panels.find(s => s.index === this._panels[currentPanelId].index + 1);\n  }\n\n  private resetAllFuturePanels(panelId: string) {\n    this.panels.filter(panel => panel.index >= this._panels[panelId].index).forEach(panel => this.resetPanel(panel.id));\n  }\n\n  private resetPanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Inactive;\n    this._panels[panelId].open = false;\n    this._panels[panelId].disabled = true;\n  }\n\n  private openFirstPanel() {\n    const firstPanel = this.getFirstPanel();\n    this._panels[firstPanel.id].open = true;\n    this._panels[firstPanel.id].disabled = true;\n  }\n\n  private completePanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Complete;\n    this._panels[panelId].disabled = false;\n    this._panels[panelId].open = false;\n  }\n\n  private openNextPanel(currentPanelId: string) {\n    const nextPanel = this.getNextPanel(currentPanelId);\n\n    if (nextPanel) {\n      this.resetAllFuturePanels(nextPanel.id);\n      this._panels[nextPanel.id].open = true;\n      this._panels[nextPanel.id].disabled = true;\n    }\n  }\n\n  private setPanelError(panelId: string) {\n    this.resetAllFuturePanels(panelId);\n    this._panels[panelId].open = true;\n    this._panels[panelId].status = AccordionStatus.Error;\n  }\n\n  private getFirstPanel() {\n    return this.panels.find(panel => panel.index === 0);\n  }\n\n  private getNumberOfIncompletePanels() {\n    return this.panels.reduce((prev, next) => (next.status !== AccordionStatus.Complete ? prev + 1 : prev), 0);\n  }\n\n  private getNumberOfOpenPanels() {\n    return this.panels.reduce((prev, next) => (next.open !== false ? prev + 1 : prev), 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AccordionService } from './../../providers/accordion.service';\nimport { StepperModel } from '../models/stepper.model';\n\n@Injectable()\nexport class StepperService extends AccordionService {\n  readonly panelsCompleted = this.getAllCompletedPanelChanges();\n  protected accordion = new StepperModel();\n\n  private _activeStepChanges = new Subject<string>();\n  readonly activeStep = this._activeStepChanges.asObservable();\n\n  resetPanels() {\n    this.accordion.resetPanels();\n    this.emitUpdatedPanels();\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    this.accordion.setPanelsWithErrors(ids);\n    this.emitUpdatedPanels();\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    this.accordion.navigateToNextPanel(currentPanelId, currentPanelValid);\n    this.updateNextStep(currentPanelId, currentPanelValid);\n    this.emitUpdatedPanels();\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.accordion.overrideInitialPanel(panelId);\n    this.emitUpdatedPanels();\n  }\n\n  private updateNextStep(currentPanelId: string, currentPanelValid: boolean) {\n    const nextPanel = this.accordion.getNextPanel(currentPanelId);\n\n    if (currentPanelValid && nextPanel) {\n      this._activeStepChanges.next(nextPanel.id);\n    } else if (currentPanelValid) {\n      this._activeStepChanges.next(currentPanelId);\n    }\n  }\n\n  private getAllCompletedPanelChanges(): Observable<boolean> {\n    return this._panelsChanges.pipe(map(() => this.accordion.allPanelsCompleted), distinctUntilChanged());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener, HostBinding, Input, OnInit } from '@angular/core';\n\nimport { StepperService } from './providers/stepper.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\nexport enum ClrStepButtonType {\n  Next = 'next',\n  Submit = 'submit',\n}\n\n@Directive({\n  selector: '[clrStepButton]',\n  host: {\n    '[class.clr-step-button]': 'true',\n    '[class.btn]': 'true',\n    '[type]': \"'button'\",\n  },\n})\nexport class ClrStepButton implements OnInit {\n  @Input('clrStepButton') type: ClrStepButtonType | string = ClrStepButtonType.Next;\n  @HostBinding('class.btn-primary') submitButton = false;\n\n  constructor(private clrStep: ClrStepperPanel, private stepperService: StepperService) {}\n\n  ngOnInit() {\n    this.submitButton = this.type === ClrStepButtonType.Submit;\n  }\n\n  @HostListener('click')\n  navigateToNextPanel() {\n    this.stepperService.navigateToNextPanel(this.clrStep.id, this.clrStep.formGroup.valid);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Optional,\n  Inject,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { FormGroupName, NgModelGroup } from '@angular/forms';\nimport { tap, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { StepperService } from './providers/stepper.service';\nimport { stepAnimation } from '../utils/animation';\nimport { triggerAllFormControlValidation } from '../../utils/forms/validation';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\nimport { ClrAccordionPanel } from '../accordion-panel';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-stepper-panel',\n  templateUrl: './../accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: stepAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrStepperPanel extends ClrAccordionPanel implements OnInit {\n  isAccordion = false;\n\n  @ViewChild('headerButton') headerButton: ElementRef;\n  private subscriptions: Subscription[] = [];\n\n  get formGroup() {\n    return this.formGroupName ? this.formGroupName.control : this.ngModelGroup.control;\n  }\n\n  get id(): string {\n    return this.formGroupName ? this.formGroupName.name.toString() : this.ngModelGroup.name;\n  }\n\n  set id(_value: string) {} // overriding parent id required empty setter\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public commonStrings: ClrCommonStringsService,\n    @Optional() private formGroupName: FormGroupName,\n    @Optional() private ngModelGroup: NgModelGroup,\n    private stepperService: StepperService,\n    ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) id: string\n  ) {\n    super(commonStrings, stepperService, ifExpandService, id);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panel = this.panel.pipe(tap(panel => this.triggerAllFormControlValidationIfError(panel)));\n    this.stepperService.disablePanel(this.id, true);\n    this.listenToFocusChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenToFocusChanges() {\n    this.subscriptions.push(\n      this.stepperService.activeStep\n        .pipe(filter(panelId => isPlatformBrowser(this.platformId) && panelId === this.id))\n        .subscribe(() => this.headerButton.nativeElement.focus())\n    );\n  }\n\n  private triggerAllFormControlValidationIfError(panel: AccordionPanelModel) {\n    if (panel.status === AccordionStatus.Error) {\n      triggerAllFormControlValidation(this.formGroup);\n    }\n  }\n}\n","/*\n* Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport function triggerAllFormControlValidation(formGroup: FormGroup) {\n  Object.keys(formGroup.controls).forEach(field => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsTouched();\n      control.markAsDirty();\n      control.updateValueAndValidity();\n    } else if (control instanceof FormGroup) {\n      triggerAllFormControlValidation(control);\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  Optional,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroupDirective, NgForm } from '@angular/forms';\nimport { startWith, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { StepperService } from './providers/stepper.service';\nimport { AccordionService } from '../providers/accordion.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\n@Component({\n  selector: 'form[clrStepper]',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[class.clr-accordion]': 'true',\n    '[class.clr-stepper-forms]': 'true',\n  },\n  providers: [StepperService, { provide: AccordionService, useExisting: StepperService }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrStepper implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrInitialStep') initialPanel: string;\n  @ContentChildren(ClrStepperPanel, { descendants: true })\n  panels: QueryList<ClrStepperPanel>;\n  subscriptions: Subscription[] = [];\n  form: FormGroupDirective | NgForm;\n\n  constructor(\n    @Optional() private formGroup: FormGroupDirective,\n    @Optional() private ngForm: NgForm,\n    private stepperService: StepperService\n  ) {}\n\n  ngOnInit() {\n    if (!this.formGroup && !this.ngForm) {\n      throw new Error('To use stepper a Reactive or Template Form is required.');\n    }\n\n    this.form = this.formGroup ? this.formGroup : this.ngForm;\n    this.subscriptions.push(this.listenForPanelsCompleted());\n    this.subscriptions.push(this.listenForFormResetChanges());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.initialPanel.currentValue !== changes.initialPanel.previousValue) {\n      this.stepperService.overrideInitialPanel(this.initialPanel);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForFormResetChanges() {\n    return this.form.statusChanges\n      .pipe(filter(() => this.form.pristine)) // https://github.com/angular/angular/issues/10887\n      .subscribe(() => this.stepperService.resetPanels());\n  }\n\n  private listenForPanelsCompleted() {\n    return this.stepperService.panelsCompleted.subscribe(panelsCompleted => {\n      if (panelsCompleted && this.form.valid) {\n        this.form.ngSubmit.emit();\n      } else if (!this.form.valid && this.form.touched) {\n        this.setPanelsWithFormErrors();\n      }\n    });\n  }\n\n  private setPanelsWithFormErrors() {\n    const panelsWithErrors = this.panels.reduce((panels, p) => (p.formGroup.invalid ? [...panels, p.id] : panels), []);\n    this.stepperService.setPanelsWithErrors(panelsWithErrors);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes.pipe(startWith(this.panels)).subscribe(panels => {\n      this.stepperService.updatePanelOrder(panels.toArray().map(p => p.id));\n\n      if (this.initialPanel) {\n        this.stepperService.overrideInitialPanel(this.initialPanel);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'form[clrStepper]' })\nexport class StepperWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { StepperWillyWonka } from './stepper-willy-wonka';\nimport { IfExpandService } from '../../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-stepper-panel, [clrStepButton]' })\nexport class StepperOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: StepperWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-stepper-panel should only be used inside of clrStepper');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAccordionModule } from '../accordion.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrStepButton } from './../stepper/step-button';\nimport { ClrStepper } from './../stepper/stepper';\nimport { ClrStepperPanel } from './stepper-panel';\nimport { StepperOompaLoompa } from './chocolate/stepper-oompa-loompa';\nimport { StepperWillyWonka } from './chocolate/stepper-willy-wonka';\n\nconst declarations = [ClrStepper, ClrStepButton, ClrStepperPanel, StepperOompaLoompa, StepperWillyWonka];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrAccordionModule],\n  declarations: [...declarations],\n  exports: [...declarations, ClrAccordionModule],\n})\nexport class ClrStepperModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  providers: [ClrAriaLiveService],\n  selector: 'clr-progress-bar',\n  template: `\n    <progress [id]=\"id\" [attr.max]=\"max\" [attr.value]=\"value\" [attr.data-displayval]=\"displayValue\"></progress>\n    <span *ngIf=\"displayAriaLive()\">{{ displayValue }}</span>\n  `,\n})\nexport class ClrProgressBar {\n  constructor(private ariaLiveService: ClrAriaLiveService) {}\n\n  /**\n   * Handle component ID\n   */\n  private _ID: string;\n  @HostBinding('attr.id') externalId: string = '';\n  @Input()\n  set id(value: string) {\n    this._ID = value;\n    this.externalId = null;\n  }\n  get id() {\n    return this._ID;\n  }\n\n  // Progress\n  @Input('clrMax') max: number = 100;\n  @Input('clrDisplayval') displayval: string;\n\n  private _value: number = 0;\n  @Input('clrValue')\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n    if (this.displayAriaLive()) {\n      this.ariaLiveService.announce(this.displayValue, this.ariaLive);\n    }\n  }\n\n  // Styles\n  @HostBinding('class.progress')\n  get progressClass() {\n    return true;\n  }\n\n  private _labeled: boolean;\n  @HostBinding('class.labeled')\n  get labeledClass() {\n    return this._labeled;\n  }\n\n  @Input('clrLabeled')\n  set clrLabeled(value: boolean | string) {\n    this._labeled = isBooleanAttributeSet(value);\n  }\n\n  private _fade: boolean;\n  @HostBinding('class.progress-fade')\n  get fadeClass() {\n    return this._fade;\n  }\n\n  @Input('clrFade')\n  set clrFade(value: boolean | string) {\n    this._fade = isBooleanAttributeSet(value);\n  }\n\n  private _loop: boolean;\n  @HostBinding('class.loop')\n  get loopClass() {\n    return this._loop;\n  }\n\n  @Input('clrLoop')\n  set clrLoop(value: boolean | string) {\n    this._loop = isBooleanAttributeSet(value);\n  }\n\n  private _success: boolean;\n  @HostBinding('class.success')\n  get successClass() {\n    return this._success;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrSuccess')\n  set clrSuccess(value: boolean | string) {\n    this._success = isBooleanAttributeSet(value);\n  }\n\n  private _danger: boolean;\n  @HostBinding('class.danger')\n  get dangerClass() {\n    return this._danger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrDanger')\n  set clrDanger(value: boolean | string) {\n    this._danger = isBooleanAttributeSet(value);\n  }\n\n  private _flash: boolean;\n  @HostBinding('class.flash')\n  get flashClass() {\n    return this._flash;\n  }\n\n  @Input('clrFlash')\n  set clrFlash(value: boolean | string) {\n    this._flash = isBooleanAttributeSet(value);\n  }\n\n  private _flashDanger: boolean;\n  @HostBinding('class.flash-danger')\n  get flashDangerClass() {\n    return this._flashDanger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrFlashDanger')\n  set clrFlashDanger(value: boolean | string) {\n    this._flashDanger = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n\n  /**\n   * Make sure that we always will have something that is readable\n   * for the screen reader\n   */\n  get displayValue() {\n    if (this.displayval) {\n      return this.displayval;\n    }\n    return `${this.value}%`;\n  }\n\n  /**\n   * Display aria-live only when there is value and it's not 0 or equal to the max value\n   */\n  displayAriaLive() {\n    return (this.value !== undefined || this.value !== 0) && this.value !== this.max;\n  }\n\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrProgressBar } from './progress-bar';\n\nexport const CLR_PROGRESS_BAR_DIRECTIVES: Type<any>[] = [ClrProgressBar];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_PROGRESS_BAR_DIRECTIVES],\n  exports: [CLR_PROGRESS_BAR_DIRECTIVES],\n})\nexport class ClrProgressBarModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonModule } from './button/button.module';\nimport { ClrDataModule } from './data/data.module';\nimport { ClrDragAndDropModule } from './utils/drag-and-drop/drag-and-drop.module';\nimport { ClrEmphasisModule } from './emphasis/emphasis.module';\nimport { ClrFormsModule } from './forms/forms.module';\nimport { ClrIconModule } from './icon/icon.module';\nimport { ClrLayoutModule } from './layout/layout.module';\nimport { ClrModalModule } from './modal/modal.module';\nimport { ClrPopoverModule } from './popover/popover.module';\nimport { ClrConditionalModule } from './utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from './utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrFocusTrapModule } from './utils/focus-trap/focus-trap.module';\nimport { ClrLoadingModule } from './utils/loading/loading.module';\nimport { ClrWizardModule } from './wizard/wizard.module';\nimport { ClrStepperModule } from './accordion/stepper/stepper.module';\nimport { ClrSpinnerModule } from './progress/spinner/spinner.module';\nimport { ClrProgressBarModule } from './progress/progress-bars/progress-bar.module';\nimport { ClrPopoverModuleNext } from './utils/popover/popover.module';\n\n@NgModule({\n  exports: [\n    ClrEmphasisModule,\n    ClrDataModule,\n    ClrIconModule,\n    ClrModalModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n    ClrButtonModule,\n    ClrFormsModule,\n    ClrLayoutModule,\n    ClrPopoverModule,\n    ClrWizardModule,\n    ClrDragAndDropModule,\n    ClrStepperModule,\n    ClrSpinnerModule,\n    ClrProgressBarModule,\n    ClrPopoverModuleNext,\n  ],\n})\nexport class ClarityModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const CLR_MENU_POSITIONS: string[] = [\n  'bottom-left',\n  'bottom-right',\n  'top-left',\n  'top-right',\n  'left-bottom',\n  'left-top',\n  'right-bottom',\n  'right-top',\n];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, state, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function collapse(): AnimationMetadata[] {\n  'use strict';\n  return [\n    state('true', style({ height: 0, 'overflow-y': 'hidden' })),\n    transition('true => false', [animate(defaultAnimationTiming, style({ height: '*', 'overflow-y': 'hidden' }))]),\n    transition('false => true', [style({ height: '*', 'overflow-y': 'hidden' }), animate(defaultAnimationTiming)]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fade(opacity: number = 1): AnimationMetadata[] {\n  return [\n    transition('void => *', [style({ opacity: 0 }), animate(defaultAnimationTiming, style({ opacity: opacity }))]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0 }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fadeSlide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ opacity: 0, transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0, transform: transform }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function slide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ transform: transform }))]),\n  ];\n}\n"]}