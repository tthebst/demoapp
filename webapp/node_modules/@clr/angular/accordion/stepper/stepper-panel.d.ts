import { OnInit, ElementRef } from '@angular/core';
import { FormGroupName, NgModelGroup } from '@angular/forms';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { StepperService } from './providers/stepper.service';
import { IfExpandService } from '../../utils/conditional/if-expanded.service';
import { ClrAccordionPanel } from '../accordion-panel';
import * as ɵngcc0 from '@angular/core';
export declare class ClrStepperPanel extends ClrAccordionPanel implements OnInit {
    private platformId;
    commonStrings: ClrCommonStringsService;
    private formGroupName;
    private ngModelGroup;
    private stepperService;
    isAccordion: boolean;
    headerButton: ElementRef;
    private subscriptions;
    get formGroup(): import("@angular/forms").FormGroup;
    get id(): string;
    set id(_value: string);
    constructor(platformId: Object, commonStrings: ClrCommonStringsService, formGroupName: FormGroupName, ngModelGroup: NgModelGroup, stepperService: StepperService, ifExpandService: IfExpandService, id: string);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private listenToFocusChanges;
    private triggerAllFormControlValidationIfError;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrStepperPanel>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrStepperPanel, "clr-stepper-panel", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1wYW5lbC5kLnRzIiwic291cmNlcyI6WyJzdGVwcGVyLXBhbmVsLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFNQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwTmFtZSwgTmdNb2RlbEdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9pMThuL2NvbW1vbi1zdHJpbmdzLnNlcnZpY2UnO1xuaW1wb3J0IHsgU3RlcHBlclNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9zdGVwcGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWZFeHBhbmRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvY29uZGl0aW9uYWwvaWYtZXhwYW5kZWQuc2VydmljZSc7XG5pbXBvcnQgeyBDbHJBY2NvcmRpb25QYW5lbCB9IGZyb20gJy4uL2FjY29yZGlvbi1wYW5lbCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDbHJTdGVwcGVyUGFuZWwgZXh0ZW5kcyBDbHJBY2NvcmRpb25QYW5lbCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlO1xuICAgIHByaXZhdGUgZm9ybUdyb3VwTmFtZTtcbiAgICBwcml2YXRlIG5nTW9kZWxHcm91cDtcbiAgICBwcml2YXRlIHN0ZXBwZXJTZXJ2aWNlO1xuICAgIGlzQWNjb3JkaW9uOiBib29sZWFuO1xuICAgIGhlYWRlckJ1dHRvbjogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbnM7XG4gICAgZ2V0IGZvcm1Hcm91cCgpOiBpbXBvcnQoXCJAYW5ndWxhci9mb3Jtc1wiKS5Gb3JtR3JvdXA7XG4gICAgZ2V0IGlkKCk6IHN0cmluZztcbiAgICBzZXQgaWQoX3ZhbHVlOiBzdHJpbmcpO1xuICAgIGNvbnN0cnVjdG9yKHBsYXRmb3JtSWQ6IE9iamVjdCwgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UsIGZvcm1Hcm91cE5hbWU6IEZvcm1Hcm91cE5hbWUsIG5nTW9kZWxHcm91cDogTmdNb2RlbEdyb3VwLCBzdGVwcGVyU2VydmljZTogU3RlcHBlclNlcnZpY2UsIGlmRXhwYW5kU2VydmljZTogSWZFeHBhbmRTZXJ2aWNlLCBpZDogc3RyaW5nKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBsaXN0ZW5Ub0ZvY3VzQ2hhbmdlcztcbiAgICBwcml2YXRlIHRyaWdnZXJBbGxGb3JtQ29udHJvbFZhbGlkYXRpb25JZkVycm9yO1xufVxuIl19