import { QueryList, SimpleChanges, OnInit, AfterViewInit, OnDestroy, OnChanges } from '@angular/core';
import { FormGroupDirective, NgForm } from '@angular/forms';
import { Subscription } from 'rxjs';
import { StepperService } from './providers/stepper.service';
import { ClrStepperPanel } from './stepper-panel';
import * as ɵngcc0 from '@angular/core';
export declare class ClrStepper implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    private formGroup;
    private ngForm;
    private stepperService;
    initialPanel: string;
    panels: QueryList<ClrStepperPanel>;
    subscriptions: Subscription[];
    form: FormGroupDirective | NgForm;
    constructor(formGroup: FormGroupDirective, ngForm: NgForm, stepperService: StepperService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private listenForFormResetChanges;
    private listenForPanelsCompleted;
    private setPanelsWithFormErrors;
    private listenForDOMChanges;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrStepper>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrStepper, "form[clrStepper]", never, {
    "initialPanel": "clrInitialStep";
}, {}, ["panels"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5kLnRzIiwic291cmNlcyI6WyJzdGVwcGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeUxpc3QsIFNpbXBsZUNoYW5nZXMsIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cERpcmVjdGl2ZSwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBTdGVwcGVyU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL3N0ZXBwZXIuc2VydmljZSc7XG5pbXBvcnQgeyBDbHJTdGVwcGVyUGFuZWwgfSBmcm9tICcuL3N0ZXBwZXItcGFuZWwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyU3RlcHBlciBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgZm9ybUdyb3VwO1xuICAgIHByaXZhdGUgbmdGb3JtO1xuICAgIHByaXZhdGUgc3RlcHBlclNlcnZpY2U7XG4gICAgaW5pdGlhbFBhbmVsOiBzdHJpbmc7XG4gICAgcGFuZWxzOiBRdWVyeUxpc3Q8Q2xyU3RlcHBlclBhbmVsPjtcbiAgICBzdWJzY3JpcHRpb25zOiBTdWJzY3JpcHRpb25bXTtcbiAgICBmb3JtOiBGb3JtR3JvdXBEaXJlY3RpdmUgfCBOZ0Zvcm07XG4gICAgY29uc3RydWN0b3IoZm9ybUdyb3VwOiBGb3JtR3JvdXBEaXJlY3RpdmUsIG5nRm9ybTogTmdGb3JtLCBzdGVwcGVyU2VydmljZTogU3RlcHBlclNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIGxpc3RlbkZvckZvcm1SZXNldENoYW5nZXM7XG4gICAgcHJpdmF0ZSBsaXN0ZW5Gb3JQYW5lbHNDb21wbGV0ZWQ7XG4gICAgcHJpdmF0ZSBzZXRQYW5lbHNXaXRoRm9ybUVycm9ycztcbiAgICBwcml2YXRlIGxpc3RlbkZvckRPTUNoYW5nZXM7XG59XG4iXX0=