import { OnDestroy } from '@angular/core';
import { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';
import { VerticalNavIconService } from './providers/vertical-nav-icon.service';
import { VerticalNavService } from './providers/vertical-nav.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrVerticalNav implements OnDestroy {
    private _navService;
    private _navIconService;
    private _navGroupRegistrationService;
    commonStrings: ClrCommonStringsService;
    get collapsible(): boolean;
    set collapsible(value: boolean);
    get collapsed(): boolean;
    set collapsed(value: boolean);
    private _collapsedChanged;
    get hasNavGroups(): boolean;
    get hasIcons(): boolean;
    get ariaExpanded(): string;
    private _sub;
    constructor(_navService: VerticalNavService, _navIconService: VerticalNavIconService, _navGroupRegistrationService: VerticalNavGroupRegistrationService, commonStrings: ClrCommonStringsService);
    toggleByButton(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrVerticalNav>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrVerticalNav, "clr-vertical-nav", never, {
    "collapsible": "clrVerticalNavCollapsible";
    "collapsed": "clrVerticalNavCollapsed";
}, {
    "_collapsedChanged": "clrVerticalNavCollapsedChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVydGljYWwtbmF2LmQudHMiLCJzb3VyY2VzIjpbInZlcnRpY2FsLW5hdi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWZXJ0aWNhbE5hdkdyb3VwUmVnaXN0cmF0aW9uU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL3ZlcnRpY2FsLW5hdi1ncm91cC1yZWdpc3RyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBWZXJ0aWNhbE5hdkljb25TZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvdmVydGljYWwtbmF2LWljb24uc2VydmljZSc7XG5pbXBvcnQgeyBWZXJ0aWNhbE5hdlNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy92ZXJ0aWNhbC1uYXYuc2VydmljZSc7XG5pbXBvcnQgeyBDbHJDb21tb25TdHJpbmdzU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3Muc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDbHJWZXJ0aWNhbE5hdiBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBfbmF2U2VydmljZTtcbiAgICBwcml2YXRlIF9uYXZJY29uU2VydmljZTtcbiAgICBwcml2YXRlIF9uYXZHcm91cFJlZ2lzdHJhdGlvblNlcnZpY2U7XG4gICAgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2U7XG4gICAgZ2V0IGNvbGxhcHNpYmxlKCk6IGJvb2xlYW47XG4gICAgc2V0IGNvbGxhcHNpYmxlKHZhbHVlOiBib29sZWFuKTtcbiAgICBnZXQgY29sbGFwc2VkKCk6IGJvb2xlYW47XG4gICAgc2V0IGNvbGxhcHNlZCh2YWx1ZTogYm9vbGVhbik7XG4gICAgcHJpdmF0ZSBfY29sbGFwc2VkQ2hhbmdlZDtcbiAgICBnZXQgaGFzTmF2R3JvdXBzKCk6IGJvb2xlYW47XG4gICAgZ2V0IGhhc0ljb25zKCk6IGJvb2xlYW47XG4gICAgZ2V0IGFyaWFFeHBhbmRlZCgpOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfc3ViO1xuICAgIGNvbnN0cnVjdG9yKF9uYXZTZXJ2aWNlOiBWZXJ0aWNhbE5hdlNlcnZpY2UsIF9uYXZJY29uU2VydmljZTogVmVydGljYWxOYXZJY29uU2VydmljZSwgX25hdkdyb3VwUmVnaXN0cmF0aW9uU2VydmljZTogVmVydGljYWxOYXZHcm91cFJlZ2lzdHJhdGlvblNlcnZpY2UsIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlKTtcbiAgICB0b2dnbGVCeUJ1dHRvbigpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=